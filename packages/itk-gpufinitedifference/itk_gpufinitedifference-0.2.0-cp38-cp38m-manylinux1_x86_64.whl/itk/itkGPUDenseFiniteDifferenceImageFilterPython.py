# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGPUDenseFiniteDifferenceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGPUDenseFiniteDifferenceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkGPUDenseFiniteDifferenceImageFilterPython
            return _itkGPUDenseFiniteDifferenceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGPUDenseFiniteDifferenceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGPUDenseFiniteDifferenceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGPUDenseFiniteDifferenceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkGPUImagePython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import pyBasePython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import itkRGBAPixelPython
import itkImageRegionPython
import ITKCommonBasePython
import itkIndexPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBPixelPython
import itkGPUDataManagerPython
import itkGPUFiniteDifferenceFunctionPython
import itkGPUFiniteDifferenceImageFilterPython
import itkGPUInPlaceImageFilterPython
import itkGPUImageToImageFilterPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython

def itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_New():
  return itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33.New()


def itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_New():
  return itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33.New()


def itkGPUDenseFiniteDifferenceImageFilterGID3GID3_New():
  return itkGPUDenseFiniteDifferenceImageFilterGID3GID3.New()


def itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_New():
  return itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3.New()


def itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_New():
  return itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22.New()


def itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_New():
  return itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22.New()


def itkGPUDenseFiniteDifferenceImageFilterGID2GID2_New():
  return itkGPUDenseFiniteDifferenceImageFilterGID2GID2.New()


def itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_New():
  return itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2.New()


def itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New()


def itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_New():
  return itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New()


def itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_New():
  return itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New()


def itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_New():
  return itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New()


def itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_New():
  return itkDenseFiniteDifferenceImageFilterGICVF33GICVF33.New()


def itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_New():
  return itkDenseFiniteDifferenceImageFilterGIVF33GIVF33.New()


def itkDenseFiniteDifferenceImageFilterGID3GID3_New():
  return itkDenseFiniteDifferenceImageFilterGID3GID3.New()


def itkDenseFiniteDifferenceImageFilterGIF3GIF3_New():
  return itkDenseFiniteDifferenceImageFilterGIF3GIF3.New()


def itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_New():
  return itkDenseFiniteDifferenceImageFilterGICVF22GICVF22.New()


def itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_New():
  return itkDenseFiniteDifferenceImageFilterGIVF22GIVF22.New()


def itkDenseFiniteDifferenceImageFilterGID2GID2_New():
  return itkDenseFiniteDifferenceImageFilterGID2GID2.New()


def itkDenseFiniteDifferenceImageFilterGIF2GIF2_New():
  return itkDenseFiniteDifferenceImageFilterGIF2GIF2.New()

class itkDenseFiniteDifferenceImageFilterGICVF22GICVF22(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGICVF22GICVF22):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGICVF22GICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGICVF22GICVF22

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGICVF22GICVF22 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGICVF22GICVF22"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGICVF22GICVF22

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGICVF22GICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGICVF22GICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGICVF22GICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGICVF22GICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_swigregister
itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_swigregister(itkDenseFiniteDifferenceImageFilterGICVF22GICVF22)

def itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGICVF22GICVF22 *":
    """itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGICVF22GICVF22"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(obj)

class itkDenseFiniteDifferenceImageFilterGICVF33GICVF33(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGICVF33GICVF33):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGICVF33GICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGICVF33GICVF33

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGICVF33GICVF33 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGICVF33GICVF33"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGICVF33GICVF33

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGICVF33GICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGICVF33GICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGICVF33GICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGICVF33GICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_swigregister
itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_swigregister(itkDenseFiniteDifferenceImageFilterGICVF33GICVF33)

def itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGICVF33GICVF33 *":
    """itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGICVF33GICVF33"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(obj)

class itkDenseFiniteDifferenceImageFilterGID2GID2(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGID2GID2):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGID2GID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGID2GID2

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGID2GID2 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGID2GID2"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGID2GID2

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGID2GID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGID2GID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGID2GID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGID2GID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGID2GID2_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_swigregister
itkDenseFiniteDifferenceImageFilterGID2GID2_swigregister(itkDenseFiniteDifferenceImageFilterGID2GID2)

def itkDenseFiniteDifferenceImageFilterGID2GID2_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGID2GID2 *":
    """itkDenseFiniteDifferenceImageFilterGID2GID2_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGID2GID2"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID2GID2_cast(obj)

class itkDenseFiniteDifferenceImageFilterGID3GID3(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGID3GID3):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGID3GID3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGID3GID3

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGID3GID3 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGID3GID3"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGID3GID3

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGID3GID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGID3GID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGID3GID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGID3GID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGID3GID3_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_swigregister
itkDenseFiniteDifferenceImageFilterGID3GID3_swigregister(itkDenseFiniteDifferenceImageFilterGID3GID3)

def itkDenseFiniteDifferenceImageFilterGID3GID3_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGID3GID3 *":
    """itkDenseFiniteDifferenceImageFilterGID3GID3_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGID3GID3"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGID3GID3_cast(obj)

class itkDenseFiniteDifferenceImageFilterGIF2GIF2(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGIF2GIF2):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGIF2GIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGIF2GIF2

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIF2GIF2 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIF2GIF2"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGIF2GIF2

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGIF2GIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGIF2GIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGIF2GIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGIF2GIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGIF2GIF2_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_swigregister
itkDenseFiniteDifferenceImageFilterGIF2GIF2_swigregister(itkDenseFiniteDifferenceImageFilterGIF2GIF2)

def itkDenseFiniteDifferenceImageFilterGIF2GIF2_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIF2GIF2 *":
    """itkDenseFiniteDifferenceImageFilterGIF2GIF2_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIF2GIF2"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF2GIF2_cast(obj)

class itkDenseFiniteDifferenceImageFilterGIF3GIF3(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGIF3GIF3):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGIF3GIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGIF3GIF3

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIF3GIF3 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIF3GIF3"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGIF3GIF3

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGIF3GIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGIF3GIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGIF3GIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGIF3GIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGIF3GIF3_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_swigregister
itkDenseFiniteDifferenceImageFilterGIF3GIF3_swigregister(itkDenseFiniteDifferenceImageFilterGIF3GIF3)

def itkDenseFiniteDifferenceImageFilterGIF3GIF3_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIF3GIF3 *":
    """itkDenseFiniteDifferenceImageFilterGIF3GIF3_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIF3GIF3"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIF3GIF3_cast(obj)

class itkDenseFiniteDifferenceImageFilterGIVF22GIVF22(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGIVF22GIVF22):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGIVF22GIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGIVF22GIVF22

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIVF22GIVF22 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIVF22GIVF22"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGIVF22GIVF22

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGIVF22GIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGIVF22GIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGIVF22GIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGIVF22GIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_swigregister
itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_swigregister(itkDenseFiniteDifferenceImageFilterGIVF22GIVF22)

def itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIVF22GIVF22 *":
    """itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIVF22GIVF22"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(obj)

class itkDenseFiniteDifferenceImageFilterGIVF33GIVF33(itkGPUFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterGIVF33GIVF33):
    """Proxy of C++ itkDenseFiniteDifferenceImageFilterGIVF33GIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_OutputAdditiveOperatorsCheck
    OutputAdditiveAndAssignOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_OutputAdditiveAndAssignOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkDenseFiniteDifferenceImageFilterGIVF33GIVF33

    def cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIVF33GIVF33 *":
        """cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIVF33GIVF33"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkDenseFiniteDifferenceImageFilterGIVF33GIVF33

        Create a new object of the class itkDenseFiniteDifferenceImageFilterGIVF33GIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDenseFiniteDifferenceImageFilterGIVF33GIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDenseFiniteDifferenceImageFilterGIVF33GIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDenseFiniteDifferenceImageFilterGIVF33GIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_swigregister
itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_swigregister(itkDenseFiniteDifferenceImageFilterGIVF33GIVF33)

def itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(obj: 'itkLightObject') -> "itkDenseFiniteDifferenceImageFilterGIVF33GIVF33 *":
    """itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(itkLightObject obj) -> itkDenseFiniteDifferenceImageFilterGIVF33GIVF33"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(obj)

class itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGICVF22GICVF22):
    """Proxy of C++ itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self, itkGPUImageCVF22 output)
        GraftOutput(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageCVF22 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGICVF33GICVF33):
    """Proxy of C++ itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self, itkGPUImageCVF33 output)
        GraftOutput(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageCVF33 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGID2GID2):
    """Proxy of C++ itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self, itkGPUImageD2 output)
        GraftOutput(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageD2 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGID3GID3):
    """Proxy of C++ itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self, itkGPUImageD3 output)
        GraftOutput(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageD3 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGIF2GIF2):
    """Proxy of C++ itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self, itkGPUImageF2 output)
        GraftOutput(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageF2 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGIF3GIF3):
    """Proxy of C++ itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self, itkGPUImageF3 output)
        GraftOutput(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageF3 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGIVF22GIVF22):
    """Proxy of C++ itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self, itkGPUImageVF22 output)
        GraftOutput(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageVF22 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter(itkDenseFiniteDifferenceImageFilterGIVF33GIVF33):
    """Proxy of C++ itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Pointer":
        """__New_orig__() -> itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Pointer":
        """Clone(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self) -> itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Pointer"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Clone(self)


    def SetGPUEnabled(self, _arg: 'bool const') -> "void":
        """SetGPUEnabled(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self, bool const _arg)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_SetGPUEnabled(self, _arg)


    def GetGPUEnabled(self) -> "bool":
        """GetGPUEnabled(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self) -> bool"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetGPUEnabled(self)


    def GPUEnabledOn(self) -> "void":
        """GPUEnabledOn(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GPUEnabledOn(self)


    def GPUEnabledOff(self) -> "void":
        """GPUEnabledOff(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GPUEnabledOff(self)


    def GenerateData(self) -> "void":
        """GenerateData(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GenerateData(self)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self, itkGPUImageVF33 output)
        GraftOutput(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self, std::string const & key, itkGPUImageVF33 output)
        """
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GraftOutput(self, *args)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.Clone = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Clone, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.SetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_SetGPUEnabled, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GetGPUEnabled = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetGPUEnabled, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GPUEnabledOn = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GPUEnabledOn, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GPUEnabledOff = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GPUEnabledOff, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GenerateData = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GenerateData, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GraftOutput = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GraftOutput, None, itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister
itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)

def itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter___New_orig__() -> "itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Pointer":
    """itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter___New_orig__() -> itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_Pointer"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter___New_orig__()

def itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter *":
    """itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGID2GID2DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGID3GID3DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter(itkGPUImageToImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister
itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister(itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)

def itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter *":
    """itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGID2GID2DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGID3GID3DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter(itkGPUInPlaceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetStateToInitialized(self) -> "void":
        """SetStateToInitialized(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_SetStateToInitialized(self)


    def SetStateToUninitialized(self) -> "void":
        """SetStateToUninitialized(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self)"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_SetStateToUninitialized(self)

    OutputPixelIsFloatingPointCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_OutputPixelIsFloatingPointCheck

    def GetInitTime(self) -> "itkTimeProbe const &":
        """GetInitTime(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetInitTime(self)


    def GetComputeUpdateTime(self) -> "itkTimeProbe const &":
        """GetComputeUpdateTime(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetComputeUpdateTime(self)


    def GetApplyUpdateTime(self) -> "itkTimeProbe const &":
        """GetApplyUpdateTime(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetApplyUpdateTime(self)


    def GetSmoothFieldTime(self) -> "itkTimeProbe const &":
        """GetSmoothFieldTime(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter self) -> itkTimeProbe"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetSmoothFieldTime(self)

    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter

    def cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter *":
        """cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter

        Create a new object of the class itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.SetStateToInitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_SetStateToInitialized, None, itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.SetStateToUninitialized = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_SetStateToUninitialized, None, itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GetInitTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetInitTime, None, itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GetComputeUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetComputeUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GetApplyUpdateTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetApplyUpdateTime, None, itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter.GetSmoothFieldTime = new_instancemethod(_itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_GetSmoothFieldTime, None, itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister
itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_swigregister(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter)

def itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj: 'itkLightObject') -> "itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter *":
    """itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(itkLightObject obj) -> itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22(itkGPUFiniteDifferenceImageFilterGICVF22GICVF22DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_swigregister
itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_swigregister(itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22)

def itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22 *":
    """itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF22GICVF22_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33(itkGPUFiniteDifferenceImageFilterGICVF33GICVF33DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_swigregister
itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_swigregister(itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33)

def itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33 *":
    """itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGICVF33GICVF33_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGID2GID2(itkGPUFiniteDifferenceImageFilterGID2GID2DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGID2GID2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGID2GID2

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGID2GID2 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGID2GID2"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGID2GID2

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGID2GID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGID2GID2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGID2GID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGID2GID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGID2GID2_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_swigregister
itkGPUDenseFiniteDifferenceImageFilterGID2GID2_swigregister(itkGPUDenseFiniteDifferenceImageFilterGID2GID2)

def itkGPUDenseFiniteDifferenceImageFilterGID2GID2_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGID2GID2_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGID2GID2_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGID2GID2 *":
    """itkGPUDenseFiniteDifferenceImageFilterGID2GID2_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGID2GID2"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID2GID2_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGID3GID3(itkGPUFiniteDifferenceImageFilterGID3GID3DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGID3GID3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGID3GID3

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGID3GID3 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGID3GID3"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGID3GID3

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGID3GID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGID3GID3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGID3GID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGID3GID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGID3GID3_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_swigregister
itkGPUDenseFiniteDifferenceImageFilterGID3GID3_swigregister(itkGPUDenseFiniteDifferenceImageFilterGID3GID3)

def itkGPUDenseFiniteDifferenceImageFilterGID3GID3_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGID3GID3_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGID3GID3_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGID3GID3 *":
    """itkGPUDenseFiniteDifferenceImageFilterGID3GID3_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGID3GID3"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGID3GID3_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2(itkGPUFiniteDifferenceImageFilterGIF2GIF2DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_swigregister
itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_swigregister(itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2)

def itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2 *":
    """itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF2GIF2_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3(itkGPUFiniteDifferenceImageFilterGIF3GIF3DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_swigregister
itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_swigregister(itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3)

def itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3 *":
    """itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIF3GIF3_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22(itkGPUFiniteDifferenceImageFilterGIVF22GIVF22DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_swigregister
itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_swigregister(itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22)

def itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22 *":
    """itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF22GIVF22_cast(obj)

class itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33(itkGPUFiniteDifferenceImageFilterGIVF33GIVF33DenseFiniteDifferenceImageFilter):
    """Proxy of C++ itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputTimesDoubleCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_OutputTimesDoubleCheck
    OutputAdditiveOperatorsCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_OutputAdditiveOperatorsCheck
    InputConvertibleToOutputCheck = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_InputConvertibleToOutputCheck

    def GetOpenCLSource() -> "char const *":
        """GetOpenCLSource() -> char const *"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_GetOpenCLSource()

    GetOpenCLSource = staticmethod(GetOpenCLSource)
    __swig_destroy__ = _itkGPUDenseFiniteDifferenceImageFilterPython.delete_itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33

    def cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33 *":
        """cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33"""
        return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33

        Create a new object of the class itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_swigregister = _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_swigregister
itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_swigregister(itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33)

def itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_GetOpenCLSource() -> "char const *":
    """itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_GetOpenCLSource() -> char const *"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_GetOpenCLSource()

def itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(obj: 'itkLightObject') -> "itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33 *":
    """itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(itkLightObject obj) -> itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33"""
    return _itkGPUDenseFiniteDifferenceImageFilterPython.itkGPUDenseFiniteDifferenceImageFilterGIVF33GIVF33_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like
def gpu_image_to_image_filter(*args, **kwargs):
    """Procedural interface for GPUImageToImageFilter"""
    import itk
    instance = itk.GPUImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gpu_image_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GPUImageToImageFilter, itkTemplate.itkTemplate):
        gpu_image_to_image_filter.__doc__ = itk.GPUImageToImageFilter.values()[0].__doc__
    else:
        gpu_image_to_image_filter.__doc__ = itk.GPUImageToImageFilter.__doc__

import itkHelpers
@itkHelpers.accept_numpy_array_like
def gpu_finite_difference_image_filter(*args, **kwargs):
    """Procedural interface for GPUFiniteDifferenceImageFilter"""
    import itk
    instance = itk.GPUFiniteDifferenceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gpu_finite_difference_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GPUFiniteDifferenceImageFilter, itkTemplate.itkTemplate):
        gpu_finite_difference_image_filter.__doc__ = itk.GPUFiniteDifferenceImageFilter.values()[0].__doc__
    else:
        gpu_finite_difference_image_filter.__doc__ = itk.GPUFiniteDifferenceImageFilter.__doc__

import itkHelpers
@itkHelpers.accept_numpy_array_like
def dense_finite_difference_image_filter(*args, **kwargs):
    """Procedural interface for DenseFiniteDifferenceImageFilter"""
    import itk
    instance = itk.DenseFiniteDifferenceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def dense_finite_difference_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.DenseFiniteDifferenceImageFilter, itkTemplate.itkTemplate):
        dense_finite_difference_image_filter.__doc__ = itk.DenseFiniteDifferenceImageFilter.values()[0].__doc__
    else:
        dense_finite_difference_image_filter.__doc__ = itk.DenseFiniteDifferenceImageFilter.__doc__

import itkHelpers
@itkHelpers.accept_numpy_array_like
def gpu_in_place_image_filter(*args, **kwargs):
    """Procedural interface for GPUInPlaceImageFilter"""
    import itk
    instance = itk.GPUInPlaceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gpu_in_place_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GPUInPlaceImageFilter, itkTemplate.itkTemplate):
        gpu_in_place_image_filter.__doc__ = itk.GPUInPlaceImageFilter.values()[0].__doc__
    else:
        gpu_in_place_image_filter.__doc__ = itk.GPUInPlaceImageFilter.__doc__

import itkHelpers
@itkHelpers.accept_numpy_array_like
def gpu_dense_finite_difference_image_filter(*args, **kwargs):
    """Procedural interface for GPUDenseFiniteDifferenceImageFilter"""
    import itk
    instance = itk.GPUDenseFiniteDifferenceImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gpu_dense_finite_difference_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.GPUDenseFiniteDifferenceImageFilter, itkTemplate.itkTemplate):
        gpu_dense_finite_difference_image_filter.__doc__ = itk.GPUDenseFiniteDifferenceImageFilter.values()[0].__doc__
    else:
        gpu_dense_finite_difference_image_filter.__doc__ = itk.GPUDenseFiniteDifferenceImageFilter.__doc__




