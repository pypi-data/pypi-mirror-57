# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGPUDataManagerPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGPUDataManagerPython', [dirname(__file__)])
        except ImportError:
            import _itkGPUDataManagerPython
            return _itkGPUDataManagerPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGPUDataManagerPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGPUDataManagerPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGPUDataManagerPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython

def itkGPUDataManager_New():
  return itkGPUDataManager.New()

class itkGPUDataManager(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkGPUDataManager class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUDataManager_Pointer":
        """__New_orig__() -> itkGPUDataManager_Pointer"""
        return _itkGPUDataManagerPython.itkGPUDataManager___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUDataManager_Pointer":
        """Clone(itkGPUDataManager self) -> itkGPUDataManager_Pointer"""
        return _itkGPUDataManagerPython.itkGPUDataManager_Clone(self)


    def SetBufferSize(self, num: 'unsigned int') -> "void":
        """SetBufferSize(itkGPUDataManager self, unsigned int num)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetBufferSize(self, num)


    def GetBufferSize(self) -> "unsigned int":
        """GetBufferSize(itkGPUDataManager self) -> unsigned int"""
        return _itkGPUDataManagerPython.itkGPUDataManager_GetBufferSize(self)


    def SetBufferFlag(self, flags: 'unsigned long') -> "void":
        """SetBufferFlag(itkGPUDataManager self, unsigned long flags)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetBufferFlag(self, flags)


    def SetCPUBufferPointer(self, ptr: 'void *') -> "void":
        """SetCPUBufferPointer(itkGPUDataManager self, void * ptr)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetCPUBufferPointer(self, ptr)


    def SetCPUDirtyFlag(self, isDirty: 'bool') -> "void":
        """SetCPUDirtyFlag(itkGPUDataManager self, bool isDirty)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetCPUDirtyFlag(self, isDirty)


    def SetGPUDirtyFlag(self, isDirty: 'bool') -> "void":
        """SetGPUDirtyFlag(itkGPUDataManager self, bool isDirty)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetGPUDirtyFlag(self, isDirty)


    def SetCPUBufferDirty(self) -> "void":
        """SetCPUBufferDirty(itkGPUDataManager self)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetCPUBufferDirty(self)


    def SetGPUBufferDirty(self) -> "void":
        """SetGPUBufferDirty(itkGPUDataManager self)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetGPUBufferDirty(self)


    def IsCPUBufferDirty(self) -> "bool":
        """IsCPUBufferDirty(itkGPUDataManager self) -> bool"""
        return _itkGPUDataManagerPython.itkGPUDataManager_IsCPUBufferDirty(self)


    def IsGPUBufferDirty(self) -> "bool":
        """IsGPUBufferDirty(itkGPUDataManager self) -> bool"""
        return _itkGPUDataManagerPython.itkGPUDataManager_IsGPUBufferDirty(self)


    def UpdateCPUBuffer(self) -> "void":
        """UpdateCPUBuffer(itkGPUDataManager self)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_UpdateCPUBuffer(self)


    def UpdateGPUBuffer(self) -> "void":
        """UpdateGPUBuffer(itkGPUDataManager self)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_UpdateGPUBuffer(self)


    def Allocate(self) -> "void":
        """Allocate(itkGPUDataManager self)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_Allocate(self)


    def SetCurrentCommandQueue(self, queueid: 'int') -> "void":
        """SetCurrentCommandQueue(itkGPUDataManager self, int queueid)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_SetCurrentCommandQueue(self, queueid)


    def GetCurrentCommandQueueID(self) -> "int":
        """GetCurrentCommandQueueID(itkGPUDataManager self) -> int"""
        return _itkGPUDataManagerPython.itkGPUDataManager_GetCurrentCommandQueueID(self)


    def Update(self) -> "bool":
        """Update(itkGPUDataManager self) -> bool"""
        return _itkGPUDataManagerPython.itkGPUDataManager_Update(self)


    def Graft(self, data: 'itkGPUDataManager') -> "void":
        """Graft(itkGPUDataManager self, itkGPUDataManager data)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_Graft(self, data)


    def Initialize(self) -> "void":
        """Initialize(itkGPUDataManager self)"""
        return _itkGPUDataManagerPython.itkGPUDataManager_Initialize(self)


    def GetGPUBufferPointer(self) -> "_cl_mem **":
        """GetGPUBufferPointer(itkGPUDataManager self) -> _cl_mem **"""
        return _itkGPUDataManagerPython.itkGPUDataManager_GetGPUBufferPointer(self)


    def GetCPUBufferPointer(self) -> "void *":
        """GetCPUBufferPointer(itkGPUDataManager self) -> void *"""
        return _itkGPUDataManagerPython.itkGPUDataManager_GetCPUBufferPointer(self)

    __swig_destroy__ = _itkGPUDataManagerPython.delete_itkGPUDataManager

    def cast(obj: 'itkLightObject') -> "itkGPUDataManager *":
        """cast(itkLightObject obj) -> itkGPUDataManager"""
        return _itkGPUDataManagerPython.itkGPUDataManager_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUDataManager

        Create a new object of the class itkGPUDataManager and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUDataManager.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUDataManager.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUDataManager.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUDataManager.Clone = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_Clone, None, itkGPUDataManager)
itkGPUDataManager.SetBufferSize = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetBufferSize, None, itkGPUDataManager)
itkGPUDataManager.GetBufferSize = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_GetBufferSize, None, itkGPUDataManager)
itkGPUDataManager.SetBufferFlag = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetBufferFlag, None, itkGPUDataManager)
itkGPUDataManager.SetCPUBufferPointer = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetCPUBufferPointer, None, itkGPUDataManager)
itkGPUDataManager.SetCPUDirtyFlag = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetCPUDirtyFlag, None, itkGPUDataManager)
itkGPUDataManager.SetGPUDirtyFlag = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetGPUDirtyFlag, None, itkGPUDataManager)
itkGPUDataManager.SetCPUBufferDirty = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetCPUBufferDirty, None, itkGPUDataManager)
itkGPUDataManager.SetGPUBufferDirty = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetGPUBufferDirty, None, itkGPUDataManager)
itkGPUDataManager.IsCPUBufferDirty = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_IsCPUBufferDirty, None, itkGPUDataManager)
itkGPUDataManager.IsGPUBufferDirty = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_IsGPUBufferDirty, None, itkGPUDataManager)
itkGPUDataManager.UpdateCPUBuffer = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_UpdateCPUBuffer, None, itkGPUDataManager)
itkGPUDataManager.UpdateGPUBuffer = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_UpdateGPUBuffer, None, itkGPUDataManager)
itkGPUDataManager.Allocate = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_Allocate, None, itkGPUDataManager)
itkGPUDataManager.SetCurrentCommandQueue = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_SetCurrentCommandQueue, None, itkGPUDataManager)
itkGPUDataManager.GetCurrentCommandQueueID = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_GetCurrentCommandQueueID, None, itkGPUDataManager)
itkGPUDataManager.Update = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_Update, None, itkGPUDataManager)
itkGPUDataManager.Graft = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_Graft, None, itkGPUDataManager)
itkGPUDataManager.Initialize = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_Initialize, None, itkGPUDataManager)
itkGPUDataManager.GetGPUBufferPointer = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_GetGPUBufferPointer, None, itkGPUDataManager)
itkGPUDataManager.GetCPUBufferPointer = new_instancemethod(_itkGPUDataManagerPython.itkGPUDataManager_GetCPUBufferPointer, None, itkGPUDataManager)
itkGPUDataManager_swigregister = _itkGPUDataManagerPython.itkGPUDataManager_swigregister
itkGPUDataManager_swigregister(itkGPUDataManager)

def itkGPUDataManager___New_orig__() -> "itkGPUDataManager_Pointer":
    """itkGPUDataManager___New_orig__() -> itkGPUDataManager_Pointer"""
    return _itkGPUDataManagerPython.itkGPUDataManager___New_orig__()

def itkGPUDataManager_cast(obj: 'itkLightObject') -> "itkGPUDataManager *":
    """itkGPUDataManager_cast(itkLightObject obj) -> itkGPUDataManager"""
    return _itkGPUDataManagerPython.itkGPUDataManager_cast(obj)



