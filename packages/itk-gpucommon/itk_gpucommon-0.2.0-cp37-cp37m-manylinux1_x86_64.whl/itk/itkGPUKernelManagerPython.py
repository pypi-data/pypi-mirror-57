# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkGPUKernelManagerPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGPUKernelManagerPython', [dirname(__file__)])
        except ImportError:
            import _itkGPUKernelManagerPython
            return _itkGPUKernelManagerPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGPUKernelManagerPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGPUKernelManagerPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGPUKernelManagerPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkGPUDataManagerPython
import ITKCommonBasePython
import pyBasePython

def itkGPUKernelManager_New():
  return itkGPUKernelManager.New()

class itkGPUKernelManager(ITKCommonBasePython.itkLightObject):
    """Proxy of C++ itkGPUKernelManager class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkGPUKernelManager_Pointer":
        """__New_orig__() -> itkGPUKernelManager_Pointer"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkGPUKernelManager_Pointer":
        """Clone(itkGPUKernelManager self) -> itkGPUKernelManager_Pointer"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_Clone(self)


    def LoadProgramFromFile(self, *args) -> "bool":
        """
        LoadProgramFromFile(itkGPUKernelManager self, char const * filename, char const * cPreamble) -> bool
        LoadProgramFromFile(itkGPUKernelManager self, char const * filename) -> bool
        """
        return _itkGPUKernelManagerPython.itkGPUKernelManager_LoadProgramFromFile(self, *args)


    def LoadProgramFromString(self, *args) -> "bool":
        """
        LoadProgramFromString(itkGPUKernelManager self, char const * cSource, char const * cPreamble) -> bool
        LoadProgramFromString(itkGPUKernelManager self, char const * cSource) -> bool
        """
        return _itkGPUKernelManagerPython.itkGPUKernelManager_LoadProgramFromString(self, *args)


    def CreateKernel(self, kernelName: 'char const *') -> "int":
        """CreateKernel(itkGPUKernelManager self, char const * kernelName) -> int"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_CreateKernel(self, kernelName)


    def GetKernelWorkGroupInfo(self, kernelIdx: 'int', paramName: 'unsigned int', value: 'void *') -> "int":
        """GetKernelWorkGroupInfo(itkGPUKernelManager self, int kernelIdx, unsigned int paramName, void * value) -> int"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_GetKernelWorkGroupInfo(self, kernelIdx, paramName, value)


    def GetDeviceInfo(self, paramName: 'unsigned int', argSize: 'unsigned long', argValue: 'void *') -> "int":
        """GetDeviceInfo(itkGPUKernelManager self, unsigned int paramName, unsigned long argSize, void * argValue) -> int"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_GetDeviceInfo(self, paramName, argSize, argValue)


    def SetKernelArg(self, kernelIdx: 'int', argIdx: 'unsigned int', argSize: 'unsigned long', argVal: 'void const *') -> "bool":
        """SetKernelArg(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, unsigned long argSize, void const * argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArg(self, kernelIdx, argIdx, argSize, argVal)


    def SetKernelArgWithChar(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'char') -> "bool":
        """SetKernelArgWithChar(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, char argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithChar(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithUChar(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'unsigned char') -> "bool":
        """SetKernelArgWithUChar(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, unsigned char argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithUChar(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithShort(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'short') -> "bool":
        """SetKernelArgWithShort(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, short argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithShort(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithUShort(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'unsigned short') -> "bool":
        """SetKernelArgWithUShort(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, unsigned short argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithUShort(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithInt(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'int') -> "bool":
        """SetKernelArgWithInt(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, int argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithInt(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithUInt(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'unsigned int') -> "bool":
        """SetKernelArgWithUInt(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, unsigned int argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithUInt(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithLongLong(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'long long') -> "bool":
        """SetKernelArgWithLongLong(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, long long argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithLongLong(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithULongLong(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'unsigned long long') -> "bool":
        """SetKernelArgWithULongLong(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, unsigned long long argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithULongLong(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithFloat(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'float') -> "bool":
        """SetKernelArgWithFloat(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, float argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithFloat(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithDouble(self, kernelIdx: 'int', argIdx: 'unsigned int', argVal: 'double') -> "bool":
        """SetKernelArgWithDouble(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, double argVal) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithDouble(self, kernelIdx, argIdx, argVal)


    def SetKernelArgWithImage(self, kernelIdx: 'int', argIdx: 'unsigned int', manager: 'itkGPUDataManager') -> "bool":
        """SetKernelArgWithImage(itkGPUKernelManager self, int kernelIdx, unsigned int argIdx, itkGPUDataManager manager) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithImage(self, kernelIdx, argIdx, manager)


    def LaunchKernel(self, kernelIdx: 'int', dim: 'int', globalWorkSize: 'unsigned long *', localWorkSize: 'unsigned long *') -> "bool":
        """LaunchKernel(itkGPUKernelManager self, int kernelIdx, int dim, unsigned long * globalWorkSize, unsigned long * localWorkSize) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel(self, kernelIdx, dim, globalWorkSize, localWorkSize)


    def LaunchKernel1D(self, kernelIdx: 'int', globalWorkSize: 'unsigned long', localWorkSize: 'unsigned long') -> "bool":
        """LaunchKernel1D(itkGPUKernelManager self, int kernelIdx, unsigned long globalWorkSize, unsigned long localWorkSize) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel1D(self, kernelIdx, globalWorkSize, localWorkSize)


    def LaunchKernel2D(self, kernelIdx: 'int', globalWorkSizeX: 'unsigned long', globalWorkSizeY: 'unsigned long', localWorkSizeX: 'unsigned long', localWorkSizeY: 'unsigned long') -> "bool":
        """LaunchKernel2D(itkGPUKernelManager self, int kernelIdx, unsigned long globalWorkSizeX, unsigned long globalWorkSizeY, unsigned long localWorkSizeX, unsigned long localWorkSizeY) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel2D(self, kernelIdx, globalWorkSizeX, globalWorkSizeY, localWorkSizeX, localWorkSizeY)


    def LaunchKernel3D(self, kernelIdx: 'int', globalWorkSizeX: 'unsigned long', globalWorkSizeY: 'unsigned long', globalWorkSizeZ: 'unsigned long', localWorkSizeX: 'unsigned long', localWorkSizeY: 'unsigned long', localWorkSizeZ: 'unsigned long') -> "bool":
        """LaunchKernel3D(itkGPUKernelManager self, int kernelIdx, unsigned long globalWorkSizeX, unsigned long globalWorkSizeY, unsigned long globalWorkSizeZ, unsigned long localWorkSizeX, unsigned long localWorkSizeY, unsigned long localWorkSizeZ) -> bool"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel3D(self, kernelIdx, globalWorkSizeX, globalWorkSizeY, globalWorkSizeZ, localWorkSizeX, localWorkSizeY, localWorkSizeZ)


    def SetCurrentCommandQueue(self, queueid: 'int') -> "void":
        """SetCurrentCommandQueue(itkGPUKernelManager self, int queueid)"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_SetCurrentCommandQueue(self, queueid)


    def GetCurrentCommandQueueID(self) -> "int":
        """GetCurrentCommandQueueID(itkGPUKernelManager self) -> int"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_GetCurrentCommandQueueID(self)

    __swig_destroy__ = _itkGPUKernelManagerPython.delete_itkGPUKernelManager

    def cast(obj: 'itkLightObject') -> "itkGPUKernelManager *":
        """cast(itkLightObject obj) -> itkGPUKernelManager"""
        return _itkGPUKernelManagerPython.itkGPUKernelManager_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkGPUKernelManager

        Create a new object of the class itkGPUKernelManager and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGPUKernelManager.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkGPUKernelManager.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGPUKernelManager.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGPUKernelManager.Clone = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_Clone, None, itkGPUKernelManager)
itkGPUKernelManager.LoadProgramFromFile = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_LoadProgramFromFile, None, itkGPUKernelManager)
itkGPUKernelManager.LoadProgramFromString = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_LoadProgramFromString, None, itkGPUKernelManager)
itkGPUKernelManager.CreateKernel = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_CreateKernel, None, itkGPUKernelManager)
itkGPUKernelManager.GetKernelWorkGroupInfo = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_GetKernelWorkGroupInfo, None, itkGPUKernelManager)
itkGPUKernelManager.GetDeviceInfo = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_GetDeviceInfo, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArg = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArg, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithChar = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithChar, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithUChar = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithUChar, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithShort = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithShort, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithUShort = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithUShort, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithInt = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithInt, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithUInt = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithUInt, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithLongLong = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithLongLong, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithULongLong = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithULongLong, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithFloat = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithFloat, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithDouble = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithDouble, None, itkGPUKernelManager)
itkGPUKernelManager.SetKernelArgWithImage = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetKernelArgWithImage, None, itkGPUKernelManager)
itkGPUKernelManager.LaunchKernel = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel, None, itkGPUKernelManager)
itkGPUKernelManager.LaunchKernel1D = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel1D, None, itkGPUKernelManager)
itkGPUKernelManager.LaunchKernel2D = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel2D, None, itkGPUKernelManager)
itkGPUKernelManager.LaunchKernel3D = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_LaunchKernel3D, None, itkGPUKernelManager)
itkGPUKernelManager.SetCurrentCommandQueue = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_SetCurrentCommandQueue, None, itkGPUKernelManager)
itkGPUKernelManager.GetCurrentCommandQueueID = new_instancemethod(_itkGPUKernelManagerPython.itkGPUKernelManager_GetCurrentCommandQueueID, None, itkGPUKernelManager)
itkGPUKernelManager_swigregister = _itkGPUKernelManagerPython.itkGPUKernelManager_swigregister
itkGPUKernelManager_swigregister(itkGPUKernelManager)

def itkGPUKernelManager___New_orig__() -> "itkGPUKernelManager_Pointer":
    """itkGPUKernelManager___New_orig__() -> itkGPUKernelManager_Pointer"""
    return _itkGPUKernelManagerPython.itkGPUKernelManager___New_orig__()

def itkGPUKernelManager_cast(obj: 'itkLightObject') -> "itkGPUKernelManager *":
    """itkGPUKernelManager_cast(itkLightObject obj) -> itkGPUKernelManager"""
    return _itkGPUKernelManagerPython.itkGPUKernelManager_cast(obj)



