# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from featurize_jupyterlab.proto import minetorch_pb2 as featurize__jupyterlab_dot_proto_dot_minetorch__pb2


class MinetorchStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.HeyYo = channel.unary_unary(
        '/minetorch.Minetorch/HeyYo',
        request_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.HeyMessage.SerializeToString,
        response_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.YoMessage.FromString,
        )
    self.SendLog = channel.stream_unary(
        '/minetorch.Minetorch/SendLog',
        request_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Log.SerializeToString,
        response_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.FromString,
        )
    self.AddPoint = channel.stream_unary(
        '/minetorch.Minetorch/AddPoint',
        request_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Point.SerializeToString,
        response_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.FromString,
        )
    self.CreateGraph = channel.unary_unary(
        '/minetorch.Minetorch/CreateGraph',
        request_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Graph.SerializeToString,
        response_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.FromString,
        )
    self.SendBinary = channel.stream_unary(
        '/minetorch.Minetorch/SendBinary',
        request_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Binary.SerializeToString,
        response_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.FromString,
        )
    self.GetBinary = channel.unary_stream(
        '/minetorch.Minetorch/GetBinary',
        request_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.File.SerializeToString,
        response_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Binary.FromString,
        )


class MinetorchServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def HeyYo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendLog(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddPoint(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateGraph(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendBinary(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBinary(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MinetorchServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'HeyYo': grpc.unary_unary_rpc_method_handler(
          servicer.HeyYo,
          request_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.HeyMessage.FromString,
          response_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.YoMessage.SerializeToString,
      ),
      'SendLog': grpc.stream_unary_rpc_method_handler(
          servicer.SendLog,
          request_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Log.FromString,
          response_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.SerializeToString,
      ),
      'AddPoint': grpc.stream_unary_rpc_method_handler(
          servicer.AddPoint,
          request_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Point.FromString,
          response_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.SerializeToString,
      ),
      'CreateGraph': grpc.unary_unary_rpc_method_handler(
          servicer.CreateGraph,
          request_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Graph.FromString,
          response_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.SerializeToString,
      ),
      'SendBinary': grpc.stream_unary_rpc_method_handler(
          servicer.SendBinary,
          request_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Binary.FromString,
          response_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.StandardResponse.SerializeToString,
      ),
      'GetBinary': grpc.unary_stream_rpc_method_handler(
          servicer.GetBinary,
          request_deserializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.File.FromString,
          response_serializer=featurize__jupyterlab_dot_proto_dot_minetorch__pb2.Binary.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'minetorch.Minetorch', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
