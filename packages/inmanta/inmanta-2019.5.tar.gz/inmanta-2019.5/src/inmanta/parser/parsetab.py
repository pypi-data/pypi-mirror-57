
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls\n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | for\n                | ifstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF condition \':\' blockif : IF condition \':\' stmt_list ELSE \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_type : ns_refattr_type : ns_ref \'?\'attr : attr_type IDattr : attr_type ID \'=\' constant\n           | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr_type_multi : ns_ref \'[\' \']\'attr_type_multi : ns_ref \'[\' \']\' \'?\'attr : attr_type_multi IDattr : attr_type_multi ID \'=\' constant_listattr : attr_type_multi ID \'=\' UNDEFattr : attr_type_multi ID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING PARENTSimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING PARENTS mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup\n              | map_lookup map_lookup : attr_ref \'[\' operand \']\'\n                   | local_var \'[\' operand \']\'\n                   | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operandpair_list :  map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : mls  constant : INT\n    | FLOAT\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandparam_list : operand_list : operand \',\' operand_listoperand_list : operandoperand_list :ns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'MLS_END':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,21,22,23,24,25,26,27,32,34,36,46,47,49,51,52,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,84,86,95,99,100,103,104,105,106,107,108,109,111,112,114,117,119,121,125,127,130,133,143,145,146,147,151,152,153,158,159,160,161,163,167,168,169,170,171,172,173,174,175,181,182,183,186,188,189,197,200,201,202,203,206,212,213,215,219,222,223,224,225,227,228,229,230,235,238,239,240,243,244,245,246,249,251,254,256,257,261,269,270,271,275,276,282,286,287,288,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,12,-141,-148,12,-14,-15,-16,-17,-18,12,12,-137,-152,-67,-78,-12,12,12,12,12,-99,-90,-89,12,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,12,12,12,12,-142,-147,-97,-101,-122,-123,-21,-22,-138,12,12,12,-91,12,12,-114,12,-26,-32,-27,12,12,-136,12,-107,12,-13,-108,12,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,12,-81,-33,-31,12,12,-58,12,-57,-73,-60,12,-82,-63,-106,-116,-104,-115,-105,12,-30,12,-28,-29,12,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,12,-59,12,-75,-61,-25,-66,12,-69,-71,]),'MLS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,21,22,23,24,25,26,27,32,34,36,46,47,49,51,52,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,84,86,95,99,100,103,104,105,106,107,108,109,111,112,114,117,119,121,125,127,130,133,143,145,146,147,151,152,153,158,159,160,161,163,167,168,169,170,171,172,173,174,175,181,182,183,186,188,189,197,200,201,202,203,206,212,213,215,219,222,223,224,225,227,228,229,230,235,238,239,240,243,244,245,246,249,251,254,256,257,261,269,270,271,275,276,282,286,287,288,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,13,-141,-148,13,-14,-15,-16,-17,-18,13,13,-137,-152,-67,-78,-12,13,13,13,13,-99,-90,-89,13,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,13,13,13,13,-142,-147,-97,-101,-122,-123,-21,-22,-138,13,13,13,-91,13,13,-114,13,-26,-32,-27,13,13,-136,13,-107,13,-13,-108,13,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,13,-81,-33,-31,13,13,-58,13,-57,-73,-60,13,-82,-63,-106,-116,-104,-115,-105,13,-30,13,-28,-29,13,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,13,-59,13,-75,-61,-25,-66,13,-69,-71,]),'ENTITY':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'IMPLEMENT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'IMPLEMENTATION':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'INDEX':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'CID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,28,32,33,34,36,46,47,49,50,51,52,53,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,85,87,94,95,99,100,102,103,104,105,106,107,108,109,110,111,112,114,117,119,120,121,125,127,129,130,133,143,145,146,147,151,152,153,158,159,160,161,163,164,167,168,169,170,171,172,173,174,175,181,182,183,186,188,189,198,199,201,202,203,205,206,209,210,212,213,214,215,217,219,222,223,224,225,227,228,229,235,238,239,240,243,244,245,246,248,249,251,253,254,256,257,269,270,271,275,276,282,287,288,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,37,-141,-148,15,-68,-14,-15,-16,-17,-18,-77,15,15,83,-137,-152,-67,-78,-12,99,15,15,15,15,-99,-90,-89,15,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,15,15,15,15,15,-142,-147,-133,-97,-101,-122,-123,-21,-22,-138,15,15,15,15,-91,15,99,15,-114,15,15,-26,-32,-27,-54,-55,-136,15,-107,15,-13,-108,15,-24,-64,15,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,15,-81,-33,-31,15,15,-58,15,-57,15,-73,15,15,-60,15,15,-82,-132,-63,-106,-116,-104,-115,-105,15,-30,-28,-29,-56,-135,-74,-76,-70,-72,15,-62,-23,15,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,44,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,110,117,125,130,133,143,145,146,147,152,158,159,161,163,164,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,213,214,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,248,249,251,253,254,256,257,269,270,271,275,276,282,287,288,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,94,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,20,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,20,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,20,20,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,20,-62,-23,20,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,110,117,125,130,133,143,145,146,147,152,158,159,161,163,164,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,213,214,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,248,249,251,253,254,256,257,269,270,271,275,276,282,287,288,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,32,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,32,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,32,32,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,32,-62,-23,32,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'TYPEDEF':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,34,36,42,43,46,47,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,84,85,86,87,88,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,119,120,121,122,125,127,128,129,130,131,132,133,134,135,136,137,138,143,145,146,147,151,152,153,158,159,160,161,163,164,167,168,169,170,171,172,173,174,175,181,182,183,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,209,210,212,213,214,215,216,217,219,222,223,224,225,227,228,229,233,234,235,238,239,240,241,243,244,245,246,247,248,249,251,253,254,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,275,276,280,281,282,285,287,288,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,38,-141,-148,16,41,44,45,-68,-14,-15,-16,-17,-18,-77,16,16,62,82,-137,-152,91,93,-67,-78,-12,100,16,16,16,109,62,-99,-90,-89,62,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,16,16,16,16,16,16,16,16,157,158,100,-142,-147,-133,-97,-101,-122,-123,-21,-22,-138,16,62,62,16,16,174,-91,16,100,179,93,-114,16,16,16,-26,16,16,-32,-35,191,192,193,-36,-27,-54,-55,-136,16,-107,16,-13,-108,16,-24,-64,16,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,16,-81,16,-33,-31,-34,-38,-44,-48,233,-37,16,16,16,16,-58,62,-57,16,16,-73,16,16,-60,16,16,-82,157,-132,-63,-106,-116,-104,-115,-105,62,-30,-51,-42,-28,-29,-56,-135,270,-74,-76,-70,-72,93,16,-62,-23,16,-92,-79,-80,-39,-40,-41,-45,-46,-47,-49,-50,-43,-59,-65,-75,283,284,-61,-25,-52,-53,-66,-125,-69,-71,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,27,34,35,36,46,47,49,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,103,104,105,106,107,108,109,117,125,130,133,143,145,146,147,152,158,159,161,163,167,168,169,170,171,172,173,174,175,181,182,186,188,189,201,203,206,212,215,219,222,223,224,225,227,229,235,238,239,240,243,244,245,246,249,251,254,256,257,269,270,271,275,276,282,287,288,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-151,-141,-148,-68,-14,-15,-16,-17,-18,-77,-137,-1,-152,-67,-78,-12,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,-97,-101,-122,-123,-21,-22,-138,-91,-114,-26,-32,-27,-54,-55,-136,-107,-13,-108,-24,-64,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-81,-33,-31,-58,-57,-73,-60,-82,-63,-106,-116,-104,-115,-105,-30,-28,-29,-56,-135,-74,-76,-70,-72,-62,-23,-92,-79,-80,-59,-65,-75,-61,-25,-66,-69,-71,]),'CMP_OP':([12,36,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,100,125,152,159,174,181,182,222,223,224,225,227,256,],[-151,-152,114,-99,-101,-97,-148,-122,-123,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-147,-114,-107,-108,-138,-109,-113,-106,-116,-104,-115,-105,-121,]),'IN':([12,36,45,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,100,125,152,159,174,181,182,222,223,224,225,227,256,],[-151,-152,95,115,-99,-101,-97,-148,-122,-123,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-147,-114,-107,-108,-138,-109,-113,-106,-116,-104,-115,-105,-121,]),',':([12,15,16,34,36,58,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,102,103,104,105,106,109,125,140,141,142,147,152,157,159,181,182,211,222,223,224,225,226,227,279,],[-151,-141,-148,-137,-152,-99,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-142,-147,160,-97,-101,-122,-123,-138,-114,198,199,-140,204,-107,216,-108,-109,-113,247,-106,-116,-104,-115,255,-105,286,]),')':([12,16,34,36,43,51,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,92,100,101,102,103,104,105,106,109,113,117,125,152,156,157,159,160,167,168,169,170,171,172,173,174,175,181,182,211,217,222,223,224,225,227,247,252,254,274,],[-151,-148,-137,-152,-131,-134,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,152,-147,159,-133,-97,-101,-122,-123,-138,169,-91,-114,-107,215,-150,-108,-134,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-130,-132,-106,-116,-104,-115,-105,-131,-149,-92,-129,]),'ELSE':([12,16,22,23,24,25,26,36,58,65,66,67,68,69,70,71,72,73,74,75,76,77,100,103,104,105,106,107,108,109,125,152,159,161,162,163,164,181,182,219,220,222,223,224,225,227,251,276,],[-151,-148,-14,-15,-16,-17,-18,-152,-99,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-147,-97,-101,-122,-123,-21,-22,-138,-114,-107,-108,-24,218,-64,-20,-109,-113,-63,-19,-106,-116,-104,-115,-105,-23,-25,]),'END':([12,16,22,23,24,25,26,36,58,65,66,67,68,69,70,71,72,73,74,75,76,77,84,86,100,103,104,105,106,107,108,109,110,125,131,132,134,152,159,161,162,163,164,181,182,187,190,191,192,193,197,200,213,214,219,220,222,223,224,225,227,233,248,250,251,253,258,259,260,262,263,264,265,266,276,280,281,285,],[-151,-148,-14,-15,-16,-17,-18,-152,-99,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,133,133,-147,-97,-101,-122,-123,-21,-22,-138,163,-114,188,189,-35,-107,-108,-24,219,-64,-20,-109,-113,229,-34,-38,-44,-48,133,133,163,163,-63,-19,-106,-116,-104,-115,-105,-51,163,219,-23,163,-39,-40,-41,-45,-46,-47,-49,-50,-25,-52,-53,-125,]),']':([12,16,36,58,65,66,67,68,69,70,71,72,73,74,75,76,77,79,100,102,103,104,105,106,109,121,122,123,125,149,152,159,160,176,177,178,179,180,181,182,184,196,207,208,211,217,222,223,224,225,227,242,247,261,274,278,279,286,289,],[-151,-148,-152,-99,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-134,-147,-133,-97,-101,-122,-123,-138,-131,-131,181,-114,206,-107,-108,-134,222,223,224,-148,225,-109,-113,227,234,243,244,-130,-132,-106,-116,-104,-115,-105,271,-131,-127,-129,285,-126,-127,-128,]),'DICT':([12,36,72,73,74,75,76,77,84,86,105,106,125,131,132,134,182,187,190,191,192,193,197,200,233,258,259,260,262,263,264,265,266,280,281,285,],[-151,-152,-117,-118,-119,-120,-121,-124,137,137,-122,-123,-114,137,137,-35,-113,137,-34,-38,-44,-48,137,137,-51,-39,-40,-41,-45,-46,-47,-49,-50,-52,-53,-125,]),':':([12,15,16,34,36,37,38,55,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,90,99,100,103,104,105,106,109,117,125,126,139,140,141,142,144,149,152,154,155,159,167,168,169,170,171,172,173,174,175,181,182,218,222,223,224,225,227,236,237,254,],[-151,-141,-148,-137,-152,84,86,110,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,150,-142,-147,-97,-101,-122,-123,-138,-91,-114,183,197,-145,-146,-140,200,207,-107,213,214,-108,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,253,-106,-116,-104,-115,-105,-143,-144,-92,]),'AND':([12,16,34,36,55,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,100,103,104,105,106,109,113,117,125,152,159,167,168,169,170,171,172,173,174,175,181,182,222,223,224,225,227,239,254,257,],[-151,-148,-137,-152,111,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-147,-97,-101,-122,-123,-138,111,-91,-114,-107,-108,-87,111,-83,-84,-85,-86,-140,-138,-93,-109,-113,-106,-116,-104,-115,-105,111,-92,111,]),'OR':([12,16,34,36,55,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,100,103,104,105,106,109,113,117,125,152,159,167,168,169,170,171,172,173,174,175,181,182,222,223,224,225,227,239,254,257,],[-151,-148,-137,-152,112,-99,-90,-89,-148,-94,-95,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,-147,-97,-101,-122,-123,-138,112,-91,-114,-107,-108,-87,-88,-83,-84,-85,-86,-140,-138,-93,-109,-113,-106,-116,-104,-115,-105,112,-92,112,]),'}':([12,16,36,58,65,66,67,68,69,70,71,72,73,74,75,76,77,80,100,103,104,105,106,109,124,125,152,159,181,182,222,223,224,225,226,227,255,277,],[-151,-148,-152,-99,-96,-98,-100,-102,-103,-140,-137,-117,-118,-119,-120,-121,-124,125,-147,-97,-101,-122,-123,-138,182,-114,-107,-108,-109,-113,-106,-116,-104,-115,-111,-105,-112,-110,]),'.':([15,16,18,30,31,34,59,62,70,71,99,100,104,109,141,142,166,172,173,174,179,245,246,],[-141,-148,42,-140,54,-137,116,-148,-140,-137,-142,-147,54,-138,54,-140,-140,54,-140,-138,-148,272,273,]),'(':([15,16,18,30,32,48,56,61,62,70,78,99,100,111,112,165,166,179,202,228,],[-141,-148,43,51,56,96,56,56,-148,51,43,-142,-147,56,56,43,51,-148,56,56,]),'USING':([15,39,99,],[-141,88,-142,]),'[':([15,16,32,41,51,52,53,56,61,62,69,70,71,78,79,81,91,95,99,100,109,111,112,114,115,119,121,127,138,148,151,153,160,174,179,183,202,206,222,224,227,228,230,231,243,244,271,283,284,],[-141,-148,79,90,79,79,79,79,79,-148,119,-139,121,122,79,127,90,79,-142,-147,-138,79,79,79,79,79,79,79,196,90,79,79,79,-138,-148,79,79,-73,-106,-104,-105,79,261,261,-74,-76,-75,90,90,]),'SEP':([16,30,40,49,62,70,100,138,142,147,166,173,179,185,],[-148,50,50,98,-148,120,-147,98,50,98,50,98,-148,98,]),'=':([16,30,31,34,93,100,109,166,179,191,192,193,233,],[-148,-140,52,-137,153,-147,-138,-140,153,230,231,232,267,]),'PEQ':([16,30,31,34,100,109,166,],[-148,-140,53,-137,-147,-138,-140,]),'AS':([16,49,82,83,100,],[-148,97,128,129,-147,]),'?':([16,100,137,138,234,],[-148,-147,194,195,268,]),'WHEN':([16,100,146,147,240,],[-148,-147,202,-136,-135,]),'MATCHING':([16,100,185,],[-148,-147,228,]),'NOT':([32,56,61,111,112,202,228,],[61,61,61,61,61,61,61,]),'TRUE':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,206,228,230,243,244,261,271,286,],[63,105,105,105,63,63,105,105,63,63,105,105,105,105,105,105,105,105,63,-73,63,105,-74,-76,105,-75,105,]),'FALSE':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,206,228,230,243,244,261,271,286,],[64,106,106,106,64,64,106,106,64,64,106,106,106,106,106,106,106,106,64,-73,64,106,-74,-76,106,-75,106,]),'INT':([32,51,52,53,56,61,79,90,95,111,112,114,119,121,127,150,151,153,160,183,202,206,207,228,230,243,244,261,271,286,],[73,73,73,73,73,73,73,149,73,73,73,73,73,73,73,208,73,73,73,73,73,-73,242,73,73,-74,-76,73,-75,73,]),'FLOAT':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,206,228,230,243,244,261,271,286,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-73,74,74,-74,-76,74,-75,74,]),'NULL':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,206,228,230,231,232,243,244,261,267,271,286,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-73,75,75,264,266,-74,-76,75,281,-75,75,]),'REGEX':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,206,228,230,243,244,261,271,286,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-73,256,76,-74,-76,76,-75,76,]),'STRING':([32,51,52,53,56,61,79,80,95,111,112,114,119,121,127,151,153,160,183,202,206,228,230,243,244,255,261,271,286,],[77,77,77,77,77,77,77,126,77,77,77,77,77,77,77,77,77,77,77,77,-73,77,77,-74,-76,126,77,-75,77,]),'{':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,206,228,232,243,244,267,271,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-73,80,80,-74,-76,80,-75,]),'EXTENDS':([37,38,],[85,87,]),'IS':([62,174,],[118,221,]),'PARENTS':([88,],[145,]),'REL':([89,151,206,243,244,271,],[148,209,-73,-74,-76,-75,]),'DEFINED':([118,221,],[175,254,]),'UNDEF':([230,231,],[260,263,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,35,]),'top_stmt':([0,2,],[2,2,]),'mls':([0,2,13,21,27,32,51,52,53,56,61,79,84,86,95,111,112,114,119,121,127,145,146,151,153,160,183,197,200,202,213,228,230,239,261,270,286,],[3,3,36,46,47,72,72,72,72,72,72,72,131,131,72,72,72,72,72,72,72,201,203,72,72,72,72,131,131,72,248,72,72,269,72,282,72,]),'entity_def':([0,2,],[4,4,]),'implement_def':([0,2,],[5,5,]),'implementation_def':([0,2,],[6,6,]),'relation':([0,2,],[7,7,]),'statement':([0,2,110,164,213,214,248,253,],[8,8,164,164,164,164,164,164,]),'typedef':([0,2,],[9,9,]),'index':([0,2,],[10,10,]),'import':([0,2,],[11,11,]),'class_ref':([0,2,17,28,32,51,52,53,56,61,79,85,87,94,95,110,111,112,114,119,121,127,129,151,153,160,164,183,198,199,202,205,209,210,213,214,228,248,253,],[18,18,39,48,78,78,78,78,78,78,78,140,140,154,78,165,78,78,78,78,78,78,165,78,78,78,165,78,140,140,78,241,245,246,165,165,78,165,165,]),'relationnew':([0,2,],[21,21,]),'assign':([0,2,110,164,213,214,248,253,],[22,22,22,22,22,22,22,22,]),'constructor':([0,2,32,51,52,53,56,61,79,95,110,111,112,114,119,121,127,129,151,153,160,164,183,202,213,214,228,248,253,],[23,23,66,66,66,66,66,66,66,66,23,66,66,66,66,66,66,186,66,66,66,23,66,66,23,23,66,23,23,]),'function_call':([0,2,32,51,52,53,56,61,79,95,110,111,112,114,119,121,127,151,153,160,164,183,202,213,214,228,248,253,],[24,24,60,103,103,103,60,60,103,103,24,60,60,103,103,103,103,103,103,103,24,103,60,24,24,60,24,24,]),'for':([0,2,110,164,213,214,248,253,],[25,25,25,25,25,25,25,25,]),'if':([0,2,110,164,213,214,248,253,],[26,26,26,26,26,26,26,26,]),'typedef_inner':([0,2,],[27,27,]),'ns_ref':([0,2,17,28,29,32,51,52,53,56,61,79,84,85,86,87,88,94,95,110,111,112,114,115,119,121,127,128,129,131,132,151,153,160,164,183,187,197,198,199,200,202,204,205,209,210,213,214,228,248,253,],[30,30,40,40,49,70,70,70,70,70,70,70,138,142,138,142,147,40,70,166,70,70,70,173,70,70,70,185,40,138,138,70,70,70,166,70,138,138,142,142,138,70,147,40,40,40,166,166,70,166,166,]),'var_ref':([0,2,32,51,52,53,56,61,79,85,87,95,110,111,112,114,115,119,121,127,151,153,160,164,183,198,199,202,213,214,228,248,253,],[31,31,59,104,104,104,59,59,104,141,141,104,31,59,59,104,172,104,104,104,104,104,104,31,104,141,141,59,31,31,59,31,31,]),'attr_ref':([0,2,32,51,52,53,56,61,79,85,87,95,110,111,112,114,115,119,121,127,151,153,160,164,183,198,199,202,213,214,228,248,253,],[34,34,71,71,71,71,71,71,71,34,34,71,34,71,71,71,34,71,71,71,71,71,71,34,71,34,34,71,34,34,71,34,34,]),'condition':([32,56,61,111,112,202,228,],[55,113,117,167,168,239,257,]),'operand':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,228,],[57,102,107,108,57,57,102,155,57,57,170,176,178,184,102,211,102,226,57,57,]),'list_def':([32,51,52,53,56,61,79,95,111,112,114,115,119,121,127,151,153,160,183,202,228,],[58,58,58,58,58,58,58,58,58,58,58,171,58,58,58,58,58,58,58,58,58,]),'constant':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,228,230,261,286,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,258,279,279,]),'map_def':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,228,232,267,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,265,280,]),'index_lookup':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,228,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'map_lookup':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,228,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'local_var':([32,51,52,53,56,61,79,95,111,112,114,119,121,127,151,153,160,183,202,228,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'multi':([41,91,148,283,284,],[89,151,205,287,288,]),'param_list':([43,121,122,247,],[92,177,180,274,]),'operand_list':([51,79,151,160,],[101,123,210,217,]),'pair_list':([80,255,],[124,277,]),'entity_body_outer':([84,86,197,200,],[130,143,235,238,]),'entity_body':([84,86,131,197,200,],[132,132,187,132,132,]),'attr':([84,86,131,132,187,197,200,],[134,134,134,190,190,134,134,]),'attr_type':([84,86,131,132,187,197,200,],[135,135,135,135,135,135,135,]),'attr_type_multi':([84,86,131,132,187,197,200,],[136,136,136,136,136,136,136,]),'class_ref_list':([85,87,198,199,],[139,144,236,237,]),'ns_list':([88,204,],[146,240,]),'id_list':([96,216,],[156,252,]),'block':([110,213,214,248,253,],[161,249,251,275,276,]),'stmt_list':([110,164,213,214,248,253,],[162,220,250,250,250,250,]),'implementation':([154,],[212,]),'constant_list':([230,231,],[259,262,]),'constants':([261,286,],[278,289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',103),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',110),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',115),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',116),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',117),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',118),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',119),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',120),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',121),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',122),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',123),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',133),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',139),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',150),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',151),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',152),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',153),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',154),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',168),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',175),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',180),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',186),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',192),
  ('if -> IF condition : block','if',4,'p_if','plyInmantaParser.py',198),
  ('if -> IF condition : stmt_list ELSE : block','if',7,'p_if_else','plyInmantaParser.py',204),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',215),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',221),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',226),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',232),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',237),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',242),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',247),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',252),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',257),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',263),
  ('attr_type -> ns_ref','attr_type',1,'p_attribute_type','plyInmantaParser.py',268),
  ('attr_type -> ns_ref ?','attr_type',2,'p_attribute_type_opt','plyInmantaParser.py',273),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',278),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',285),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',286),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',293),
  ('attr_type_multi -> ns_ref [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',300),
  ('attr_type_multi -> ns_ref [ ] ?','attr_type_multi',4,'p_attribute_type_multi_opt','plyInmantaParser.py',305),
  ('attr -> attr_type_multi ID','attr',2,'p_attr_list','plyInmantaParser.py',310),
  ('attr -> attr_type_multi ID = constant_list','attr',4,'p_attr_list_cte','plyInmantaParser.py',317),
  ('attr -> attr_type_multi ID = UNDEF','attr',4,'p_attr_list_undef','plyInmantaParser.py',324),
  ('attr -> attr_type_multi ID = NULL','attr',4,'p_attr_list_null','plyInmantaParser.py',331),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',338),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',344),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',350),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',355),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',361),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',367),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS','implement_def',4,'p_implement_inh','plyInmantaParser.py',374),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',380),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',386),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',392),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS mls','implement_def',5,'p_implement_inh_comment','plyInmantaParser.py',398),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',404),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',413),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',425),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',430),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',435),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',440),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',448),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',458),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',470),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',477),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',482),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',488),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',494),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',500),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',506),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',511),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',516),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',521),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',529),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',534),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',541),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',542),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',548),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',557),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',567),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',572),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',573),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',574),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',575),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',576),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',583),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',584),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',589),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',595),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',601),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',607),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',608),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',619),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',620),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',621),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',622),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',623),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',624),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',625),
  ('operand -> map_lookup','operand',1,'p_operand','plyInmantaParser.py',626),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',631),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',632),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',633),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',638),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',643),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',649),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',655),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',661),
  ('pair_list -> <empty>','pair_list',0,'p_pair_list_term_2','plyInmantaParser.py',666),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',671),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',677),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',683),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',689),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',700),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',706),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',707),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',714),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',721),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',728),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',735),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',746),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',781),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',787),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',792),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',797),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',803),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',809),
  ('param_list -> <empty>','param_list',0,'p_param_list_term_2','plyInmantaParser.py',814),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',819),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',825),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',830),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',835),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',841),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',846),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',851),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',857),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',863),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',869),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',880),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',892),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',898),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',903),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',908),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',914),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',920),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',925),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',931),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',936),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',941),
]
