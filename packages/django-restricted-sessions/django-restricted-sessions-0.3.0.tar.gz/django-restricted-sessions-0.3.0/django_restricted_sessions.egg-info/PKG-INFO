Metadata-Version: 1.1
Name: django-restricted-sessions
Version: 0.3.0
Summary: Restrict Django sessions to IP and/or user agent.
Home-page: https://github.com/mxsasha/django-restricted-sessions
Author: django-restricted-sessions
Author-email: github@mxsasha.eu
License: BSD
Description: =============================
        django-restricted-sessions
        =============================
        
        .. image:: https://badge.fury.io/py/django-restricted-sessions.png
            :target: http://badge.fury.io/py/django-restricted-sessions
        
        .. image:: https://travis-ci.org/mxsasha/django-restricted-sessions.png?branch=master
            :target: https://travis-ci.org/mxsasha/django-restricted-sessions
        
        .. image:: https://coveralls.io/repos/mxsasha/django-restricted-sessions/badge.png?branch=master&
            :target: https://coveralls.io/r/mxsasha/django-restricted-sessions?branch=master
        
        Restricts Django sessions to IP and/or user agent.
        
        If the IP or user agent changes after creating the session, the a 400 response is given to the request, the session is
        flushed (all session data deleted, new session created) and a warning is logged. The goal of this middleware is to
        make it harder for an attacker to use a session ID they obtained. It does not make abuse of session IDs impossible.
        
        For compatibility with IPv6 privacy extensions, by default only the first 64 bits of an IPv6 address are checked.
        
        Documentation
        -------------
        
        The full documentation is at https://django-restricted-sessions.readthedocs.org.
        
        Quickstart
        ----------
        
        Install django-restricted-sessions::
        
            pip install django-restricted-sessions
        
        Then add it to your middleware after SessionMiddleware::
        
            MIDDLEWARE_CLASSES = [
                ....
                'django.contrib.sessions.middleware.SessionMiddleware',
                # 'django.contrib.auth.middleware.AuthenticationMiddleware',
                'restrictedsessions.middleware.RestrictedSessionsMiddleware',
                ....
            ]
        
        When ``RESTRICTEDSESSIONS_AUTHED_ONLY`` setting enabled ensure this middleware is added after
        ``AuthenticationMiddleware`` such that the ``request.user`` is present.
        
        
        
        
        History
        -------
        
        0.3.0 (2019-12-03)
        ++++++++++++++++++
        
        * Updated Django support to 1.11, 2.2 and 3.0.
        * Fixed issues when ``X_FORWARDED_FOR`` contains multiple addresses.
        
        0.2.0 (2017-04-06)
        ++++++++++++++++++
        
        * For Django 1.10+ support, changed from `object` to `django.utils.deprecation.MiddlewareMixin`
        * Added PyPI trove classifiers for Django versions and more Python versions
        * Updated `travis.yml` for more Python versions
        
        0.1.4 (2016-07-02)
        ++++++++++++++++++
        
        * Fixed an exception that could occur when non-utf8 bytes were included
          in user agent strings.
        
        0.1.3.1 (2016-05-26)
        ++++++++++++++++++++
        
        * Version bump to avoid PyPI's duplicate filename ban.
        
        0.1.3 (2016-05-26)
        ++++++++++++++++++
        
        * Added support to redirect to known view, or use custom status code settings.
        * Added support for ignoring unauthenticated sessions.
        * Fixed short circuit when REMOTE_ADDR was unknown.
        * Dropped support for older Python versions: now requires 2.7, 3.3 or newer,
          with Django 1.8.
        
        0.1.2 (2014-03-20)
        ++++++++++++++++++
        
        * Resolved exception being raised when session switches from IPv4 to IPv6
        * Python 3.4 support
        
        0.1.1 (2014-02-18)
        ++++++++++++++++++
        
        * Added missing netaddr requirement to setup.py.
        
        0.1.0 (2014-02-17)
        ++++++++++++++++++
        
        * First release on PyPI.
        
Keywords: django-restricted-sessions
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.11
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.0
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
