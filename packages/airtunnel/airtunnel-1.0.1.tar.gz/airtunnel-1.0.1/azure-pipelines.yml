# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop
- feature/*
- bugfix/*
- release/*

pool:
  vmImage: 'ubuntu-16.04' # other options: 'macOS-10.13', 'vs2017-win2016'

variables:
- group: airtunnel

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'

- script: |
    python -m pip install tox
    tox --version
  displayName: 'Install Tox'

- script: |
    tox -e lint
  displayName: 'Tox Lint'

- script: |
    CUR_PATH=$(pwd)
    export AIRFLOW_HOME=${CUR_PATH}/test/airflow_home
    tox -e py37-current_versions
  displayName: 'Run Tox Python 3.7: Current Dependency Versions'

- script: |
    CUR_PATH=$(pwd)
    export AIRFLOW_HOME=${CUR_PATH}/test/airflow_home
    tox -e py37-minimal_versions
  displayName: 'Run Tox Python 3.7: Minimal Dependency Versions'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'

- script: |
    CUR_PATH=$(pwd)
    export AIRFLOW_HOME=${CUR_PATH}/test/airflow_home
    tox -e py36
  displayName: 'Run Tox Python 3.6'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/.tox/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/.tox/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/.tox/htmlcov'

- script: |
    export AIRFLOW_HOME=${CUR_PATH}/test/airflow_home
    export AIRFLOW__AIRTUNNEL__DATA_STORE_FOLDER=${CUR_PATH}/test/data_store
    export AIRFLOW__AIRTUNNEL__DECLARATIONS_FOLDER=${CUR_PATH}/test/test_airtunnel/declarations
    export AIRFLOW__AIRTUNNEL__SCRIPTS_FOLDER=${CUR_PATH}/test/scripts
    tox -e docs
  displayName: 'Tox Sphinx Docs'

- script: |
    pip install flit
    flit build
  displayName: 'Run flit build'

- script: |
    flit publish
  displayName: 'Run flit publish to PyPi'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  env:
    FLIT_PASSWORD: $(FLIT_PASSWORD)

- script: |
    CUR_PATH=$(pwd)

    mv ${CUR_PATH}/docs/_build/html /tmp/html

    git config --global user.email "joerg@joerg-schneider.org"
    git config --global user.name "joerg-schneider"

    git checkout gh-pages
    git ls-files | xargs git rm

    mv /tmp/html/* ${CUR_PATH}/
    touch .nojekyll

    git add *.html
    git add .nojekyll
    git add *.js
    git add .buildinfo objects.inv
    git add _images
    git add _sources
    git add _static
    git add api
    git commit -m "AzureDevOps: updated docs"
    git push https://$(AIRTUNNEL_PAT)@github.com/joerg-schneider/airtunnel.git
  displayName: 'Publish Docs'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
