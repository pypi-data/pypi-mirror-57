[tox]
envlist = py36,
          py37,
          lint,
          docs

isolated_build = true
minversion = 3.7

[testenv]
changedir = test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}{:}{toxinidir}/test
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}

deps = pip >= 19.3.1

extras =
    testing
    pyspark

commands_pre =
    python test_airtunnel/test_cli_utils.py update_airflow_cfg
    python test_airtunnel/test_cli_utils.py remove_db

commands =
    pytest \
           --junitxml {toxworkdir}/test-{envname}.xml \
           . -s --ignore=test_airtunnel/test_testdags.py

[testenv:py37-minimal_versions]
deps =
    pip >= 19.3.1
    pandas == 0.23
    pyspark == 2.3

[testenv:py37-current_versions]
commands =
    pytest \
           --cov airtunnel \
           --cov-config "{toxinidir}/tox.ini" \
           --cov-report=xml:{toxworkdir}/coverage.xml --cov-report=html:{toxworkdir}/htmlcov \
           --junitxml {toxworkdir}/test-{envname}.xml \
           . -s

[testenv:lint]
deps = flake8
commands_pre =
commands = flake8 "{toxinidir}/src/airtunnel" -v
skip_install = True


[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = src/airtunnel
         */src/airtunnel
         *\src\airtunnel

[flake8]
ignore = E203, E266, E501, W503
max-line-length = 80
max-complexity = 18
select = B,C,E,F,W,T4,B9


[testenv:docs]
changedir = docs
whitelist_externals = make
passenv = *
deps =
    pip >= 19.3.1
    sphinx >= 2.0.0, < 3
    sphinx_rtd_theme

commands_pre = make clean
commands =
    sphinx-apidoc -o ./api ../src/airtunnel
    make html
