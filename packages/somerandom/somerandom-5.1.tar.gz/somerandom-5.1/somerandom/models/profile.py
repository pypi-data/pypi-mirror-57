# -*- coding: utf-8 -*-

"""
    somerandom

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Profile(object):

    """Implementation of the 'Profile' model.

    TODO: type model description here.

    Attributes:
        first_name (string): First name of the Uber user.
        last_name (string): Last name of the Uber user.
        email (string): Email address of the Uber user
        picture (string): Image URL of the Uber user.
        promo_code (string): Promo code of the Uber user.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "first_name":'first_name',
        "last_name":'last_name',
        "email":'email',
        "picture":'picture',
        "promo_code":'promo_code'
    }

    def __init__(self,
                 first_name=None,
                 last_name=None,
                 email=None,
                 picture=None,
                 promo_code=None):
        """Constructor for the Profile class"""

        # Initialize members of the class
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.picture = picture
        self.promo_code = promo_code


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        first_name = dictionary.get('first_name')
        last_name = dictionary.get('last_name')
        email = dictionary.get('email')
        picture = dictionary.get('picture')
        promo_code = dictionary.get('promo_code')

        # Return an object of this model
        return cls(first_name,
                   last_name,
                   email,
                   picture,
                   promo_code)


