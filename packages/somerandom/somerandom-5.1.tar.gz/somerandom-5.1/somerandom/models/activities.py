# -*- coding: utf-8 -*-

"""
    somerandom

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import somerandom.models.activity

class Activities(object):

    """Implementation of the 'Activities' model.

    TODO: type model description here.

    Attributes:
        offset (int): Position in pagination.
        limit (int): Number of items to retrieve (100 max).
        count (int): Total number of items available.
        history (list of Activity): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "offset":'offset',
        "limit":'limit',
        "count":'count',
        "history":'history'
    }

    def __init__(self,
                 offset=None,
                 limit=None,
                 count=None,
                 history=None):
        """Constructor for the Activities class"""

        # Initialize members of the class
        self.offset = offset
        self.limit = limit
        self.count = count
        self.history = history


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        offset = dictionary.get('offset')
        limit = dictionary.get('limit')
        count = dictionary.get('count')
        history = None
        if dictionary.get('history') != None:
            history = list()
            for structure in dictionary.get('history'):
                history.append(somerandom.models.activity.Activity.from_dictionary(structure))

        # Return an object of this model
        return cls(offset,
                   limit,
                   count,
                   history)


