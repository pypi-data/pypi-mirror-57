"Main interface for cloudfront service Client"
from __future__ import annotations

from typing import Any, Dict
from botocore.client import BaseClient
from botocore.exceptions import ClientError as Boto3ClientError
from botocore.paginate import Paginator as Boto3Paginator
from botocore.waiter import Waiter as Boto3Waiter
from mypy_boto3.type_defs import Literal, overload

# pylint: disable=import-self
import mypy_boto3_cloudfront.client as client_scope

# pylint: disable=import-self
import mypy_boto3_cloudfront.paginator as paginator_scope
from mypy_boto3_cloudfront.type_defs import (
    ClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    ClientCreateCloudFrontOriginAccessIdentityResponseTypeDef,
    ClientCreateDistributionDistributionConfigTypeDef,
    ClientCreateDistributionResponseTypeDef,
    ClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef,
    ClientCreateDistributionWithTagsResponseTypeDef,
    ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
    ClientCreateFieldLevelEncryptionConfigResponseTypeDef,
    ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    ClientCreateFieldLevelEncryptionProfileResponseTypeDef,
    ClientCreateInvalidationInvalidationBatchTypeDef,
    ClientCreateInvalidationResponseTypeDef,
    ClientCreatePublicKeyPublicKeyConfigTypeDef,
    ClientCreatePublicKeyResponseTypeDef,
    ClientCreateStreamingDistributionResponseTypeDef,
    ClientCreateStreamingDistributionStreamingDistributionConfigTypeDef,
    ClientCreateStreamingDistributionWithTagsResponseTypeDef,
    ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef,
    ClientGetCloudFrontOriginAccessIdentityConfigResponseTypeDef,
    ClientGetCloudFrontOriginAccessIdentityResponseTypeDef,
    ClientGetDistributionConfigResponseTypeDef,
    ClientGetDistributionResponseTypeDef,
    ClientGetFieldLevelEncryptionConfigResponseTypeDef,
    ClientGetFieldLevelEncryptionProfileConfigResponseTypeDef,
    ClientGetFieldLevelEncryptionProfileResponseTypeDef,
    ClientGetFieldLevelEncryptionResponseTypeDef,
    ClientGetInvalidationResponseTypeDef,
    ClientGetPublicKeyConfigResponseTypeDef,
    ClientGetPublicKeyResponseTypeDef,
    ClientGetStreamingDistributionConfigResponseTypeDef,
    ClientGetStreamingDistributionResponseTypeDef,
    ClientListCloudFrontOriginAccessIdentitiesResponseTypeDef,
    ClientListDistributionsByWebAclIdResponseTypeDef,
    ClientListDistributionsResponseTypeDef,
    ClientListFieldLevelEncryptionConfigsResponseTypeDef,
    ClientListFieldLevelEncryptionProfilesResponseTypeDef,
    ClientListInvalidationsResponseTypeDef,
    ClientListPublicKeysResponseTypeDef,
    ClientListStreamingDistributionsResponseTypeDef,
    ClientListTagsForResourceResponseTypeDef,
    ClientTagResourceTagsTypeDef,
    ClientUntagResourceTagKeysTypeDef,
    ClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    ClientUpdateCloudFrontOriginAccessIdentityResponseTypeDef,
    ClientUpdateDistributionDistributionConfigTypeDef,
    ClientUpdateDistributionResponseTypeDef,
    ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
    ClientUpdateFieldLevelEncryptionConfigResponseTypeDef,
    ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    ClientUpdateFieldLevelEncryptionProfileResponseTypeDef,
    ClientUpdatePublicKeyPublicKeyConfigTypeDef,
    ClientUpdatePublicKeyResponseTypeDef,
    ClientUpdateStreamingDistributionResponseTypeDef,
    ClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef,
)

# pylint: disable=import-self
import mypy_boto3_cloudfront.waiter as waiter_scope


__all__ = ("Client",)


class Client(BaseClient):
    exceptions: client_scope.Exceptions

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def can_paginate(self, operation_name: str) -> bool:
        """
        Check if an operation can be paginated.

        :type operation_name: string
        :param operation_name: The operation name.  This is the same name
            as the method name on the client.  For example, if the
            method name is ``create_foo``, and you'd normally invoke the
            operation as ``client.create_foo(**kwargs)``, if the
            ``create_foo`` operation can be paginated, you can use the
            call ``client.get_paginator("create_foo")``.

        :return: ``True`` if the operation can be paginated,
            ``False`` otherwise.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_cloud_front_origin_access_identity(
        self,
        CloudFrontOriginAccessIdentityConfig: ClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    ) -> ClientCreateCloudFrontOriginAccessIdentityResponseTypeDef:
        """
        Creates a new origin access identity. If you're using Amazon S3 for your origin, you can use
        an origin access identity to require users to access your content using a CloudFront URL
        instead of the Amazon S3 URL. For more information about how to use origin access
        identities, see `Serving Private Content through CloudFront
        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
        in the *Amazon CloudFront Developer Guide* .

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateCloudFrontOriginAccessIdentity>`_

        **Request Syntax**
        ::

          response = client.create_cloud_front_origin_access_identity(
              CloudFrontOriginAccessIdentityConfig={
                  'CallerReference': 'string',
                  'Comment': 'string'
              }
          )
        :type CloudFrontOriginAccessIdentityConfig: dict
        :param CloudFrontOriginAccessIdentityConfig: **[REQUIRED]**

          The current configuration information for the identity.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique value (for example, a date-time stamp) that ensures that the request can't be
            replayed.

            If the value of ``CallerReference`` is new (regardless of the content of the
            ``CloudFrontOriginAccessIdentityConfig`` object), a new origin access identity is
            created.

            If the ``CallerReference`` is a value already sent in a previous identity request, and
            the content of the ``CloudFrontOriginAccessIdentityConfig`` is identical to the original
            request (ignoring white space), the response includes the same information returned to
            the original request.

            If the ``CallerReference`` is a value you already sent in a previous request to create
            an identity, but the content of the ``CloudFrontOriginAccessIdentityConfig`` is
            different from the original request, CloudFront returns a
            ``CloudFrontOriginAccessIdentityAlreadyExists`` error.

          - **Comment** *(string) --* **[REQUIRED]**

            Any comments you want to include about the origin access identity.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'CloudFrontOriginAccessIdentity': {
                    'Id': 'string',
                    'S3CanonicalUserId': 'string',
                    'CloudFrontOriginAccessIdentityConfig': {
                        'CallerReference': 'string',
                        'Comment': 'string'
                    }
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **CloudFrontOriginAccessIdentity** *(dict) --*

              The origin access identity's information.

              - **Id** *(string) --*

                The ID for the origin access identity, for example, ``E74FTE3AJFJ256A`` .

              - **S3CanonicalUserId** *(string) --*

                The Amazon S3 canonical user ID for the origin access identity, used when giving the
                origin access identity read permission to an object in Amazon S3.

              - **CloudFrontOriginAccessIdentityConfig** *(dict) --*

                The current configuration information for the identity.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``CloudFrontOriginAccessIdentityConfig`` object), a new origin access identity is
                  created.

                  If the ``CallerReference`` is a value already sent in a previous identity request,
                  and the content of the ``CloudFrontOriginAccessIdentityConfig`` is identical to
                  the original request (ignoring white space), the response includes the same
                  information returned to the original request.

                  If the ``CallerReference`` is a value you already sent in a previous request to
                  create an identity, but the content of the
                  ``CloudFrontOriginAccessIdentityConfig`` is different from the original request,
                  CloudFront returns a ``CloudFrontOriginAccessIdentityAlreadyExists`` error.

                - **Comment** *(string) --*

                  Any comments you want to include about the origin access identity.

            - **Location** *(string) --*

              The fully qualified URI of the new origin access identity just created. For example:
              ``https://cloudfront.amazonaws.com/2010-11-01/origin-access-identity/cloudfront/E74FTE3AJFJ256A``
              .

            - **ETag** *(string) --*

              The current version of the origin access identity created.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_distribution(
        self, DistributionConfig: ClientCreateDistributionDistributionConfigTypeDef
    ) -> ClientCreateDistributionResponseTypeDef:
        """
        Creates a new web distribution. You create a CloudFront distribution to tell CloudFront
        where you want content to be delivered from, and the details about how to track and manage
        content delivery. Send a ``POST`` request to the ``/*CloudFront API version* /distribution``
        /``distribution ID`` resource.

        .. warning::

          When you update a distribution, there are more required fields than when you create a
          distribution. When you update your distribution by using `UpdateDistribution
          <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_UpdateDistribution.html>`__
          , follow the steps included in the documentation to get the current configuration and then
          make your updates. This helps to make sure that you include all of the required fields. To
          view a summary, see `Required Fields for Create Distribution and Update Distribution
          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview-required-fields.html>`__
          in the *Amazon CloudFront Developer Guide* .

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateDistribution>`_

        **Request Syntax**
        ::

          response = client.create_distribution(
              DistributionConfig={
                  'CallerReference': 'string',
                  'Aliases': {
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'DefaultRootObject': 'string',
                  'Origins': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'Id': 'string',
                              'DomainName': 'string',
                              'OriginPath': 'string',
                              'CustomHeaders': {
                                  'Quantity': 123,
                                  'Items': [
                                      {
                                          'HeaderName': 'string',
                                          'HeaderValue': 'string'
                                      },
                                  ]
                              },
                              'S3OriginConfig': {
                                  'OriginAccessIdentity': 'string'
                              },
                              'CustomOriginConfig': {
                                  'HTTPPort': 123,
                                  'HTTPSPort': 123,
                                  'OriginProtocolPolicy': 'http-only'|'match-viewer'|'https-only',
                                  'OriginSslProtocols': {
                                      'Quantity': 123,
                                      'Items': [
                                          'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                      ]
                                  },
                                  'OriginReadTimeout': 123,
                                  'OriginKeepaliveTimeout': 123
                              }
                          },
                      ]
                  },
                  'OriginGroups': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'Id': 'string',
                              'FailoverCriteria': {
                                  'StatusCodes': {
                                      'Quantity': 123,
                                      'Items': [
                                          123,
                                      ]
                                  }
                              },
                              'Members': {
                                  'Quantity': 123,
                                  'Items': [
                                      {
                                          'OriginId': 'string'
                                      },
                                  ]
                              }
                          },
                      ]
                  },
                  'DefaultCacheBehavior': {
                      'TargetOriginId': 'string',
                      'ForwardedValues': {
                          'QueryString': True|False,
                          'Cookies': {
                              'Forward': 'none'|'whitelist'|'all',
                              'WhitelistedNames': {
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              }
                          },
                          'Headers': {
                              'Quantity': 123,
                              'Items': [
                                  'string',
                              ]
                          },
                          'QueryStringCacheKeys': {
                              'Quantity': 123,
                              'Items': [
                                  'string',
                              ]
                          }
                      },
                      'TrustedSigners': {
                          'Enabled': True|False,
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      },
                      'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                      'MinTTL': 123,
                      'AllowedMethods': {
                          'Quantity': 123,
                          'Items': [
                              'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                          ],
                          'CachedMethods': {
                              'Quantity': 123,
                              'Items': [
                                  'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                              ]
                          }
                      },
                      'SmoothStreaming': True|False,
                      'DefaultTTL': 123,
                      'MaxTTL': 123,
                      'Compress': True|False,
                      'LambdaFunctionAssociations': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'LambdaFunctionARN': 'string',
                                  'EventType':
                                  'viewer-request'|'viewer-response'
                                  |'origin-request'|'origin-response',
                                  'IncludeBody': True|False
                              },
                          ]
                      },
                      'FieldLevelEncryptionId': 'string'
                  },
                  'CacheBehaviors': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'PathPattern': 'string',
                              'TargetOriginId': 'string',
                              'ForwardedValues': {
                                  'QueryString': True|False,
                                  'Cookies': {
                                      'Forward': 'none'|'whitelist'|'all',
                                      'WhitelistedNames': {
                                          'Quantity': 123,
                                          'Items': [
                                              'string',
                                          ]
                                      }
                                  },
                                  'Headers': {
                                      'Quantity': 123,
                                      'Items': [
                                          'string',
                                      ]
                                  },
                                  'QueryStringCacheKeys': {
                                      'Quantity': 123,
                                      'Items': [
                                          'string',
                                      ]
                                  }
                              },
                              'TrustedSigners': {
                                  'Enabled': True|False,
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              },
                              'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                              'MinTTL': 123,
                              'AllowedMethods': {
                                  'Quantity': 123,
                                  'Items': [
                                      'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                  ],
                                  'CachedMethods': {
                                      'Quantity': 123,
                                      'Items': [
                                          'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                      ]
                                  }
                              },
                              'SmoothStreaming': True|False,
                              'DefaultTTL': 123,
                              'MaxTTL': 123,
                              'Compress': True|False,
                              'LambdaFunctionAssociations': {
                                  'Quantity': 123,
                                  'Items': [
                                      {
                                          'LambdaFunctionARN': 'string',
                                          'EventType':
                                          'viewer-request'
                                          |'viewer-response'
                                          |'origin-request'
                                          |'origin-response',
                                          'IncludeBody': True|False
                                      },
                                  ]
                              },
                              'FieldLevelEncryptionId': 'string'
                          },
                      ]
                  },
                  'CustomErrorResponses': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'ErrorCode': 123,
                              'ResponsePagePath': 'string',
                              'ResponseCode': 'string',
                              'ErrorCachingMinTTL': 123
                          },
                      ]
                  },
                  'Comment': 'string',
                  'Logging': {
                      'Enabled': True|False,
                      'IncludeCookies': True|False,
                      'Bucket': 'string',
                      'Prefix': 'string'
                  },
                  'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                  'Enabled': True|False,
                  'ViewerCertificate': {
                      'CloudFrontDefaultCertificate': True|False,
                      'IAMCertificateId': 'string',
                      'ACMCertificateArn': 'string',
                      'SSLSupportMethod': 'sni-only'|'vip',
                      'MinimumProtocolVersion':
                      'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'|'TLSv1.2_2018',
                      'Certificate': 'string',
                      'CertificateSource': 'cloudfront'|'iam'|'acm'
                  },
                  'Restrictions': {
                      'GeoRestriction': {
                          'RestrictionType': 'blacklist'|'whitelist'|'none',
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      }
                  },
                  'WebACLId': 'string',
                  'HttpVersion': 'http1.1'|'http2',
                  'IsIPV6Enabled': True|False
              }
          )
        :type DistributionConfig: dict
        :param DistributionConfig: **[REQUIRED]**

          The distribution's configuration information.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique value (for example, a date-time stamp) that ensures that the request can't be
            replayed.

            If the value of ``CallerReference`` is new (regardless of the content of the
            ``DistributionConfig`` object), CloudFront creates a new distribution.

            If ``CallerReference`` is a value that you already sent in a previous request to create
            a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

          - **Aliases** *(dict) --*

            A complex type that contains information about CNAMEs (alternate domain names), if any,
            for this distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of CNAME aliases, if any, that you want to associate with this
              distribution.

            - **Items** *(list) --*

              A complex type that contains the CNAME aliases, if any, that you want to associate
              with this distribution.

              - *(string) --*

          - **DefaultRootObject** *(string) --*

            The object that you want CloudFront to request from your origin (for example,
            ``index.html`` ) when a viewer requests the root URL for your distribution
            (``http://www.example.com`` ) instead of an object in your distribution
            (``http://www.example.com/product-description.html`` ). Specifying a default root object
            avoids exposing the contents of your distribution.

            Specify only the object name, for example, ``index.html`` . Don't add a ``/`` before the
            object name.

            If you don't want to specify a default root object when you create a distribution,
            include an empty ``DefaultRootObject`` element.

            To delete the default root object from an existing distribution, update the distribution
            configuration and include an empty ``DefaultRootObject`` element.

            To replace the default root object, update the distribution configuration and specify
            the new object.

            For more information about the default root object, see `Creating a Default Root Object
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
            in the *Amazon CloudFront Developer Guide* .

          - **Origins** *(dict) --* **[REQUIRED]**

            A complex type that contains information about origins for this distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of origins or origin groups for this distribution.

            - **Items** *(list) --* **[REQUIRED]**

              A complex type that contains origins or origin groups for this distribution.

              - *(dict) --*

                A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web
                server), Amazon MediaStore, or other server from which CloudFront gets your files.
                This can also be an origin group, if you've created an origin group. You must
                specify at least one origin or origin group.

                For the current limit on the number of origins or origin groups that you can specify
                for a distribution, see `Amazon CloudFront Limits
                <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                in the *AWS General Reference* .

                - **Id** *(string) --* **[REQUIRED]**

                  A unique identifier for the origin or origin group. The value of ``Id`` must be
                  unique within the distribution.

                  When you specify the value of ``TargetOriginId`` for the default cache behavior or
                  for another cache behavior, you indicate the origin to which you want the cache
                  behavior to route requests by specifying the value of the ``Id`` element for that
                  origin. When a request matches the path pattern for that cache behavior,
                  CloudFront routes the request to the specified origin. For more information, see
                  `Cache Behavior Settings
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **DomainName** *(string) --* **[REQUIRED]**

                   **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you want
                   CloudFront to get objects for this origin, for example,
                   ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be configured as
                   a website endpoint, enter the Amazon S3 static website hosting endpoint for the
                   bucket.

                  For more information about specifying this value for different types of origins,
                  see `Origin Domain Name
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                  in the *Amazon CloudFront Developer Guide* .

                  Constraints for Amazon S3 origins:

                  * If you configured Amazon S3 Transfer Acceleration for your bucket, don't specify
                  the ``s3-accelerate`` endpoint for ``DomainName`` .

                  * The bucket name must be between 3 and 63 characters long (inclusive).

                  * The bucket name must contain only lowercase characters, numbers, periods,
                  underscores, and dashes.

                  * The bucket name must not contain adjacent periods.

                   **Custom Origins** : The DNS domain name for the HTTP server from which you want
                   CloudFront to get objects for this origin, for example, ``www.example.com`` .

                  Constraints for custom origins:

                  * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9, dot
                  (.), hyphen (-), or underscore (_) characters.

                  * The name cannot exceed 128 characters.

                - **OriginPath** *(string) --*

                  An optional element that causes CloudFront to request your content from a
                  directory in your Amazon S3 bucket or your custom origin. When you include the
                  ``OriginPath`` element, specify the directory name, beginning with a ``/`` .
                  CloudFront appends the directory name to the value of ``DomainName`` , for
                  example, ``example.com/production`` . Do not include a ``/`` at the end of the
                  directory name.

                  For example, suppose you've specified the following values for your distribution:

                  * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                  * ``OriginPath`` : ``/production``

                  * ``CNAME`` : ``example.com``

                  When a user enters ``example.com/index.html`` in a browser, CloudFront sends a
                  request to Amazon S3 for ``myawsbucket/production/index.html`` .

                  When a user enters ``example.com/acme/index.html`` in a browser, CloudFront sends
                  a request to Amazon S3 for ``myawsbucket/production/acme/index.html`` .

                - **CustomHeaders** *(dict) --*

                  A complex type that contains names and values for the custom headers that you
                  want.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of custom headers, if any, for this distribution.

                  - **Items** *(list) --*

                     **Optional** : A list that contains one ``OriginCustomHeader`` element for each
                     custom header that you want CloudFront to forward to the origin. If Quantity is
                     ``0`` , omit ``Items`` .

                    - *(dict) --*

                      A complex type that contains ``HeaderName`` and ``HeaderValue`` elements, if
                      any, for this distribution.

                      - **HeaderName** *(string) --* **[REQUIRED]**

                        The name of a header that you want CloudFront to forward to your origin. For
                        more information, see `Forwarding Custom Headers to Your Origin (Web
                        Distributions Only)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **HeaderValue** *(string) --* **[REQUIRED]**

                        The value for the header that you specified in the ``HeaderName`` field.

                - **S3OriginConfig** *(dict) --*

                  A complex type that contains information about the Amazon S3 origin. If the origin
                  is a custom origin, use the ``CustomOriginConfig`` element instead.

                  - **OriginAccessIdentity** *(string) --* **[REQUIRED]**

                    The CloudFront origin access identity to associate with the origin. Use an
                    origin access identity to configure the origin so that viewers can *only* access
                    objects in an Amazon S3 bucket through CloudFront. The format of the value is:

                    origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                    where `` *ID-of-origin-access-identity* `` is the value that CloudFront returned
                    in the ``ID`` element when you created the origin access identity.

                    If you want viewers to be able to access objects using either the CloudFront URL
                    or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                    To delete the origin access identity from an existing distribution, update the
                    distribution configuration and include an empty ``OriginAccessIdentity``
                    element.

                    To replace the origin access identity, update the distribution configuration and
                    specify the new origin access identity.

                    For more information about the origin access identity, see `Serving Private
                    Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **CustomOriginConfig** *(dict) --*

                  A complex type that contains information about a custom origin. If the origin is
                  an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                  - **HTTPPort** *(integer) --* **[REQUIRED]**

                    The HTTP port the custom origin listens on.

                  - **HTTPSPort** *(integer) --* **[REQUIRED]**

                    The HTTPS port the custom origin listens on.

                  - **OriginProtocolPolicy** *(string) --* **[REQUIRED]**

                    The origin protocol policy to apply to your origin.

                  - **OriginSslProtocols** *(dict) --*

                    The SSL/TLS protocols that you want CloudFront to use when communicating with
                    your origin over HTTPS.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of SSL/TLS protocols that you want to allow CloudFront to use when
                      establishing an HTTPS connection with this origin.

                    - **Items** *(list) --* **[REQUIRED]**

                      A list that contains allowed SSL/TLS protocols for this distribution.

                      - *(string) --*

                  - **OriginReadTimeout** *(integer) --*

                    You can create a custom origin read timeout. All timeout units are in seconds.
                    The default origin read timeout is 30 seconds, but you can configure custom
                    timeout lengths using the CloudFront API. The minimum timeout length is 4
                    seconds; the maximum is 60 seconds.

                    If you need to increase the maximum time limit, contact the `AWS Support Center
                    <https://console.aws.amazon.com/support/home#/>`__ .

                  - **OriginKeepaliveTimeout** *(integer) --*

                    You can create a custom keep-alive timeout. All timeout units are in seconds.
                    The default keep-alive timeout is 5 seconds, but you can configure custom
                    timeout lengths using the CloudFront API. The minimum timeout length is 1
                    second; the maximum is 60 seconds.

                    If you need to increase the maximum time limit, contact the `AWS Support Center
                    <https://console.aws.amazon.com/support/home#/>`__ .

          - **OriginGroups** *(dict) --*

            A complex type that contains information about origin groups for this distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of origin groups.

            - **Items** *(list) --*

              The items (origin groups) in a distribution.

              - *(dict) --*

                An origin group includes two origins (a primary origin and a second origin to
                failover to) and a failover criteria that you specify. You create an origin group to
                support origin failover in CloudFront. When you create or update a distribution, you
                can specifiy the origin group instead of a single origin, and CloudFront will
                failover from the primary origin to the second origin under the failover conditions
                that you've chosen.

                - **Id** *(string) --* **[REQUIRED]**

                  The origin group's ID.

                - **FailoverCriteria** *(dict) --* **[REQUIRED]**

                  A complex type that contains information about the failover criteria for an origin
                  group.

                  - **StatusCodes** *(dict) --* **[REQUIRED]**

                    The status codes that, when returned from the primary origin, will trigger
                    CloudFront to failover to the second origin.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of status codes.

                    - **Items** *(list) --* **[REQUIRED]**

                      The items (status codes) for an origin group.

                      - *(integer) --*

                - **Members** *(dict) --* **[REQUIRED]**

                  A complex type that contains information about the origins in an origin group.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of origins in an origin group.

                  - **Items** *(list) --* **[REQUIRED]**

                    Items (origins) in an origin group.

                    - *(dict) --*

                      An origin in an origin group.

                      - **OriginId** *(string) --* **[REQUIRED]**

                        The ID for an origin in an origin group.

          - **DefaultCacheBehavior** *(dict) --* **[REQUIRED]**

            A complex type that describes the default cache behavior if you don't specify a
            ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern``
            in ``CacheBehavior`` elements. You must create exactly one default cache behavior.

            - **TargetOriginId** *(string) --* **[REQUIRED]**

              The value of ``ID`` for the origin that you want CloudFront to route requests to when
              a request matches the path pattern either for a cache behavior or for the default
              cache behavior in your distribution.

            - **ForwardedValues** *(dict) --* **[REQUIRED]**

              A complex type that specifies how CloudFront handles query strings and cookies.

              - **QueryString** *(boolean) --* **[REQUIRED]**

                Indicates whether you want CloudFront to forward query strings to the origin that is
                associated with this cache behavior and cache based on the query string parameters.
                CloudFront behavior depends on the value of ``QueryString`` and on the values that
                you specify for ``QueryStringCacheKeys`` , if any:

                If you specify true for ``QueryString`` and you don't specify any values for
                ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to the
                origin and caches based on all query string parameters. Depending on how many query
                string parameters and values you have, this can adversely affect performance because
                CloudFront must forward more requests to the origin.

                If you specify true for ``QueryString`` and you specify one or more values for
                ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to the
                origin, but it only caches based on the query string parameters that you specify.

                If you specify false for ``QueryString`` , CloudFront doesn't forward any query
                string parameters to the origin, and doesn't cache based on query string parameters.

                For more information, see `Configuring CloudFront to Cache Based on Query String
                Parameters
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **Cookies** *(dict) --* **[REQUIRED]**

                A complex type that specifies whether you want CloudFront to forward cookies to the
                origin and, if so, which ones. For more information about forwarding cookies to the
                origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Forward** *(string) --* **[REQUIRED]**

                  Specifies which cookies to forward to the origin for this cache behavior: all,
                  none, or the list of cookies specified in the ``WhitelistedNames`` complex type.

                  Amazon S3 doesn't process cookies. When the cache behavior is forwarding requests
                  to an Amazon S3 origin, specify none for the ``Forward`` element.

                - **WhitelistedNames** *(dict) --*

                  Required if you specify ``whitelist`` for the value of ``Forward:`` . A complex
                  type that specifies how many different cookies you want CloudFront to forward to
                  the origin for this cache behavior and, if you want to forward selected cookies,
                  the names of those cookies.

                  If you specify ``all`` or none for the value of ``Forward`` , omit
                  ``WhitelistedNames`` . If you change the value of ``Forward`` from ``whitelist``
                  to all or none and you don't delete the ``WhitelistedNames`` element and its child
                  elements, CloudFront deletes them automatically.

                  For the current limit on the number of cookie names that you can whitelist for
                  each cache behavior, see `CloudFront Limits
                  <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                  in the *AWS General Reference* .

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of different cookies that you want CloudFront to forward to the
                    origin for this cache behavior.

                  - **Items** *(list) --*

                    A complex type that contains one ``Name`` element for each cookie that you want
                    CloudFront to forward to the origin for this cache behavior.

                    - *(string) --*

              - **Headers** *(dict) --*

                A complex type that specifies the ``Headers`` , if any, that you want CloudFront to
                forward to the origin for this cache behavior (whitelisted headers). For the headers
                that you specify, CloudFront also caches separate versions of a specified object
                that is based on the header values in viewer requests.

                For more information, see `Caching Content Based on Request Headers
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of different headers that you want CloudFront to base caching on for
                  this cache behavior. You can configure each cache behavior in a web distribution
                  to do one of the following:

                  * **Forward all headers to your origin** : Specify ``1`` for ``Quantity`` and
                  ``*`` for ``Name`` .

                  .. warning::

                     CloudFront doesn't cache the objects that are associated with this cache
                     behavior. Instead, CloudFront sends every request to the origin.

                  * **Forward a whitelist of headers you specify** : Specify the number of headers
                  that you want CloudFront to base caching on. Then specify the header names in
                  ``Name`` elements. CloudFront caches your objects based on the values in the
                  specified headers.

                  * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and omit
                  ``Items`` . In this configuration, CloudFront doesn't cache based on the values in
                  the request headers.

                  Regardless of which option you choose, CloudFront forwards headers to your origin
                  based on whether the origin is an S3 bucket or a custom origin. See the following
                  documentation:

                  * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or Updates
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                  * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                - **Items** *(list) --*

                  A list that contains one ``Name`` element for each header that you want CloudFront
                  to use for caching in this cache behavior. If ``Quantity`` is ``0`` , omit
                  ``Items`` .

                  - *(string) --*

              - **QueryStringCacheKeys** *(dict) --*

                A complex type that contains information about the query string parameters that you
                want CloudFront to use for caching for this cache behavior.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of ``whitelisted`` query string parameters for a cache behavior.

                - **Items** *(list) --*

                  A list that contains the query string parameters that you want CloudFront to use
                  as a basis for caching for a cache behavior. If ``Quantity`` is 0, you can omit
                  ``Items`` .

                  - *(string) --*

            - **TrustedSigners** *(dict) --* **[REQUIRED]**

              A complex type that specifies the AWS accounts, if any, that you want to allow to
              create signed URLs for private content.

              If you want to require signed URLs in requests for objects in the target origin that
              match the ``PathPattern`` for this cache behavior, specify ``true`` for ``Enabled`` ,
              and specify the applicable values for ``Quantity`` and ``Items`` . For more
              information, see `Serving Private Content through CloudFront
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
              in the *Amazon CloudFront Developer Guide* .

              If you don't want to require signed URLs in requests for objects that match
              ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` . Omit
              ``Items`` .

              To add, change, or remove one or more trusted signers, change ``Enabled`` to ``true``
              (if it's currently ``false`` ), change ``Quantity`` as applicable, and specify all of
              the trusted signers that you want to include in the updated distribution.

              - **Enabled** *(boolean) --* **[REQUIRED]**

                Specifies whether you want to require viewers to use signed URLs to access the files
                specified by ``PathPattern`` and ``TargetOriginId`` .

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of trusted signers for this cache behavior.

              - **Items** *(list) --*

                 **Optional** : A complex type that contains trusted signers for this cache
                 behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                - *(string) --*

            - **ViewerProtocolPolicy** *(string) --* **[REQUIRED]**

              The protocol that viewers can use to access the files in the origin specified by
              ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` . You
              can specify the following options:

              * ``allow-all`` : Viewers can use HTTP or HTTPS.

              * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront returns an
              HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL.
              The viewer then resubmits the request using the new URL.

              * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
              status code of 403 (Forbidden).

              For more information about requiring the HTTPS protocol, see `Using an HTTPS
              Connection to Access Your Objects
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
              in the *Amazon CloudFront Developer Guide* .

              .. note::

                The only way to guarantee that viewers retrieve an object that was fetched from the
                origin using HTTPS is never to use any other protocol to fetch the object. If you
                have recently changed from HTTP to HTTPS, we recommend that you clear your objects'
                cache because cached objects are protocol agnostic. That means that an edge location
                will return an object from the cache regardless of whether the current request
                protocol matches the protocol used previously. For more information, see `Managing
                How Long Content Stays in an Edge Cache (Expiration)
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                in the *Amazon CloudFront Developer Guide* .

            - **MinTTL** *(integer) --* **[REQUIRED]**

              The minimum amount of time that you want objects to stay in CloudFront caches before
              CloudFront forwards another request to your origin to determine whether the object has
              been updated. For more information, see `Managing How Long Content Stays in an Edge
              Cache (Expiration)
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
              in the *Amazon CloudFront Developer Guide* .

              You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
              headers to your origin (under ``Headers`` , if you specify ``1`` for ``Quantity`` and
              ``*`` for ``Name`` ).

            - **AllowedMethods** *(dict) --*

              A complex type that controls which HTTP methods CloudFront processes and forwards to
              your Amazon S3 bucket or your custom origin. There are three choices:

              * CloudFront forwards only ``GET`` and ``HEAD`` requests.

              * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

              * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
              requests.

              If you pick the third choice, you may need to restrict access to your Amazon S3 bucket
              or to your custom origin so users can't perform operations that you don't want them
              to. For example, you might not want users to have permissions to delete objects from
              your origin.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of HTTP methods that you want CloudFront to forward to your origin. Valid
                values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` , ``HEAD`` , and
                ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                ``DELETE`` requests).

              - **Items** *(list) --* **[REQUIRED]**

                A complex type that contains the HTTP methods that you want CloudFront to process
                and forward to your origin.

                - *(string) --*

              - **CachedMethods** *(dict) --*

                A complex type that controls whether CloudFront caches the response to requests
                using the specified HTTP methods. There are two choices:

                * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                If you pick the second choice for your Amazon S3 Origin, you may need to forward
                Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers
                for the responses to be cached correctly.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of HTTP methods for which you want CloudFront to cache responses. Valid
                  values are ``2`` (for caching responses to ``GET`` and ``HEAD`` requests) and
                  ``3`` (for caching responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests).

                - **Items** *(list) --* **[REQUIRED]**

                  A complex type that contains the HTTP methods that you want CloudFront to cache
                  responses to.

                  - *(string) --*

            - **SmoothStreaming** *(boolean) --*

              Indicates whether you want to distribute media files in the Microsoft Smooth Streaming
              format using the origin that is associated with this cache behavior. If so, specify
              ``true`` ; if not, specify ``false`` . If you specify ``true`` for ``SmoothStreaming``
              , you can still distribute other content using this cache behavior if the content
              matches the value of ``PathPattern`` .

            - **DefaultTTL** *(integer) --*

              The default amount of time that you want objects to stay in CloudFront caches before
              CloudFront forwards another request to your origin to determine whether the object has
              been updated. The value that you specify applies only when your origin does not add
              HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and
              ``Expires`` to objects. For more information, see `Managing How Long Content Stays in
              an Edge Cache (Expiration)
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **MaxTTL** *(integer) --*

              The maximum amount of time that you want objects to stay in CloudFront caches before
              CloudFront forwards another request to your origin to determine whether the object has
              been updated. The value that you specify applies only when your origin adds HTTP
              headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and
              ``Expires`` to objects. For more information, see `Managing How Long Content Stays in
              an Edge Cache (Expiration)
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **Compress** *(boolean) --*

              Whether you want CloudFront to automatically compress certain files for this cache
              behavior. If so, specify ``true`` ; if not, specify ``false`` . For more information,
              see `Serving Compressed Files
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **LambdaFunctionAssociations** *(dict) --*

              A complex type that contains zero or more Lambda function associations for a cache
              behavior.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of Lambda function associations for this cache behavior.

              - **Items** *(list) --*

                 **Optional** : A complex type that contains ``LambdaFunctionAssociation`` items for
                 this cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                - *(dict) --*

                  A complex type that contains a Lambda function association.

                  - **LambdaFunctionARN** *(string) --* **[REQUIRED]**

                    The ARN of the Lambda function. You must specify the ARN of a function version;
                    you can't specify a Lambda alias or $LATEST.

                  - **EventType** *(string) --* **[REQUIRED]**

                    Specifies the event type that triggers a Lambda function invocation. You can
                    specify the following values:

                    * ``viewer-request`` : The function executes when CloudFront receives a request
                    from a viewer and before it checks to see whether the requested object is in the
                    edge cache.

                    * ``origin-request`` : The function executes only when CloudFront forwards a
                    request to your origin. When the requested object is in the edge cache, the
                    function doesn't execute.

                    * ``origin-response`` : The function executes after CloudFront receives a
                    response from the origin and before it caches the object in the response. When
                    the requested object is in the edge cache, the function doesn't execute.

                    * ``viewer-response`` : The function executes before CloudFront returns the
                    requested object to the viewer. The function executes regardless of whether the
                    object was already in the edge cache. If the origin returns an HTTP status code
                    other than HTTP 200 (OK), the function doesn't execute.

                  - **IncludeBody** *(boolean) --*

                    A flag that allows a Lambda function to have read access to the body content.
                    For more information, see `Accessing the Request Body by Choosing the Include
                    Body Option
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                    in the Amazon CloudFront Developer Guide.

            - **FieldLevelEncryptionId** *(string) --*

              The value of ``ID`` for the field-level encryption configuration that you want
              CloudFront to use for encrypting specific fields of data for a cache behavior or for
              the default cache behavior in your distribution.

          - **CacheBehaviors** *(dict) --*

            A complex type that contains zero or more ``CacheBehavior`` elements.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of cache behaviors for this distribution.

            - **Items** *(list) --*

              Optional: A complex type that contains cache behaviors for this distribution. If
              ``Quantity`` is ``0`` , you can omit ``Items`` .

              - *(dict) --*

                A complex type that describes how CloudFront processes requests.

                You must create at least as many cache behaviors (including the default cache
                behavior) as you have origins if you want CloudFront to distribute objects from all
                of the origins. Each cache behavior specifies the one origin from which you want
                CloudFront to get objects. If you have two origins and only the default cache
                behavior, the default cache behavior will cause CloudFront to get objects from one
                of the origins, but the other origin is never used.

                For the current limit on the number of cache behaviors that you can add to a
                distribution, see `Amazon CloudFront Limits
                <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                in the *AWS General Reference* .

                If you don't want to specify any cache behaviors, include only an empty
                ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element, or
                CloudFront returns a ``MalformedXML`` error.

                To delete all cache behaviors in an existing distribution, update the distribution
                configuration and include only an empty ``CacheBehaviors`` element.

                To add, change, or remove one or more cache behaviors, update the distribution
                configuration and specify all of the cache behaviors that you want to include in the
                updated distribution.

                For more information about cache behaviors, see `Cache Behaviors
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                in the *Amazon CloudFront Developer Guide* .

                - **PathPattern** *(string) --* **[REQUIRED]**

                  The pattern (for example, ``images/*.jpg`` ) that specifies which requests to
                  apply the behavior to. When CloudFront receives a viewer request, the requested
                  path is compared with path patterns in the order in which cache behaviors are
                  listed in the distribution.

                  .. note::

                    You can optionally include a slash (``/`` ) at the beginning of the path
                    pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same with
                    or without the leading ``/`` .

                  The path pattern for the default cache behavior is ``*`` and cannot be changed. If
                  the request for an object does not match the path pattern for any cache behaviors,
                  CloudFront applies the behavior in the default cache behavior.

                  For more information, see `Path Pattern
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **TargetOriginId** *(string) --* **[REQUIRED]**

                  The value of ``ID`` for the origin that you want CloudFront to route requests to
                  when a request matches the path pattern either for a cache behavior or for the
                  default cache behavior in your distribution.

                - **ForwardedValues** *(dict) --* **[REQUIRED]**

                  A complex type that specifies how CloudFront handles query strings and cookies.

                  - **QueryString** *(boolean) --* **[REQUIRED]**

                    Indicates whether you want CloudFront to forward query strings to the origin
                    that is associated with this cache behavior and cache based on the query string
                    parameters. CloudFront behavior depends on the value of ``QueryString`` and on
                    the values that you specify for ``QueryStringCacheKeys`` , if any:

                    If you specify true for ``QueryString`` and you don't specify any values for
                    ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                    the origin and caches based on all query string parameters. Depending on how
                    many query string parameters and values you have, this can adversely affect
                    performance because CloudFront must forward more requests to the origin.

                    If you specify true for ``QueryString`` and you specify one or more values for
                    ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                    the origin, but it only caches based on the query string parameters that you
                    specify.

                    If you specify false for ``QueryString`` , CloudFront doesn't forward any query
                    string parameters to the origin, and doesn't cache based on query string
                    parameters.

                    For more information, see `Configuring CloudFront to Cache Based on Query String
                    Parameters
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Cookies** *(dict) --* **[REQUIRED]**

                    A complex type that specifies whether you want CloudFront to forward cookies to
                    the origin and, if so, which ones. For more information about forwarding cookies
                    to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Forward** *(string) --* **[REQUIRED]**

                      Specifies which cookies to forward to the origin for this cache behavior: all,
                      none, or the list of cookies specified in the ``WhitelistedNames`` complex
                      type.

                      Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                      requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                    - **WhitelistedNames** *(dict) --*

                      Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                      complex type that specifies how many different cookies you want CloudFront to
                      forward to the origin for this cache behavior and, if you want to forward
                      selected cookies, the names of those cookies.

                      If you specify ``all`` or none for the value of ``Forward`` , omit
                      ``WhitelistedNames`` . If you change the value of ``Forward`` from
                      ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                      element and its child elements, CloudFront deletes them automatically.

                      For the current limit on the number of cookie names that you can whitelist for
                      each cache behavior, see `CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of different cookies that you want CloudFront to forward to the
                        origin for this cache behavior.

                      - **Items** *(list) --*

                        A complex type that contains one ``Name`` element for each cookie that you
                        want CloudFront to forward to the origin for this cache behavior.

                        - *(string) --*

                  - **Headers** *(dict) --*

                    A complex type that specifies the ``Headers`` , if any, that you want CloudFront
                    to forward to the origin for this cache behavior (whitelisted headers). For the
                    headers that you specify, CloudFront also caches separate versions of a
                    specified object that is based on the header values in viewer requests.

                    For more information, see `Caching Content Based on Request Headers
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of different headers that you want CloudFront to base caching on
                      for this cache behavior. You can configure each cache behavior in a web
                      distribution to do one of the following:

                      * **Forward all headers to your origin** : Specify ``1`` for ``Quantity`` and
                      ``*`` for ``Name`` .

                      .. warning::

                         CloudFront doesn't cache the objects that are associated with this cache
                         behavior. Instead, CloudFront sends every request to the origin.

                      * **Forward a whitelist of headers you specify** : Specify the number of
                      headers that you want CloudFront to base caching on. Then specify the header
                      names in ``Name`` elements. CloudFront caches your objects based on the values
                      in the specified headers.

                      * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                      omit ``Items`` . In this configuration, CloudFront doesn't cache based on the
                      values in the request headers.

                      Regardless of which option you choose, CloudFront forwards headers to your
                      origin based on whether the origin is an S3 bucket or a custom origin. See the
                      following documentation:

                      * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or Updates
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                      * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                    - **Items** *(list) --*

                      A list that contains one ``Name`` element for each header that you want
                      CloudFront to use for caching in this cache behavior. If ``Quantity`` is ``0``
                      , omit ``Items`` .

                      - *(string) --*

                  - **QueryStringCacheKeys** *(dict) --*

                    A complex type that contains information about the query string parameters that
                    you want CloudFront to use for caching for this cache behavior.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of ``whitelisted`` query string parameters for a cache behavior.

                    - **Items** *(list) --*

                      A list that contains the query string parameters that you want CloudFront to
                      use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you can
                      omit ``Items`` .

                      - *(string) --*

                - **TrustedSigners** *(dict) --* **[REQUIRED]**

                  A complex type that specifies the AWS accounts, if any, that you want to allow to
                  create signed URLs for private content.

                  If you want to require signed URLs in requests for objects in the target origin
                  that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                  ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                  For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you don't want to require signed URLs in requests for objects that match
                  ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                  Omit ``Items`` .

                  To add, change, or remove one or more trusted signers, change ``Enabled`` to
                  ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                  specify all of the trusted signers that you want to include in the updated
                  distribution.

                  - **Enabled** *(boolean) --* **[REQUIRED]**

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **ViewerProtocolPolicy** *(string) --* **[REQUIRED]**

                  The protocol that viewers can use to access the files in the origin specified by
                  ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                  You can specify the following options:

                  * ``allow-all`` : Viewers can use HTTP or HTTPS.

                  * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront returns
                  an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS
                  URL. The viewer then resubmits the request using the new URL.

                  * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                  status code of 403 (Forbidden).

                  For more information about requiring the HTTPS protocol, see `Using an HTTPS
                  Connection to Access Your Objects
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  .. note::

                    The only way to guarantee that viewers retrieve an object that was fetched from
                    the origin using HTTPS is never to use any other protocol to fetch the object.
                    If you have recently changed from HTTP to HTTPS, we recommend that you clear
                    your objects' cache because cached objects are protocol agnostic. That means
                    that an edge location will return an object from the cache regardless of whether
                    the current request protocol matches the protocol used previously. For more
                    information, see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **MinTTL** *(integer) --* **[REQUIRED]**

                  The minimum amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. For more information, see `Managing How Long Content
                  Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                  headers to your origin (under ``Headers`` , if you specify ``1`` for ``Quantity``
                  and ``*`` for ``Name`` ).

                - **AllowedMethods** *(dict) --*

                  A complex type that controls which HTTP methods CloudFront processes and forwards
                  to your Amazon S3 bucket or your custom origin. There are three choices:

                  * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                  * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                  * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                  requests.

                  If you pick the third choice, you may need to restrict access to your Amazon S3
                  bucket or to your custom origin so users can't perform operations that you don't
                  want them to. For example, you might not want users to have permissions to delete
                  objects from your origin.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of HTTP methods that you want CloudFront to forward to your origin.
                    Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                    ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                    PATCH, POST`` , and ``DELETE`` requests).

                  - **Items** *(list) --* **[REQUIRED]**

                    A complex type that contains the HTTP methods that you want CloudFront to
                    process and forward to your origin.

                    - *(string) --*

                  - **CachedMethods** *(dict) --*

                    A complex type that controls whether CloudFront caches the response to requests
                    using the specified HTTP methods. There are two choices:

                    * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                    * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    If you pick the second choice for your Amazon S3 Origin, you may need to forward
                    Access-Control-Request-Method, Access-Control-Request-Headers, and Origin
                    headers for the responses to be cached correctly.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of HTTP methods for which you want CloudFront to cache responses.
                      Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                      requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                      ``OPTIONS`` requests).

                    - **Items** *(list) --* **[REQUIRED]**

                      A complex type that contains the HTTP methods that you want CloudFront to
                      cache responses to.

                      - *(string) --*

                - **SmoothStreaming** *(boolean) --*

                  Indicates whether you want to distribute media files in the Microsoft Smooth
                  Streaming format using the origin that is associated with this cache behavior. If
                  so, specify ``true`` ; if not, specify ``false`` . If you specify ``true`` for
                  ``SmoothStreaming`` , you can still distribute other content using this cache
                  behavior if the content matches the value of ``PathPattern`` .

                - **DefaultTTL** *(integer) --*

                  The default amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. The value that you specify applies only when your origin
                  does not add HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                  s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                  Long Content Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **MaxTTL** *(integer) --*

                  The maximum amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. The value that you specify applies only when your origin
                  adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` ,
                  and ``Expires`` to objects. For more information, see `Managing How Long Content
                  Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Compress** *(boolean) --*

                  Whether you want CloudFront to automatically compress certain files for this cache
                  behavior. If so, specify true; if not, specify false. For more information, see
                  `Serving Compressed Files
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **LambdaFunctionAssociations** *(dict) --*

                  A complex type that contains zero or more Lambda function associations for a cache
                  behavior.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of Lambda function associations for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains ``LambdaFunctionAssociation`` items
                     for this cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that contains a Lambda function association.

                      - **LambdaFunctionARN** *(string) --* **[REQUIRED]**

                        The ARN of the Lambda function. You must specify the ARN of a function
                        version; you can't specify a Lambda alias or $LATEST.

                      - **EventType** *(string) --* **[REQUIRED]**

                        Specifies the event type that triggers a Lambda function invocation. You can
                        specify the following values:

                        * ``viewer-request`` : The function executes when CloudFront receives a
                        request from a viewer and before it checks to see whether the requested
                        object is in the edge cache.

                        * ``origin-request`` : The function executes only when CloudFront forwards a
                        request to your origin. When the requested object is in the edge cache, the
                        function doesn't execute.

                        * ``origin-response`` : The function executes after CloudFront receives a
                        response from the origin and before it caches the object in the response.
                        When the requested object is in the edge cache, the function doesn't
                        execute.

                        * ``viewer-response`` : The function executes before CloudFront returns the
                        requested object to the viewer. The function executes regardless of whether
                        the object was already in the edge cache. If the origin returns an HTTP
                        status code other than HTTP 200 (OK), the function doesn't execute.

                      - **IncludeBody** *(boolean) --*

                        A flag that allows a Lambda function to have read access to the body
                        content. For more information, see `Accessing the Request Body by Choosing
                        the Include Body Option
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                        in the Amazon CloudFront Developer Guide.

                - **FieldLevelEncryptionId** *(string) --*

                  The value of ``ID`` for the field-level encryption configuration that you want
                  CloudFront to use for encrypting specific fields of data for a cache behavior or
                  for the default cache behavior in your distribution.

          - **CustomErrorResponses** *(dict) --*

            A complex type that controls the following:

            * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom
            error messages before returning the response to the viewer.

            * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

            For more information about custom error pages, see `Customizing Error Responses
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of HTTP status codes for which you want to specify a custom error page
              and/or a caching duration. If ``Quantity`` is ``0`` , you can omit ``Items`` .

            - **Items** *(list) --*

              A complex type that contains a ``CustomErrorResponse`` element for each HTTP status
              code for which you want to specify a custom error page and/or a caching duration.

              - *(dict) --*

                A complex type that controls:

                * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom
                error messages before returning the response to the viewer.

                * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                For more information about custom error pages, see `Customizing Error Responses
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **ErrorCode** *(integer) --* **[REQUIRED]**

                  The HTTP status code for which you want to specify a custom error page and/or a
                  caching duration.

                - **ResponsePagePath** *(string) --*

                  The path to the custom error page that you want CloudFront to return to a viewer
                  when your origin returns the HTTP status code specified by ``ErrorCode`` , for
                  example, ``/4xx-errors/403-forbidden.html`` . If you want to store your objects
                  and your custom error pages in different locations, your distribution must include
                  a cache behavior for which the following is true:

                  * The value of ``PathPattern`` matches the path to your custom error messages. For
                  example, suppose you saved custom error pages for 4xx errors in an Amazon S3
                  bucket in a directory named ``/4xx-errors`` . Your distribution must include a
                  cache behavior for which the path pattern routes requests for your custom error
                  pages to that location, for example, ``/4xx-errors/*`` .

                  * The value of ``TargetOriginId`` specifies the value of the ``ID`` element for
                  the origin that contains your custom error pages.

                  If you specify a value for ``ResponsePagePath`` , you must also specify a value
                  for ``ResponseCode`` . If you don't want to specify a value, include an empty
                  element, ``<ResponsePagePath>`` , in the XML document.

                  We recommend that you store custom error pages in an Amazon S3 bucket. If you
                  store custom error pages on an HTTP server and the server starts to return 5xx
                  errors, CloudFront can't get the files that you want to return to viewers because
                  the origin server is unavailable.

                - **ResponseCode** *(string) --*

                  The HTTP status code that you want CloudFront to return to the viewer along with
                  the custom error page. There are a variety of reasons that you might want
                  CloudFront to return a status code different from the status code that your origin
                  returned to CloudFront, for example:

                  * Some Internet devices (some firewalls and corporate proxies, for example)
                  intercept HTTP 4xx and 5xx and prevent the response from being returned to the
                  viewer. If you substitute ``200`` , the response typically won't be intercepted.

                  * If you don't care about distinguishing among different client errors or server
                  errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for all 4xx or
                  5xx errors.

                  * You might want to return a ``200`` status code (OK) and static website so your
                  customers don't know that your website is down.

                  If you specify a value for ``ResponseCode`` , you must also specify a value for
                  ``ResponsePagePath`` . If you don't want to specify a value, include an empty
                  element, ``<ResponseCode>`` , in the XML document.

                - **ErrorCachingMinTTL** *(integer) --*

                  The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP
                  status code specified in ``ErrorCode`` . When this time period has elapsed,
                  CloudFront queries your origin to see whether the problem that caused the error
                  has been resolved and the requested object is now available.

                  If you don't want to specify a value, include an empty element,
                  ``<ErrorCachingMinTTL>`` , in the XML document.

                  For more information, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

          - **Comment** *(string) --* **[REQUIRED]**

            Any comments you want to include about the distribution.

            If you don't want to specify a comment, include an empty ``Comment`` element.

            To delete an existing comment, update the distribution configuration and include an
            empty ``Comment`` element.

            To add or change a comment, update the distribution configuration and specify the new
            comment.

          - **Logging** *(dict) --*

            A complex type that controls whether access logs are written for the distribution.

            For more information about logging, see `Access Logs
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If
              you don't want to enable logging when you create a distribution or if you want to
              disable logging for an existing distribution, specify ``false`` for ``Enabled`` , and
              specify empty ``Bucket`` and ``Prefix`` elements. If you specify ``false`` for
              ``Enabled`` but you specify values for ``Bucket`` , ``prefix`` , and
              ``IncludeCookies`` , the values are automatically deleted.

            - **IncludeCookies** *(boolean) --* **[REQUIRED]**

              Specifies whether you want CloudFront to include cookies in access logs, specify
              ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs, CloudFront
              logs all cookies regardless of how you configure the cache behaviors for this
              distribution. If you don't want to include cookies when you create a distribution or
              if you want to disable include cookies for an existing distribution, specify ``false``
              for ``IncludeCookies`` .

            - **Bucket** *(string) --* **[REQUIRED]**

              The Amazon S3 bucket to store the access logs in, for example,
              ``myawslogbucket.s3.amazonaws.com`` .

            - **Prefix** *(string) --* **[REQUIRED]**

              An optional string that you want CloudFront to prefix to the access log ``filenames``
              for this distribution, for example, ``myprefix/`` . If you want to enable logging, but
              you don't want to specify a prefix, you still must include an empty ``Prefix`` element
              in the ``Logging`` element.

          - **PriceClass** *(string) --*

            The price class that corresponds with the maximum price that you want to pay for
            CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to requests
            for your objects from all CloudFront edge locations.

            If you specify a price class other than ``PriceClass_All`` , CloudFront serves your
            objects from the CloudFront edge location that has the lowest latency among the edge
            locations in your price class. Viewers who are in or near regions that are excluded from
            your specified price class may encounter slower performance.

            For more information about price classes, see `Choosing the Price Class for a CloudFront
            Distribution
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
            in the *Amazon CloudFront Developer Guide* . For information about CloudFront pricing,
            including how price classes (such as Price Class 100) map to CloudFront regions, see
            `Amazon CloudFront Pricing <http://aws.amazon.com/cloudfront/pricing/>`__ . For price
            class information, scroll down to see the table at the bottom of the page.

          - **Enabled** *(boolean) --* **[REQUIRED]**

            From this field, you can enable or disable the selected distribution.

          - **ViewerCertificate** *(dict) --*

            A complex type that specifies whether you want viewers to use HTTP or HTTPS to request
            your objects, whether you're using an alternate domain name with HTTPS, and if so, if
            you're using AWS Certificate Manager (ACM) or a third-party certificate authority.

            - **CloudFrontDefaultCertificate** *(boolean) --*

              If you're using the CloudFront domain name for your distribution, such as
              ``d111111abcdef8.cloudfront.net`` , specify the following value:

              * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

            - **IAMCertificateId** *(string) --*

              If you want viewers to use HTTPS to request your objects and you're using an alternate
              domain name, you must choose the type of certificate that you want to use. Specify the
              following value if you purchased your certificate from a third-party certificate
              authority:

              * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
              certificate ID* `` is the ID that IAM returned when you added the certificate to the
              IAM certificate store.

              If you specify ``IAMCertificateId`` , you must also specify a value for
              ``SSLSupportMethod`` .

            - **ACMCertificateArn** *(string) --*

              If you want viewers to use HTTPS to request your objects and you're using an alternate
              domain name, you must choose the type of certificate that you want to use. Specify the
              following value if ACM provided your certificate:

              * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>`` where
              `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS certificate
              that you want to use for this distribution.

              If you specify ``ACMCertificateArn`` , you must also specify a value for
              ``SSLSupportMethod`` .

            - **SSLSupportMethod** *(string) --*

              If you specify a value for `ACMCertificateArn
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
              or for `IAMCertificateId
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
              , you must also specify how you want CloudFront to serve HTTPS requests: using a
              method that works for browsers and clients released after 2010 or one that works for
              all clients.

              * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that support
              Server Name Indication (SNI). All modern browsers support SNI, but there are a few
              that don't. For a current list of the browsers that support SNI, see the `Wikipedia
              entry Server Name Indication <http://en.wikipedia.org/wiki/Server_Name_Indication>`__
              . To learn about options to explore if you have users with browsers that don't include
              SNI support, see `Choosing How CloudFront Serves HTTPS Requests
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
              in the *Amazon CloudFront Developer Guide* .

              * ``vip`` : CloudFront uses dedicated IP addresses for your content and can respond to
              HTTPS requests from any viewer. However, there are additional monthly charges. For
              details, including specific pricing information, see `Custom SSL options for Amazon
              CloudFront <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS
              marketing site.

              Don't specify a value for ``SSLSupportMethod`` if you specified
              ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

              For more information, see `Choosing How CloudFront Serves HTTPS Requests
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **MinimumProtocolVersion** *(string) --*

              Specify the security policy that you want CloudFront to use for HTTPS connections. A
              security policy determines two settings:

              * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

              * The cipher that CloudFront uses to encrypt the content that it returns to viewers

              .. note::

                On the CloudFront console, this setting is called **Security policy** .

              We recommend that you specify ``TLSv1.1_2016`` unless your users are using browsers or
              devices that do not support TLSv1.1 or later.

              When both of the following are true, you must specify ``TLSv1`` or later for the
              security policy:

              * You're using a custom certificate: you specified a value for ``ACMCertificateArn``
              or for ``IAMCertificateId``

              * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

              If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
              automatically sets the security policy to ``TLSv1`` regardless of the value that you
              specify for ``MinimumProtocolVersion`` .

              For information about the relationship between the security policy that you choose and
              the protocols and ciphers that CloudFront uses to communicate with viewers, see
              `Supported SSL/TLS Protocols and Ciphers for Communication Between Viewers and
              CloudFront
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
              in the *Amazon CloudFront Developer Guide* .

            - **Certificate** *(string) --*

              This field is no longer used. Use one of the following fields instead:

              * `ACMCertificateArn
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

              * `IAMCertificateId
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

              * `CloudFrontDefaultCertificate
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

            - **CertificateSource** *(string) --*

              This field is no longer used. Use one of the following fields instead:

              * `ACMCertificateArn
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

              * `IAMCertificateId
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

              * `CloudFrontDefaultCertificate
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

          - **Restrictions** *(dict) --*

            A complex type that identifies ways in which you want to restrict distribution of your
            content.

            - **GeoRestriction** *(dict) --* **[REQUIRED]**

              A complex type that controls the countries in which your content is distributed.
              CloudFront determines the location of your users using ``MaxMind`` GeoIP databases.

              - **RestrictionType** *(string) --* **[REQUIRED]**

                The method that you want to use to restrict distribution of your content by country:

                * ``none`` : No geo restriction is enabled, meaning access to content is not
                restricted by client geo location.

                * ``blacklist`` : The ``Location`` elements specify the countries in which you don't
                want CloudFront to distribute your content.

                * ``whitelist`` : The ``Location`` elements specify the countries in which you want
                CloudFront to distribute your content.

              - **Quantity** *(integer) --* **[REQUIRED]**

                When geo restriction is ``enabled`` , this is the number of countries in your
                ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled, ``Quantity`` is
                ``0`` , and you can omit ``Items`` .

              - **Items** *(list) --*

                A complex type that contains a ``Location`` element for each country in which you
                want CloudFront either to distribute your content (``whitelist`` ) or not distribute
                your content (``blacklist`` ).

                The ``Location`` element is a two-letter, uppercase country code for a country that
                you want to include in your ``blacklist`` or ``whitelist`` . Include one
                ``Location`` element for each country.

                CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list
                of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the
                *International Organization for Standardization* website. You can also refer to the
                country list on the CloudFront console, which includes both country names and codes.

                - *(string) --*

          - **WebACLId** *(string) --*

            A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this
            distribution.

            AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests
            that are forwarded to CloudFront, and lets you control access to your content. Based on
            conditions that you specify, such as the IP addresses that requests originate from or
            the values of query strings, CloudFront responds to requests either with the requested
            content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront
            to return a custom error page when a request is blocked. For more information about AWS
            WAF, see the `AWS WAF Developer Guide
            <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

          - **HttpVersion** *(string) --*

            (Optional) Specify the maximum HTTP version that you want viewers to use to communicate
            with CloudFront. The default value for new web distributions is http2. Viewers that
            don't support HTTP/2 automatically use an earlier HTTP version.

            For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and
            must support Server Name Identification (SNI).

            In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces
            latency. You can improve performance by optimizing for HTTP/2. For more information, do
            an Internet search for "http/2 optimization."

          - **IsIPV6Enabled** *(boolean) --*

            If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your
            distribution, specify ``true`` . If you specify ``false`` , CloudFront responds to IPv6
            DNS requests with the DNS response code ``NOERROR`` and with no IP addresses. This
            allows viewers to submit a second request, for an IPv4 address for your distribution.

            In general, you should enable IPv6 if you have users on IPv6 networks who want to access
            your content. However, if you're using signed URLs or signed cookies to restrict access
            to your content, and if you're using a custom policy that includes the ``IpAddress``
            parameter to restrict the IP addresses that can access your content, don't enable IPv6.
            If you want to restrict access to some content by IP address and not restrict access to
            other content (or restrict access but not by IP address), you can create two
            distributions. For more information, see `Creating a Signed URL Using a Custom Policy
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
            in the *Amazon CloudFront Developer Guide* .

            If you're using an Amazon Route 53 alias resource record set to route traffic to your
            CloudFront distribution, you need to create a second alias resource record set when both
            of the following are true:

            * You enable IPv6 for the distribution

            * You're using alternate domain names in the URLs for your objects

            For more information, see `Routing Traffic to an Amazon CloudFront Web Distribution by
            Using Your Domain Name
            <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
            in the *Amazon Route 53 Developer Guide* .

            If you created a CNAME resource record set, either with Amazon Route 53 or with another
            DNS service, you don't need to make any changes. A CNAME record will route traffic to
            your distribution regardless of the IP address format of the viewer request.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Distribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'InProgressInvalidationBatches': 123,
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'DistributionConfig': {
                        'CallerReference': 'string',
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'DefaultRootObject': 'string',
                        'Origins': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'DomainName': 'string',
                                    'OriginPath': 'string',
                                    'CustomHeaders': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'HeaderName': 'string',
                                                'HeaderValue': 'string'
                                            },
                                        ]
                                    },
                                    'S3OriginConfig': {
                                        'OriginAccessIdentity': 'string'
                                    },
                                    'CustomOriginConfig': {
                                        'HTTPPort': 123,
                                        'HTTPSPort': 123,
                                        'OriginProtocolPolicy':
                                        'http-only'|'match-viewer'
                                        |'https-only',
                                        'OriginSslProtocols': {
                                            'Quantity': 123,
                                            'Items': [
                                                'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                            ]
                                        },
                                        'OriginReadTimeout': 123,
                                        'OriginKeepaliveTimeout': 123
                                    }
                                },
                            ]
                        },
                        'OriginGroups': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'FailoverCriteria': {
                                        'StatusCodes': {
                                            'Quantity': 123,
                                            'Items': [
                                                123,
                                            ]
                                        }
                                    },
                                    'Members': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'OriginId': 'string'
                                            },
                                        ]
                                    }
                                },
                            ]
                        },
                        'DefaultCacheBehavior': {
                            'TargetOriginId': 'string',
                            'ForwardedValues': {
                                'QueryString': True|False,
                                'Cookies': {
                                    'Forward': 'none'|'whitelist'|'all',
                                    'WhitelistedNames': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'Headers': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'QueryStringCacheKeys': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'TrustedSigners': {
                                'Enabled': True|False,
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                            'MinTTL': 123,
                            'AllowedMethods': {
                                'Quantity': 123,
                                'Items': [
                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                ],
                                'CachedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ]
                                }
                            },
                            'SmoothStreaming': True|False,
                            'DefaultTTL': 123,
                            'MaxTTL': 123,
                            'Compress': True|False,
                            'LambdaFunctionAssociations': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'LambdaFunctionARN': 'string',
                                        'EventType':
                                        'viewer-request'
                                        |'viewer-response'
                                        |'origin-request'
                                        |'origin-response',
                                        'IncludeBody': True|False
                                    },
                                ]
                            },
                            'FieldLevelEncryptionId': 'string'
                        },
                        'CacheBehaviors': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PathPattern': 'string',
                                    'TargetOriginId': 'string',
                                    'ForwardedValues': {
                                        'QueryString': True|False,
                                        'Cookies': {
                                            'Forward': 'none'|'whitelist'|'all',
                                            'WhitelistedNames': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            }
                                        },
                                        'Headers': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        },
                                        'QueryStringCacheKeys': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'TrustedSigners': {
                                        'Enabled': True|False,
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'ViewerProtocolPolicy':
                                    'allow-all'|'https-only'
                                    |'redirect-to-https',
                                    'MinTTL': 123,
                                    'AllowedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ],
                                        'CachedMethods': {
                                            'Quantity': 123,
                                            'Items': [
                                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                |'DELETE',
                                            ]
                                        }
                                    },
                                    'SmoothStreaming': True|False,
                                    'DefaultTTL': 123,
                                    'MaxTTL': 123,
                                    'Compress': True|False,
                                    'LambdaFunctionAssociations': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'LambdaFunctionARN': 'string',
                                                'EventType':
                                                'viewer-request'|'viewer-response'|'origin-request'
                                                |'origin-response',
                                                'IncludeBody': True|False
                                            },
                                        ]
                                    },
                                    'FieldLevelEncryptionId': 'string'
                                },
                            ]
                        },
                        'CustomErrorResponses': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'ErrorCode': 123,
                                    'ResponsePagePath': 'string',
                                    'ResponseCode': 'string',
                                    'ErrorCachingMinTTL': 123
                                },
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'IncludeCookies': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False,
                        'ViewerCertificate': {
                            'CloudFrontDefaultCertificate': True|False,
                            'IAMCertificateId': 'string',
                            'ACMCertificateArn': 'string',
                            'SSLSupportMethod': 'sni-only'|'vip',
                            'MinimumProtocolVersion':
                            'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                            |'TLSv1.2_2018',
                            'Certificate': 'string',
                            'CertificateSource': 'cloudfront'|'iam'|'acm'
                        },
                        'Restrictions': {
                            'GeoRestriction': {
                                'RestrictionType': 'blacklist'|'whitelist'|'none',
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            }
                        },
                        'WebACLId': 'string',
                        'HttpVersion': 'http1.1'|'http2',
                        'IsIPV6Enabled': True|False
                    },
                    'AliasICPRecordals': [
                        {
                            'CNAME': 'string',
                            'ICPRecordalStatus': 'APPROVED'|'SUSPENDED'|'PENDING'
                        },
                    ]
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Distribution** *(dict) --*

              The distribution's information.

              - **Id** *(string) --*

                The identifier for the distribution. For example: ``EDFDVBD632BHDS5`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                This response element indicates the current status of the distribution. When the
                status is ``Deployed`` , the distribution's information is fully propagated to all
                CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time the distribution was last modified.

              - **InProgressInvalidationBatches** *(integer) --*

                The number of invalidation batches currently in progress.

              - **DomainName** *(string) --*

                The domain name corresponding to the distribution, for example,
                ``d111111abcdef8.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                CloudFront automatically adds this element to the response only if you've set up the
                distribution to serve private content with signed URLs. The element lists the key
                pair IDs that CloudFront is aware of for each trusted signer. The ``Signer`` child
                element lists the AWS account number of the trusted signer (or an empty ``Self``
                element if the signer is you). The ``Signer`` element also includes the IDs of any
                active key pairs associated with the trusted signer's AWS account. If no
                ``KeyPairId`` element appears for a ``Signer`` , that signer can't create working
                signed URLs.

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **DistributionConfig** *(dict) --*

                The current configuration information for the distribution. Send a ``GET`` request
                to the ``/*CloudFront API version* /distribution ID/config`` resource.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``DistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **DefaultRootObject** *(string) --*

                  The object that you want CloudFront to request from your origin (for example,
                  ``index.html`` ) when a viewer requests the root URL for your distribution
                  (``http://www.example.com`` ) instead of an object in your distribution
                  (``http://www.example.com/product-description.html`` ). Specifying a default root
                  object avoids exposing the contents of your distribution.

                  Specify only the object name, for example, ``index.html`` . Don't add a ``/``
                  before the object name.

                  If you don't want to specify a default root object when you create a distribution,
                  include an empty ``DefaultRootObject`` element.

                  To delete the default root object from an existing distribution, update the
                  distribution configuration and include an empty ``DefaultRootObject`` element.

                  To replace the default root object, update the distribution configuration and
                  specify the new object.

                  For more information about the default root object, see `Creating a Default Root
                  Object
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Origins** *(dict) --*

                  A complex type that contains information about origins for this distribution.

                  - **Quantity** *(integer) --*

                    The number of origins or origin groups for this distribution.

                  - **Items** *(list) --*

                    A complex type that contains origins or origin groups for this distribution.

                    - *(dict) --*

                      A complex type that describes the Amazon S3 bucket, HTTP server (for example,
                      a web server), Amazon MediaStore, or other server from which CloudFront gets
                      your files. This can also be an origin group, if you've created an origin
                      group. You must specify at least one origin or origin group.

                      For the current limit on the number of origins or origin groups that you can
                      specify for a distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Id** *(string) --*

                        A unique identifier for the origin or origin group. The value of ``Id`` must
                        be unique within the distribution.

                        When you specify the value of ``TargetOriginId`` for the default cache
                        behavior or for another cache behavior, you indicate the origin to which you
                        want the cache behavior to route requests by specifying the value of the
                        ``Id`` element for that origin. When a request matches the path pattern for
                        that cache behavior, CloudFront routes the request to the specified origin.
                        For more information, see `Cache Behavior Settings
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **DomainName** *(string) --*

                         **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you
                         want CloudFront to get objects for this origin, for example,
                         ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be
                         configured as a website endpoint, enter the Amazon S3 static website
                         hosting endpoint for the bucket.

                        For more information about specifying this value for different types of
                        origins, see `Origin Domain Name
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                        in the *Amazon CloudFront Developer Guide* .

                        Constraints for Amazon S3 origins:

                        * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                        specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                        * The bucket name must be between 3 and 63 characters long (inclusive).

                        * The bucket name must contain only lowercase characters, numbers, periods,
                        underscores, and dashes.

                        * The bucket name must not contain adjacent periods.

                         **Custom Origins** : The DNS domain name for the HTTP server from which you
                         want CloudFront to get objects for this origin, for example,
                         ``www.example.com`` .

                        Constraints for custom origins:

                        * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9,
                        dot (.), hyphen (-), or underscore (_) characters.

                        * The name cannot exceed 128 characters.

                      - **OriginPath** *(string) --*

                        An optional element that causes CloudFront to request your content from a
                        directory in your Amazon S3 bucket or your custom origin. When you include
                        the ``OriginPath`` element, specify the directory name, beginning with a
                        ``/`` . CloudFront appends the directory name to the value of ``DomainName``
                        , for example, ``example.com/production`` . Do not include a ``/`` at the
                        end of the directory name.

                        For example, suppose you've specified the following values for your
                        distribution:

                        * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                        * ``OriginPath`` : ``/production``

                        * ``CNAME`` : ``example.com``

                        When a user enters ``example.com/index.html`` in a browser, CloudFront sends
                        a request to Amazon S3 for ``myawsbucket/production/index.html`` .

                        When a user enters ``example.com/acme/index.html`` in a browser, CloudFront
                        sends a request to Amazon S3 for ``myawsbucket/production/acme/index.html``
                        .

                      - **CustomHeaders** *(dict) --*

                        A complex type that contains names and values for the custom headers that
                        you want.

                        - **Quantity** *(integer) --*

                          The number of custom headers, if any, for this distribution.

                        - **Items** *(list) --*

                           **Optional** : A list that contains one ``OriginCustomHeader`` element
                           for each custom header that you want CloudFront to forward to the origin.
                           If Quantity is ``0`` , omit ``Items`` .

                          - *(dict) --*

                            A complex type that contains ``HeaderName`` and ``HeaderValue``
                            elements, if any, for this distribution.

                            - **HeaderName** *(string) --*

                              The name of a header that you want CloudFront to forward to your
                              origin. For more information, see `Forwarding Custom Headers to Your
                              Origin (Web Distributions Only)
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                              in the *Amazon CloudFront Developer Guide* .

                            - **HeaderValue** *(string) --*

                              The value for the header that you specified in the ``HeaderName``
                              field.

                      - **S3OriginConfig** *(dict) --*

                        A complex type that contains information about the Amazon S3 origin. If the
                        origin is a custom origin, use the ``CustomOriginConfig`` element instead.

                        - **OriginAccessIdentity** *(string) --*

                          The CloudFront origin access identity to associate with the origin. Use an
                          origin access identity to configure the origin so that viewers can *only*
                          access objects in an Amazon S3 bucket through CloudFront. The format of
                          the value is:

                          origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                          where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                          returned in the ``ID`` element when you created the origin access
                          identity.

                          If you want viewers to be able to access objects using either the
                          CloudFront URL or the Amazon S3 URL, specify an empty
                          ``OriginAccessIdentity`` element.

                          To delete the origin access identity from an existing distribution, update
                          the distribution configuration and include an empty
                          ``OriginAccessIdentity`` element.

                          To replace the origin access identity, update the distribution
                          configuration and specify the new origin access identity.

                          For more information about the origin access identity, see `Serving
                          Private Content through CloudFront
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **CustomOriginConfig** *(dict) --*

                        A complex type that contains information about a custom origin. If the
                        origin is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                        - **HTTPPort** *(integer) --*

                          The HTTP port the custom origin listens on.

                        - **HTTPSPort** *(integer) --*

                          The HTTPS port the custom origin listens on.

                        - **OriginProtocolPolicy** *(string) --*

                          The origin protocol policy to apply to your origin.

                        - **OriginSslProtocols** *(dict) --*

                          The SSL/TLS protocols that you want CloudFront to use when communicating
                          with your origin over HTTPS.

                          - **Quantity** *(integer) --*

                            The number of SSL/TLS protocols that you want to allow CloudFront to use
                            when establishing an HTTPS connection with this origin.

                          - **Items** *(list) --*

                            A list that contains allowed SSL/TLS protocols for this distribution.

                            - *(string) --*

                        - **OriginReadTimeout** *(integer) --*

                          You can create a custom origin read timeout. All timeout units are in
                          seconds. The default origin read timeout is 30 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 4 seconds; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                        - **OriginKeepaliveTimeout** *(integer) --*

                          You can create a custom keep-alive timeout. All timeout units are in
                          seconds. The default keep-alive timeout is 5 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 1 second; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                - **OriginGroups** *(dict) --*

                  A complex type that contains information about origin groups for this
                  distribution.

                  - **Quantity** *(integer) --*

                    The number of origin groups.

                  - **Items** *(list) --*

                    The items (origin groups) in a distribution.

                    - *(dict) --*

                      An origin group includes two origins (a primary origin and a second origin to
                      failover to) and a failover criteria that you specify. You create an origin
                      group to support origin failover in CloudFront. When you create or update a
                      distribution, you can specifiy the origin group instead of a single origin,
                      and CloudFront will failover from the primary origin to the second origin
                      under the failover conditions that you've chosen.

                      - **Id** *(string) --*

                        The origin group's ID.

                      - **FailoverCriteria** *(dict) --*

                        A complex type that contains information about the failover criteria for an
                        origin group.

                        - **StatusCodes** *(dict) --*

                          The status codes that, when returned from the primary origin, will trigger
                          CloudFront to failover to the second origin.

                          - **Quantity** *(integer) --*

                            The number of status codes.

                          - **Items** *(list) --*

                            The items (status codes) for an origin group.

                            - *(integer) --*

                      - **Members** *(dict) --*

                        A complex type that contains information about the origins in an origin
                        group.

                        - **Quantity** *(integer) --*

                          The number of origins in an origin group.

                        - **Items** *(list) --*

                          Items (origins) in an origin group.

                          - *(dict) --*

                            An origin in an origin group.

                            - **OriginId** *(string) --*

                              The ID for an origin in an origin group.

                - **DefaultCacheBehavior** *(dict) --*

                  A complex type that describes the default cache behavior if you don't specify a
                  ``CacheBehavior`` element or if files don't match any of the values of
                  ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default
                  cache behavior.

                  - **TargetOriginId** *(string) --*

                    The value of ``ID`` for the origin that you want CloudFront to route requests to
                    when a request matches the path pattern either for a cache behavior or for the
                    default cache behavior in your distribution.

                  - **ForwardedValues** *(dict) --*

                    A complex type that specifies how CloudFront handles query strings and cookies.

                    - **QueryString** *(boolean) --*

                      Indicates whether you want CloudFront to forward query strings to the origin
                      that is associated with this cache behavior and cache based on the query
                      string parameters. CloudFront behavior depends on the value of ``QueryString``
                      and on the values that you specify for ``QueryStringCacheKeys`` , if any:

                      If you specify true for ``QueryString`` and you don't specify any values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin and caches based on all query string parameters. Depending on how
                      many query string parameters and values you have, this can adversely affect
                      performance because CloudFront must forward more requests to the origin.

                      If you specify true for ``QueryString`` and you specify one or more values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin, but it only caches based on the query string parameters that you
                      specify.

                      If you specify false for ``QueryString`` , CloudFront doesn't forward any
                      query string parameters to the origin, and doesn't cache based on query string
                      parameters.

                      For more information, see `Configuring CloudFront to Cache Based on Query
                      String Parameters
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Cookies** *(dict) --*

                      A complex type that specifies whether you want CloudFront to forward cookies
                      to the origin and, if so, which ones. For more information about forwarding
                      cookies to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Forward** *(string) --*

                        Specifies which cookies to forward to the origin for this cache behavior:
                        all, none, or the list of cookies specified in the ``WhitelistedNames``
                        complex type.

                        Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                        requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                      - **WhitelistedNames** *(dict) --*

                        Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                        complex type that specifies how many different cookies you want CloudFront
                        to forward to the origin for this cache behavior and, if you want to forward
                        selected cookies, the names of those cookies.

                        If you specify ``all`` or none for the value of ``Forward`` , omit
                        ``WhitelistedNames`` . If you change the value of ``Forward`` from
                        ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                        element and its child elements, CloudFront deletes them automatically.

                        For the current limit on the number of cookie names that you can whitelist
                        for each cache behavior, see `CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Quantity** *(integer) --*

                          The number of different cookies that you want CloudFront to forward to the
                          origin for this cache behavior.

                        - **Items** *(list) --*

                          A complex type that contains one ``Name`` element for each cookie that you
                          want CloudFront to forward to the origin for this cache behavior.

                          - *(string) --*

                    - **Headers** *(dict) --*

                      A complex type that specifies the ``Headers`` , if any, that you want
                      CloudFront to forward to the origin for this cache behavior (whitelisted
                      headers). For the headers that you specify, CloudFront also caches separate
                      versions of a specified object that is based on the header values in viewer
                      requests.

                      For more information, see `Caching Content Based on Request Headers
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Quantity** *(integer) --*

                        The number of different headers that you want CloudFront to base caching on
                        for this cache behavior. You can configure each cache behavior in a web
                        distribution to do one of the following:

                        * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                        and ``*`` for ``Name`` .

                        .. warning::

                           CloudFront doesn't cache the objects that are associated with this cache
                           behavior. Instead, CloudFront sends every request to the origin.

                        * **Forward a whitelist of headers you specify** : Specify the number of
                        headers that you want CloudFront to base caching on. Then specify the header
                        names in ``Name`` elements. CloudFront caches your objects based on the
                        values in the specified headers.

                        * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                        omit ``Items`` . In this configuration, CloudFront doesn't cache based on
                        the values in the request headers.

                        Regardless of which option you choose, CloudFront forwards headers to your
                        origin based on whether the origin is an S3 bucket or a custom origin. See
                        the following documentation:

                        * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                        Updates
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                        * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                      - **Items** *(list) --*

                        A list that contains one ``Name`` element for each header that you want
                        CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                        ``0`` , omit ``Items`` .

                        - *(string) --*

                    - **QueryStringCacheKeys** *(dict) --*

                      A complex type that contains information about the query string parameters
                      that you want CloudFront to use for caching for this cache behavior.

                      - **Quantity** *(integer) --*

                        The number of ``whitelisted`` query string parameters for a cache behavior.

                      - **Items** *(list) --*

                        A list that contains the query string parameters that you want CloudFront to
                        use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you
                        can omit ``Items`` .

                        - *(string) --*

                  - **TrustedSigners** *(dict) --*

                    A complex type that specifies the AWS accounts, if any, that you want to allow
                    to create signed URLs for private content.

                    If you want to require signed URLs in requests for objects in the target origin
                    that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                    ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                    For more information, see `Serving Private Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    If you don't want to require signed URLs in requests for objects that match
                    ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                    Omit ``Items`` .

                    To add, change, or remove one or more trusted signers, change ``Enabled`` to
                    ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                    specify all of the trusted signers that you want to include in the updated
                    distribution.

                    - **Enabled** *(boolean) --*

                      Specifies whether you want to require viewers to use signed URLs to access the
                      files specified by ``PathPattern`` and ``TargetOriginId`` .

                    - **Quantity** *(integer) --*

                      The number of trusted signers for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains trusted signers for this cache
                       behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(string) --*

                  - **ViewerProtocolPolicy** *(string) --*

                    The protocol that viewers can use to access the files in the origin specified by
                    ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                    You can specify the following options:

                    * ``allow-all`` : Viewers can use HTTP or HTTPS.

                    * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                    returns an HTTP status code of 301 (Moved Permanently) to the viewer along with
                    the HTTPS URL. The viewer then resubmits the request using the new URL.

                    * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                    status code of 403 (Forbidden).

                    For more information about requiring the HTTPS protocol, see `Using an HTTPS
                    Connection to Access Your Objects
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    .. note::

                      The only way to guarantee that viewers retrieve an object that was fetched
                      from the origin using HTTPS is never to use any other protocol to fetch the
                      object. If you have recently changed from HTTP to HTTPS, we recommend that you
                      clear your objects' cache because cached objects are protocol agnostic. That
                      means that an edge location will return an object from the cache regardless of
                      whether the current request protocol matches the protocol used previously. For
                      more information, see `Managing How Long Content Stays in an Edge Cache
                      (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **MinTTL** *(integer) --*

                    The minimum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. For more information, see `Managing How Long
                    Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                    headers to your origin (under ``Headers`` , if you specify ``1`` for
                    ``Quantity`` and ``*`` for ``Name`` ).

                  - **AllowedMethods** *(dict) --*

                    A complex type that controls which HTTP methods CloudFront processes and
                    forwards to your Amazon S3 bucket or your custom origin. There are three
                    choices:

                    * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                    * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                    requests.

                    If you pick the third choice, you may need to restrict access to your Amazon S3
                    bucket or to your custom origin so users can't perform operations that you don't
                    want them to. For example, you might not want users to have permissions to
                    delete objects from your origin.

                    - **Quantity** *(integer) --*

                      The number of HTTP methods that you want CloudFront to forward to your origin.
                      Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                      ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                      PATCH, POST`` , and ``DELETE`` requests).

                    - **Items** *(list) --*

                      A complex type that contains the HTTP methods that you want CloudFront to
                      process and forward to your origin.

                      - *(string) --*

                    - **CachedMethods** *(dict) --*

                      A complex type that controls whether CloudFront caches the response to
                      requests using the specified HTTP methods. There are two choices:

                      * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                      * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                      requests.

                      If you pick the second choice for your Amazon S3 Origin, you may need to
                      forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                      Origin headers for the responses to be cached correctly.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods for which you want CloudFront to cache responses.
                        Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                        requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                        ``OPTIONS`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        cache responses to.

                        - *(string) --*

                  - **SmoothStreaming** *(boolean) --*

                    Indicates whether you want to distribute media files in the Microsoft Smooth
                    Streaming format using the origin that is associated with this cache behavior.
                    If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                    for ``SmoothStreaming`` , you can still distribute other content using this
                    cache behavior if the content matches the value of ``PathPattern`` .

                  - **DefaultTTL** *(integer) --*

                    The default amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                    ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                    see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MaxTTL** *(integer) --*

                    The maximum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                    s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                    Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Compress** *(boolean) --*

                    Whether you want CloudFront to automatically compress certain files for this
                    cache behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                    information, see `Serving Compressed Files
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **LambdaFunctionAssociations** *(dict) --*

                    A complex type that contains zero or more Lambda function associations for a
                    cache behavior.

                    - **Quantity** *(integer) --*

                      The number of Lambda function associations for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                       items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                       ``Items`` .

                      - *(dict) --*

                        A complex type that contains a Lambda function association.

                        - **LambdaFunctionARN** *(string) --*

                          The ARN of the Lambda function. You must specify the ARN of a function
                          version; you can't specify a Lambda alias or $LATEST.

                        - **EventType** *(string) --*

                          Specifies the event type that triggers a Lambda function invocation. You
                          can specify the following values:

                          * ``viewer-request`` : The function executes when CloudFront receives a
                          request from a viewer and before it checks to see whether the requested
                          object is in the edge cache.

                          * ``origin-request`` : The function executes only when CloudFront forwards
                          a request to your origin. When the requested object is in the edge cache,
                          the function doesn't execute.

                          * ``origin-response`` : The function executes after CloudFront receives a
                          response from the origin and before it caches the object in the response.
                          When the requested object is in the edge cache, the function doesn't
                          execute.

                          * ``viewer-response`` : The function executes before CloudFront returns
                          the requested object to the viewer. The function executes regardless of
                          whether the object was already in the edge cache. If the origin returns an
                          HTTP status code other than HTTP 200 (OK), the function doesn't execute.

                        - **IncludeBody** *(boolean) --*

                          A flag that allows a Lambda function to have read access to the body
                          content. For more information, see `Accessing the Request Body by Choosing
                          the Include Body Option
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                          in the Amazon CloudFront Developer Guide.

                  - **FieldLevelEncryptionId** *(string) --*

                    The value of ``ID`` for the field-level encryption configuration that you want
                    CloudFront to use for encrypting specific fields of data for a cache behavior or
                    for the default cache behavior in your distribution.

                - **CacheBehaviors** *(dict) --*

                  A complex type that contains zero or more ``CacheBehavior`` elements.

                  - **Quantity** *(integer) --*

                    The number of cache behaviors for this distribution.

                  - **Items** *(list) --*

                    Optional: A complex type that contains cache behaviors for this distribution. If
                    ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that describes how CloudFront processes requests.

                      You must create at least as many cache behaviors (including the default cache
                      behavior) as you have origins if you want CloudFront to distribute objects
                      from all of the origins. Each cache behavior specifies the one origin from
                      which you want CloudFront to get objects. If you have two origins and only the
                      default cache behavior, the default cache behavior will cause CloudFront to
                      get objects from one of the origins, but the other origin is never used.

                      For the current limit on the number of cache behaviors that you can add to a
                      distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      If you don't want to specify any cache behaviors, include only an empty
                      ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element,
                      or CloudFront returns a ``MalformedXML`` error.

                      To delete all cache behaviors in an existing distribution, update the
                      distribution configuration and include only an empty ``CacheBehaviors``
                      element.

                      To add, change, or remove one or more cache behaviors, update the distribution
                      configuration and specify all of the cache behaviors that you want to include
                      in the updated distribution.

                      For more information about cache behaviors, see `Cache Behaviors
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **PathPattern** *(string) --*

                        The pattern (for example, ``images/*.jpg`` ) that specifies which requests
                        to apply the behavior to. When CloudFront receives a viewer request, the
                        requested path is compared with path patterns in the order in which cache
                        behaviors are listed in the distribution.

                        .. note::

                          You can optionally include a slash (``/`` ) at the beginning of the path
                          pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same
                          with or without the leading ``/`` .

                        The path pattern for the default cache behavior is ``*`` and cannot be
                        changed. If the request for an object does not match the path pattern for
                        any cache behaviors, CloudFront applies the behavior in the default cache
                        behavior.

                        For more information, see `Path Pattern
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **TargetOriginId** *(string) --*

                        The value of ``ID`` for the origin that you want CloudFront to route
                        requests to when a request matches the path pattern either for a cache
                        behavior or for the default cache behavior in your distribution.

                      - **ForwardedValues** *(dict) --*

                        A complex type that specifies how CloudFront handles query strings and
                        cookies.

                        - **QueryString** *(boolean) --*

                          Indicates whether you want CloudFront to forward query strings to the
                          origin that is associated with this cache behavior and cache based on the
                          query string parameters. CloudFront behavior depends on the value of
                          ``QueryString`` and on the values that you specify for
                          ``QueryStringCacheKeys`` , if any:

                          If you specify true for ``QueryString`` and you don't specify any values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin and caches based on all query string parameters.
                          Depending on how many query string parameters and values you have, this
                          can adversely affect performance because CloudFront must forward more
                          requests to the origin.

                          If you specify true for ``QueryString`` and you specify one or more values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin, but it only caches based on the query string
                          parameters that you specify.

                          If you specify false for ``QueryString`` , CloudFront doesn't forward any
                          query string parameters to the origin, and doesn't cache based on query
                          string parameters.

                          For more information, see `Configuring CloudFront to Cache Based on Query
                          String Parameters
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **Cookies** *(dict) --*

                          A complex type that specifies whether you want CloudFront to forward
                          cookies to the origin and, if so, which ones. For more information about
                          forwarding cookies to the origin, see `How CloudFront Forwards, Caches,
                          and Logs Cookies
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Forward** *(string) --*

                            Specifies which cookies to forward to the origin for this cache
                            behavior: all, none, or the list of cookies specified in the
                            ``WhitelistedNames`` complex type.

                            Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                            requests to an Amazon S3 origin, specify none for the ``Forward``
                            element.

                          - **WhitelistedNames** *(dict) --*

                            Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                            complex type that specifies how many different cookies you want
                            CloudFront to forward to the origin for this cache behavior and, if you
                            want to forward selected cookies, the names of those cookies.

                            If you specify ``all`` or none for the value of ``Forward`` , omit
                            ``WhitelistedNames`` . If you change the value of ``Forward`` from
                            ``whitelist`` to all or none and you don't delete the
                            ``WhitelistedNames`` element and its child elements, CloudFront deletes
                            them automatically.

                            For the current limit on the number of cookie names that you can
                            whitelist for each cache behavior, see `CloudFront Limits
                            <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                            in the *AWS General Reference* .

                            - **Quantity** *(integer) --*

                              The number of different cookies that you want CloudFront to forward to
                              the origin for this cache behavior.

                            - **Items** *(list) --*

                              A complex type that contains one ``Name`` element for each cookie that
                              you want CloudFront to forward to the origin for this cache behavior.

                              - *(string) --*

                        - **Headers** *(dict) --*

                          A complex type that specifies the ``Headers`` , if any, that you want
                          CloudFront to forward to the origin for this cache behavior (whitelisted
                          headers). For the headers that you specify, CloudFront also caches
                          separate versions of a specified object that is based on the header values
                          in viewer requests.

                          For more information, see `Caching Content Based on Request Headers
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Quantity** *(integer) --*

                            The number of different headers that you want CloudFront to base caching
                            on for this cache behavior. You can configure each cache behavior in a
                            web distribution to do one of the following:

                            * **Forward all headers to your origin** : Specify ``1`` for
                            ``Quantity`` and ``*`` for ``Name`` .

                            .. warning::

                               CloudFront doesn't cache the objects that are associated with this
                               cache behavior. Instead, CloudFront sends every request to the
                               origin.

                            * **Forward a whitelist of headers you specify** : Specify the number of
                            headers that you want CloudFront to base caching on. Then specify the
                            header names in ``Name`` elements. CloudFront caches your objects based
                            on the values in the specified headers.

                            * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                            and omit ``Items`` . In this configuration, CloudFront doesn't cache
                            based on the values in the request headers.

                            Regardless of which option you choose, CloudFront forwards headers to
                            your origin based on whether the origin is an S3 bucket or a custom
                            origin. See the following documentation:

                            * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                            Updates
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                            * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                          - **Items** *(list) --*

                            A list that contains one ``Name`` element for each header that you want
                            CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                            ``0`` , omit ``Items`` .

                            - *(string) --*

                        - **QueryStringCacheKeys** *(dict) --*

                          A complex type that contains information about the query string parameters
                          that you want CloudFront to use for caching for this cache behavior.

                          - **Quantity** *(integer) --*

                            The number of ``whitelisted`` query string parameters for a cache
                            behavior.

                          - **Items** *(list) --*

                            A list that contains the query string parameters that you want
                            CloudFront to use as a basis for caching for a cache behavior. If
                            ``Quantity`` is 0, you can omit ``Items`` .

                            - *(string) --*

                      - **TrustedSigners** *(dict) --*

                        A complex type that specifies the AWS accounts, if any, that you want to
                        allow to create signed URLs for private content.

                        If you want to require signed URLs in requests for objects in the target
                        origin that match the ``PathPattern`` for this cache behavior, specify
                        ``true`` for ``Enabled`` , and specify the applicable values for
                        ``Quantity`` and ``Items`` . For more information, see `Serving Private
                        Content through CloudFront
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        If you don't want to require signed URLs in requests for objects that match
                        ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for
                        ``Quantity`` . Omit ``Items`` .

                        To add, change, or remove one or more trusted signers, change ``Enabled`` to
                        ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                        and specify all of the trusted signers that you want to include in the
                        updated distribution.

                        - **Enabled** *(boolean) --*

                          Specifies whether you want to require viewers to use signed URLs to access
                          the files specified by ``PathPattern`` and ``TargetOriginId`` .

                        - **Quantity** *(integer) --*

                          The number of trusted signers for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains trusted signers for this
                           cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                          - *(string) --*

                      - **ViewerProtocolPolicy** *(string) --*

                        The protocol that viewers can use to access the files in the origin
                        specified by ``TargetOriginId`` when a request matches the path pattern in
                        ``PathPattern`` . You can specify the following options:

                        * ``allow-all`` : Viewers can use HTTP or HTTPS.

                        * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                        returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                        with the HTTPS URL. The viewer then resubmits the request using the new URL.

                        * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                        HTTP status code of 403 (Forbidden).

                        For more information about requiring the HTTPS protocol, see `Using an HTTPS
                        Connection to Access Your Objects
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        .. note::

                          The only way to guarantee that viewers retrieve an object that was fetched
                          from the origin using HTTPS is never to use any other protocol to fetch
                          the object. If you have recently changed from HTTP to HTTPS, we recommend
                          that you clear your objects' cache because cached objects are protocol
                          agnostic. That means that an edge location will return an object from the
                          cache regardless of whether the current request protocol matches the
                          protocol used previously. For more information, see `Managing How Long
                          Content Stays in an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **MinTTL** *(integer) --*

                        The minimum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. For more information, see
                        `Managing How Long Content Stays in an Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                        all headers to your origin (under ``Headers`` , if you specify ``1`` for
                        ``Quantity`` and ``*`` for ``Name`` ).

                      - **AllowedMethods** *(dict) --*

                        A complex type that controls which HTTP methods CloudFront processes and
                        forwards to your Amazon S3 bucket or your custom origin. There are three
                        choices:

                        * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                        * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                        * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                        ``DELETE`` requests.

                        If you pick the third choice, you may need to restrict access to your Amazon
                        S3 bucket or to your custom origin so users can't perform operations that
                        you don't want them to. For example, you might not want users to have
                        permissions to delete objects from your origin.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods that you want CloudFront to forward to your
                          origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                          ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                          OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          process and forward to your origin.

                          - *(string) --*

                        - **CachedMethods** *(dict) --*

                          A complex type that controls whether CloudFront caches the response to
                          requests using the specified HTTP methods. There are two choices:

                          * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                          * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                          requests.

                          If you pick the second choice for your Amazon S3 Origin, you may need to
                          forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                          Origin headers for the responses to be cached correctly.

                          - **Quantity** *(integer) --*

                            The number of HTTP methods for which you want CloudFront to cache
                            responses. Valid values are ``2`` (for caching responses to ``GET`` and
                            ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` ,
                            ``HEAD`` , and ``OPTIONS`` requests).

                          - **Items** *(list) --*

                            A complex type that contains the HTTP methods that you want CloudFront
                            to cache responses to.

                            - *(string) --*

                      - **SmoothStreaming** *(boolean) --*

                        Indicates whether you want to distribute media files in the Microsoft Smooth
                        Streaming format using the origin that is associated with this cache
                        behavior. If so, specify ``true`` ; if not, specify ``false`` . If you
                        specify ``true`` for ``SmoothStreaming`` , you can still distribute other
                        content using this cache behavior if the content matches the value of
                        ``PathPattern`` .

                      - **DefaultTTL** *(integer) --*

                        The default amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin does not add HTTP headers such as
                        ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to
                        objects. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **MaxTTL** *(integer) --*

                        The maximum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin adds HTTP headers such as ``Cache-Control
                        max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to objects. For
                        more information, see `Managing How Long Content Stays in an Edge Cache
                        (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Compress** *(boolean) --*

                        Whether you want CloudFront to automatically compress certain files for this
                        cache behavior. If so, specify true; if not, specify false. For more
                        information, see `Serving Compressed Files
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **LambdaFunctionAssociations** *(dict) --*

                        A complex type that contains zero or more Lambda function associations for a
                        cache behavior.

                        - **Quantity** *(integer) --*

                          The number of Lambda function associations for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                           items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                           ``Items`` .

                          - *(dict) --*

                            A complex type that contains a Lambda function association.

                            - **LambdaFunctionARN** *(string) --*

                              The ARN of the Lambda function. You must specify the ARN of a function
                              version; you can't specify a Lambda alias or $LATEST.

                            - **EventType** *(string) --*

                              Specifies the event type that triggers a Lambda function invocation.
                              You can specify the following values:

                              * ``viewer-request`` : The function executes when CloudFront receives
                              a request from a viewer and before it checks to see whether the
                              requested object is in the edge cache.

                              * ``origin-request`` : The function executes only when CloudFront
                              forwards a request to your origin. When the requested object is in the
                              edge cache, the function doesn't execute.

                              * ``origin-response`` : The function executes after CloudFront
                              receives a response from the origin and before it caches the object in
                              the response. When the requested object is in the edge cache, the
                              function doesn't execute.

                              * ``viewer-response`` : The function executes before CloudFront
                              returns the requested object to the viewer. The function executes
                              regardless of whether the object was already in the edge cache. If the
                              origin returns an HTTP status code other than HTTP 200 (OK), the
                              function doesn't execute.

                            - **IncludeBody** *(boolean) --*

                              A flag that allows a Lambda function to have read access to the body
                              content. For more information, see `Accessing the Request Body by
                              Choosing the Include Body Option
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                              in the Amazon CloudFront Developer Guide.

                      - **FieldLevelEncryptionId** *(string) --*

                        The value of ``ID`` for the field-level encryption configuration that you
                        want CloudFront to use for encrypting specific fields of data for a cache
                        behavior or for the default cache behavior in your distribution.

                - **CustomErrorResponses** *(dict) --*

                  A complex type that controls the following:

                  * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                  custom error messages before returning the response to the viewer.

                  * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                  For more information about custom error pages, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --*

                    The number of HTTP status codes for which you want to specify a custom error
                    page and/or a caching duration. If ``Quantity`` is ``0`` , you can omit
                    ``Items`` .

                  - **Items** *(list) --*

                    A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                    status code for which you want to specify a custom error page and/or a caching
                    duration.

                    - *(dict) --*

                      A complex type that controls:

                      * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                      custom error messages before returning the response to the viewer.

                      * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                      For more information about custom error pages, see `Customizing Error
                      Responses
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **ErrorCode** *(integer) --*

                        The HTTP status code for which you want to specify a custom error page
                        and/or a caching duration.

                      - **ResponsePagePath** *(string) --*

                        The path to the custom error page that you want CloudFront to return to a
                        viewer when your origin returns the HTTP status code specified by
                        ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you
                        want to store your objects and your custom error pages in different
                        locations, your distribution must include a cache behavior for which the
                        following is true:

                        * The value of ``PathPattern`` matches the path to your custom error
                        messages. For example, suppose you saved custom error pages for 4xx errors
                        in an Amazon S3 bucket in a directory named ``/4xx-errors`` . Your
                        distribution must include a cache behavior for which the path pattern routes
                        requests for your custom error pages to that location, for example,
                        ``/4xx-errors/*`` .

                        * The value of ``TargetOriginId`` specifies the value of the ``ID`` element
                        for the origin that contains your custom error pages.

                        If you specify a value for ``ResponsePagePath`` , you must also specify a
                        value for ``ResponseCode`` . If you don't want to specify a value, include
                        an empty element, ``<ResponsePagePath>`` , in the XML document.

                        We recommend that you store custom error pages in an Amazon S3 bucket. If
                        you store custom error pages on an HTTP server and the server starts to
                        return 5xx errors, CloudFront can't get the files that you want to return to
                        viewers because the origin server is unavailable.

                      - **ResponseCode** *(string) --*

                        The HTTP status code that you want CloudFront to return to the viewer along
                        with the custom error page. There are a variety of reasons that you might
                        want CloudFront to return a status code different from the status code that
                        your origin returned to CloudFront, for example:

                        * Some Internet devices (some firewalls and corporate proxies, for example)
                        intercept HTTP 4xx and 5xx and prevent the response from being returned to
                        the viewer. If you substitute ``200`` , the response typically won't be
                        intercepted.

                        * If you don't care about distinguishing among different client errors or
                        server errors, you can specify ``400`` or ``500`` as the ``ResponseCode``
                        for all 4xx or 5xx errors.

                        * You might want to return a ``200`` status code (OK) and static website so
                        your customers don't know that your website is down.

                        If you specify a value for ``ResponseCode`` , you must also specify a value
                        for ``ResponsePagePath`` . If you don't want to specify a value, include an
                        empty element, ``<ResponseCode>`` , in the XML document.

                      - **ErrorCachingMinTTL** *(integer) --*

                        The minimum amount of time, in seconds, that you want CloudFront to cache
                        the HTTP status code specified in ``ErrorCode`` . When this time period has
                        elapsed, CloudFront queries your origin to see whether the problem that
                        caused the error has been resolved and the requested object is now
                        available.

                        If you don't want to specify a value, include an empty element,
                        ``<ErrorCachingMinTTL>`` , in the XML document.

                        For more information, see `Customizing Error Responses
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                - **Comment** *(string) --*

                  Any comments you want to include about the distribution.

                  If you don't want to specify a comment, include an empty ``Comment`` element.

                  To delete an existing comment, update the distribution configuration and include
                  an empty ``Comment`` element.

                  To add or change a comment, update the distribution configuration and specify the
                  new comment.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the distribution.

                  For more information about logging, see `Access Logs
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a distribution or if
                    you want to disable logging for an existing distribution, specify ``false`` for
                    ``Enabled`` , and specify empty ``Bucket`` and ``Prefix`` elements. If you
                    specify ``false`` for ``Enabled`` but you specify values for ``Bucket`` ,
                    ``prefix`` , and ``IncludeCookies`` , the values are automatically deleted.

                  - **IncludeCookies** *(boolean) --*

                    Specifies whether you want CloudFront to include cookies in access logs, specify
                    ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs,
                    CloudFront logs all cookies regardless of how you configure the cache behaviors
                    for this distribution. If you don't want to include cookies when you create a
                    distribution or if you want to disable include cookies for an existing
                    distribution, specify ``false`` for ``IncludeCookies`` .

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    ``filenames`` for this distribution, for example, ``myprefix/`` . If you want to
                    enable logging, but you don't want to specify a prefix, you still must include
                    an empty ``Prefix`` element in the ``Logging`` element.

                - **PriceClass** *(string) --*

                  The price class that corresponds with the maximum price that you want to pay for
                  CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to
                  requests for your objects from all CloudFront edge locations.

                  If you specify a price class other than ``PriceClass_All`` , CloudFront serves
                  your objects from the CloudFront edge location that has the lowest latency among
                  the edge locations in your price class. Viewers who are in or near regions that
                  are excluded from your specified price class may encounter slower performance.

                  For more information about price classes, see `Choosing the Price Class for a
                  CloudFront Distribution
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
                  in the *Amazon CloudFront Developer Guide* . For information about CloudFront
                  pricing, including how price classes (such as Price Class 100) map to CloudFront
                  regions, see `Amazon CloudFront Pricing
                  <http://aws.amazon.com/cloudfront/pricing/>`__ . For price class information,
                  scroll down to see the table at the bottom of the page.

                - **Enabled** *(boolean) --*

                  From this field, you can enable or disable the selected distribution.

                - **ViewerCertificate** *(dict) --*

                  A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                  request your objects, whether you're using an alternate domain name with HTTPS,
                  and if so, if you're using AWS Certificate Manager (ACM) or a third-party
                  certificate authority.

                  - **CloudFrontDefaultCertificate** *(boolean) --*

                    If you're using the CloudFront domain name for your distribution, such as
                    ``d111111abcdef8.cloudfront.net`` , specify the following value:

                    * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                  - **IAMCertificateId** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if you purchased your certificate from a
                    third-party certificate authority:

                    * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                    certificate ID* `` is the ID that IAM returned when you added the certificate to
                    the IAM certificate store.

                    If you specify ``IAMCertificateId`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **ACMCertificateArn** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if ACM provided your certificate:

                    * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                    where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                    certificate that you want to use for this distribution.

                    If you specify ``ACMCertificateArn`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **SSLSupportMethod** *(string) --*

                    If you specify a value for `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                    or for `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                    , you must also specify how you want CloudFront to serve HTTPS requests: using a
                    method that works for browsers and clients released after 2010 or one that works
                    for all clients.

                    * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                    support Server Name Indication (SNI). All modern browsers support SNI, but there
                    are a few that don't. For a current list of the browsers that support SNI, see
                    the `Wikipedia entry Server Name Indication
                    <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about
                    options to explore if you have users with browsers that don't include SNI
                    support, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                    respond to HTTPS requests from any viewer. However, there are additional monthly
                    charges. For details, including specific pricing information, see `Custom SSL
                    options for Amazon CloudFront
                    <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                    site.

                    Don't specify a value for ``SSLSupportMethod`` if you specified
                    ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                    For more information, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MinimumProtocolVersion** *(string) --*

                    Specify the security policy that you want CloudFront to use for HTTPS
                    connections. A security policy determines two settings:

                    * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

                    * The cipher that CloudFront uses to encrypt the content that it returns to
                    viewers

                    .. note::

                      On the CloudFront console, this setting is called **Security policy** .

                    We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                    browsers or devices that do not support TLSv1.1 or later.

                    When both of the following are true, you must specify ``TLSv1`` or later for the
                    security policy:

                    * You're using a custom certificate: you specified a value for
                    ``ACMCertificateArn`` or for ``IAMCertificateId``

                    * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                    If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                    automatically sets the security policy to ``TLSv1`` regardless of the value that
                    you specify for ``MinimumProtocolVersion`` .

                    For information about the relationship between the security policy that you
                    choose and the protocols and ciphers that CloudFront uses to communicate with
                    viewers, see `Supported SSL/TLS Protocols and Ciphers for Communication Between
                    Viewers and CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Certificate** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                  - **CertificateSource** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                - **Restrictions** *(dict) --*

                  A complex type that identifies ways in which you want to restrict distribution of
                  your content.

                  - **GeoRestriction** *(dict) --*

                    A complex type that controls the countries in which your content is distributed.
                    CloudFront determines the location of your users using ``MaxMind`` GeoIP
                    databases.

                    - **RestrictionType** *(string) --*

                      The method that you want to use to restrict distribution of your content by
                      country:

                      * ``none`` : No geo restriction is enabled, meaning access to content is not
                      restricted by client geo location.

                      * ``blacklist`` : The ``Location`` elements specify the countries in which you
                      don't want CloudFront to distribute your content.

                      * ``whitelist`` : The ``Location`` elements specify the countries in which you
                      want CloudFront to distribute your content.

                    - **Quantity** *(integer) --*

                      When geo restriction is ``enabled`` , this is the number of countries in your
                      ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled,
                      ``Quantity`` is ``0`` , and you can omit ``Items`` .

                    - **Items** *(list) --*

                      A complex type that contains a ``Location`` element for each country in which
                      you want CloudFront either to distribute your content (``whitelist`` ) or not
                      distribute your content (``blacklist`` ).

                      The ``Location`` element is a two-letter, uppercase country code for a country
                      that you want to include in your ``blacklist`` or ``whitelist`` . Include one
                      ``Location`` element for each country.

                      CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the
                      current list of countries and the corresponding codes, see ``ISO
                      3166-1-alpha-2`` code on the *International Organization for Standardization*
                      website. You can also refer to the country list on the CloudFront console,
                      which includes both country names and codes.

                      - *(string) --*

                - **WebACLId** *(string) --*

                  A unique identifier that specifies the AWS WAF web ACL, if any, to associate with
                  this distribution.

                  AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS
                  requests that are forwarded to CloudFront, and lets you control access to your
                  content. Based on conditions that you specify, such as the IP addresses that
                  requests originate from or the values of query strings, CloudFront responds to
                  requests either with the requested content or with an HTTP 403 status code
                  (Forbidden). You can also configure CloudFront to return a custom error page when
                  a request is blocked. For more information about AWS WAF, see the `AWS WAF
                  Developer Guide
                  <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

                - **HttpVersion** *(string) --*

                  (Optional) Specify the maximum HTTP version that you want viewers to use to
                  communicate with CloudFront. The default value for new web distributions is http2.
                  Viewers that don't support HTTP/2 automatically use an earlier HTTP version.

                  For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later,
                  and must support Server Name Identification (SNI).

                  In general, configuring CloudFront to communicate with viewers using HTTP/2
                  reduces latency. You can improve performance by optimizing for HTTP/2. For more
                  information, do an Internet search for "http/2 optimization."

                - **IsIPV6Enabled** *(boolean) --*

                  If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for
                  your distribution, specify ``true`` . If you specify ``false`` , CloudFront
                  responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no
                  IP addresses. This allows viewers to submit a second request, for an IPv4 address
                  for your distribution.

                  In general, you should enable IPv6 if you have users on IPv6 networks who want to
                  access your content. However, if you're using signed URLs or signed cookies to
                  restrict access to your content, and if you're using a custom policy that includes
                  the ``IpAddress`` parameter to restrict the IP addresses that can access your
                  content, don't enable IPv6. If you want to restrict access to some content by IP
                  address and not restrict access to other content (or restrict access but not by IP
                  address), you can create two distributions. For more information, see `Creating a
                  Signed URL Using a Custom Policy
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you're using an Amazon Route 53 alias resource record set to route traffic to
                  your CloudFront distribution, you need to create a second alias resource record
                  set when both of the following are true:

                  * You enable IPv6 for the distribution

                  * You're using alternate domain names in the URLs for your objects

                  For more information, see `Routing Traffic to an Amazon CloudFront Web
                  Distribution by Using Your Domain Name
                  <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
                  in the *Amazon Route 53 Developer Guide* .

                  If you created a CNAME resource record set, either with Amazon Route 53 or with
                  another DNS service, you don't need to make any changes. A CNAME record will route
                  traffic to your distribution regardless of the IP address format of the viewer
                  request.

              - **AliasICPRecordals** *(list) --*

                AWS services in China customers must file for an Internet Content Provider (ICP)
                recordal if they want to serve content publicly on an alternate domain name, also
                known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                ICP recordal status for CNAMEs associated with distributions.

                For more information about ICP recordals, see `Signup, Accounts, and Credentials
                <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                in *Getting Started with AWS services in China* .

                - *(dict) --*

                  AWS services in China customers must file for an Internet Content Provider (ICP)
                  recordal if they want to serve content publicly on an alternate domain name, also
                  known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                  ICP recordal status for CNAMEs associated with distributions. The status is
                  returned in the CloudFront response; you can't configure it yourself.

                  For more information about ICP recordals, see `Signup, Accounts, and Credentials
                  <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                  in *Getting Started with AWS services in China* .

                  - **CNAME** *(string) --*

                    A domain name associated with a distribution.

                  - **ICPRecordalStatus** *(string) --*

                    The Internet Content Provider (ICP) recordal status for a CNAME. The
                    ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside
                    of China.

                    The status values returned are the following:

                    * **APPROVED** indicates that the associated CNAME has a valid ICP recordal
                    number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can
                    correspond to different ICP recordals. To be marked as APPROVED, that is, valid
                    to use with China region, a CNAME must have one ICP recordal number associated
                    with it.

                    * **SUSPENDED** indicates that the associated CNAME does not have a valid ICP
                    recordal number.

                    * **PENDING** indicates that at least one CNAME associated with the distribution
                    does not have a valid ICP recordal number.

            - **Location** *(string) --*

              The fully qualified URI of the new distribution resource just created. For example:
              ``https://cloudfront.amazonaws.com/2010-11-01/distribution/EDFDVBD632BHDS5`` .

            - **ETag** *(string) --*

              The current version of the distribution created.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_distribution_with_tags(
        self,
        DistributionConfigWithTags: ClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef,
    ) -> ClientCreateDistributionWithTagsResponseTypeDef:
        """
        Create a new distribution with tags.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateDistributionWithTags>`_

        **Request Syntax**
        ::

          response = client.create_distribution_with_tags(
              DistributionConfigWithTags={
                  'DistributionConfig': {
                      'CallerReference': 'string',
                      'Aliases': {
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      },
                      'DefaultRootObject': 'string',
                      'Origins': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'Id': 'string',
                                  'DomainName': 'string',
                                  'OriginPath': 'string',
                                  'CustomHeaders': {
                                      'Quantity': 123,
                                      'Items': [
                                          {
                                              'HeaderName': 'string',
                                              'HeaderValue': 'string'
                                          },
                                      ]
                                  },
                                  'S3OriginConfig': {
                                      'OriginAccessIdentity': 'string'
                                  },
                                  'CustomOriginConfig': {
                                      'HTTPPort': 123,
                                      'HTTPSPort': 123,
                                      'OriginProtocolPolicy':
                                      'http-only'|'match-viewer'
                                      |'https-only',
                                      'OriginSslProtocols': {
                                          'Quantity': 123,
                                          'Items': [
                                              'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                          ]
                                      },
                                      'OriginReadTimeout': 123,
                                      'OriginKeepaliveTimeout': 123
                                  }
                              },
                          ]
                      },
                      'OriginGroups': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'Id': 'string',
                                  'FailoverCriteria': {
                                      'StatusCodes': {
                                          'Quantity': 123,
                                          'Items': [
                                              123,
                                          ]
                                      }
                                  },
                                  'Members': {
                                      'Quantity': 123,
                                      'Items': [
                                          {
                                              'OriginId': 'string'
                                          },
                                      ]
                                  }
                              },
                          ]
                      },
                      'DefaultCacheBehavior': {
                          'TargetOriginId': 'string',
                          'ForwardedValues': {
                              'QueryString': True|False,
                              'Cookies': {
                                  'Forward': 'none'|'whitelist'|'all',
                                  'WhitelistedNames': {
                                      'Quantity': 123,
                                      'Items': [
                                          'string',
                                      ]
                                  }
                              },
                              'Headers': {
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              },
                              'QueryStringCacheKeys': {
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              }
                          },
                          'TrustedSigners': {
                              'Enabled': True|False,
                              'Quantity': 123,
                              'Items': [
                                  'string',
                              ]
                          },
                          'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                          'MinTTL': 123,
                          'AllowedMethods': {
                              'Quantity': 123,
                              'Items': [
                                  'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                              ],
                              'CachedMethods': {
                                  'Quantity': 123,
                                  'Items': [
                                      'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                  ]
                              }
                          },
                          'SmoothStreaming': True|False,
                          'DefaultTTL': 123,
                          'MaxTTL': 123,
                          'Compress': True|False,
                          'LambdaFunctionAssociations': {
                              'Quantity': 123,
                              'Items': [
                                  {
                                      'LambdaFunctionARN': 'string',
                                      'EventType':
                                      'viewer-request'
                                      |'viewer-response'
                                      |'origin-request'
                                      |'origin-response',
                                      'IncludeBody': True|False
                                  },
                              ]
                          },
                          'FieldLevelEncryptionId': 'string'
                      },
                      'CacheBehaviors': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'PathPattern': 'string',
                                  'TargetOriginId': 'string',
                                  'ForwardedValues': {
                                      'QueryString': True|False,
                                      'Cookies': {
                                          'Forward': 'none'|'whitelist'|'all',
                                          'WhitelistedNames': {
                                              'Quantity': 123,
                                              'Items': [
                                                  'string',
                                              ]
                                          }
                                      },
                                      'Headers': {
                                          'Quantity': 123,
                                          'Items': [
                                              'string',
                                          ]
                                      },
                                      'QueryStringCacheKeys': {
                                          'Quantity': 123,
                                          'Items': [
                                              'string',
                                          ]
                                      }
                                  },
                                  'TrustedSigners': {
                                      'Enabled': True|False,
                                      'Quantity': 123,
                                      'Items': [
                                          'string',
                                      ]
                                  },
                                  'ViewerProtocolPolicy':
                                  'allow-all'|'https-only'
                                  |'redirect-to-https',
                                  'MinTTL': 123,
                                  'AllowedMethods': {
                                      'Quantity': 123,
                                      'Items': [
                                          'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                      ],
                                      'CachedMethods': {
                                          'Quantity': 123,
                                          'Items': [
                                              'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                          ]
                                      }
                                  },
                                  'SmoothStreaming': True|False,
                                  'DefaultTTL': 123,
                                  'MaxTTL': 123,
                                  'Compress': True|False,
                                  'LambdaFunctionAssociations': {
                                      'Quantity': 123,
                                      'Items': [
                                          {
                                              'LambdaFunctionARN': 'string',
                                              'EventType':
                                              'viewer-request'
                                              |'viewer-response'|'origin-request'
                                              |'origin-response',
                                              'IncludeBody': True|False
                                          },
                                      ]
                                  },
                                  'FieldLevelEncryptionId': 'string'
                              },
                          ]
                      },
                      'CustomErrorResponses': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'ErrorCode': 123,
                                  'ResponsePagePath': 'string',
                                  'ResponseCode': 'string',
                                  'ErrorCachingMinTTL': 123
                              },
                          ]
                      },
                      'Comment': 'string',
                      'Logging': {
                          'Enabled': True|False,
                          'IncludeCookies': True|False,
                          'Bucket': 'string',
                          'Prefix': 'string'
                      },
                      'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                      'Enabled': True|False,
                      'ViewerCertificate': {
                          'CloudFrontDefaultCertificate': True|False,
                          'IAMCertificateId': 'string',
                          'ACMCertificateArn': 'string',
                          'SSLSupportMethod': 'sni-only'|'vip',
                          'MinimumProtocolVersion':
                          'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                          |'TLSv1.2_2018',
                          'Certificate': 'string',
                          'CertificateSource': 'cloudfront'|'iam'|'acm'
                      },
                      'Restrictions': {
                          'GeoRestriction': {
                              'RestrictionType': 'blacklist'|'whitelist'|'none',
                              'Quantity': 123,
                              'Items': [
                                  'string',
                              ]
                          }
                      },
                      'WebACLId': 'string',
                      'HttpVersion': 'http1.1'|'http2',
                      'IsIPV6Enabled': True|False
                  },
                  'Tags': {
                      'Items': [
                          {
                              'Key': 'string',
                              'Value': 'string'
                          },
                      ]
                  }
              }
          )
        :type DistributionConfigWithTags: dict
        :param DistributionConfigWithTags: **[REQUIRED]**

          The distribution's configuration information.

          - **DistributionConfig** *(dict) --* **[REQUIRED]**

            A distribution configuration.

            - **CallerReference** *(string) --* **[REQUIRED]**

              A unique value (for example, a date-time stamp) that ensures that the request can't be
              replayed.

              If the value of ``CallerReference`` is new (regardless of the content of the
              ``DistributionConfig`` object), CloudFront creates a new distribution.

              If ``CallerReference`` is a value that you already sent in a previous request to
              create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

            - **Aliases** *(dict) --*

              A complex type that contains information about CNAMEs (alternate domain names), if
              any, for this distribution.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of CNAME aliases, if any, that you want to associate with this
                distribution.

              - **Items** *(list) --*

                A complex type that contains the CNAME aliases, if any, that you want to associate
                with this distribution.

                - *(string) --*

            - **DefaultRootObject** *(string) --*

              The object that you want CloudFront to request from your origin (for example,
              ``index.html`` ) when a viewer requests the root URL for your distribution
              (``http://www.example.com`` ) instead of an object in your distribution
              (``http://www.example.com/product-description.html`` ). Specifying a default root
              object avoids exposing the contents of your distribution.

              Specify only the object name, for example, ``index.html`` . Don't add a ``/`` before
              the object name.

              If you don't want to specify a default root object when you create a distribution,
              include an empty ``DefaultRootObject`` element.

              To delete the default root object from an existing distribution, update the
              distribution configuration and include an empty ``DefaultRootObject`` element.

              To replace the default root object, update the distribution configuration and specify
              the new object.

              For more information about the default root object, see `Creating a Default Root
              Object
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **Origins** *(dict) --* **[REQUIRED]**

              A complex type that contains information about origins for this distribution.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of origins or origin groups for this distribution.

              - **Items** *(list) --* **[REQUIRED]**

                A complex type that contains origins or origin groups for this distribution.

                - *(dict) --*

                  A complex type that describes the Amazon S3 bucket, HTTP server (for example, a
                  web server), Amazon MediaStore, or other server from which CloudFront gets your
                  files. This can also be an origin group, if you've created an origin group. You
                  must specify at least one origin or origin group.

                  For the current limit on the number of origins or origin groups that you can
                  specify for a distribution, see `Amazon CloudFront Limits
                  <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                  in the *AWS General Reference* .

                  - **Id** *(string) --* **[REQUIRED]**

                    A unique identifier for the origin or origin group. The value of ``Id`` must be
                    unique within the distribution.

                    When you specify the value of ``TargetOriginId`` for the default cache behavior
                    or for another cache behavior, you indicate the origin to which you want the
                    cache behavior to route requests by specifying the value of the ``Id`` element
                    for that origin. When a request matches the path pattern for that cache
                    behavior, CloudFront routes the request to the specified origin. For more
                    information, see `Cache Behavior Settings
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **DomainName** *(string) --* **[REQUIRED]**

                     **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you
                     want CloudFront to get objects for this origin, for example,
                     ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be configured
                     as a website endpoint, enter the Amazon S3 static website hosting endpoint for
                     the bucket.

                    For more information about specifying this value for different types of origins,
                    see `Origin Domain Name
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                    in the *Amazon CloudFront Developer Guide* .

                    Constraints for Amazon S3 origins:

                    * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                    specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                    * The bucket name must be between 3 and 63 characters long (inclusive).

                    * The bucket name must contain only lowercase characters, numbers, periods,
                    underscores, and dashes.

                    * The bucket name must not contain adjacent periods.

                     **Custom Origins** : The DNS domain name for the HTTP server from which you
                     want CloudFront to get objects for this origin, for example,
                     ``www.example.com`` .

                    Constraints for custom origins:

                    * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9, dot
                    (.), hyphen (-), or underscore (_) characters.

                    * The name cannot exceed 128 characters.

                  - **OriginPath** *(string) --*

                    An optional element that causes CloudFront to request your content from a
                    directory in your Amazon S3 bucket or your custom origin. When you include the
                    ``OriginPath`` element, specify the directory name, beginning with a ``/`` .
                    CloudFront appends the directory name to the value of ``DomainName`` , for
                    example, ``example.com/production`` . Do not include a ``/`` at the end of the
                    directory name.

                    For example, suppose you've specified the following values for your
                    distribution:

                    * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                    * ``OriginPath`` : ``/production``

                    * ``CNAME`` : ``example.com``

                    When a user enters ``example.com/index.html`` in a browser, CloudFront sends a
                    request to Amazon S3 for ``myawsbucket/production/index.html`` .

                    When a user enters ``example.com/acme/index.html`` in a browser, CloudFront
                    sends a request to Amazon S3 for ``myawsbucket/production/acme/index.html`` .

                  - **CustomHeaders** *(dict) --*

                    A complex type that contains names and values for the custom headers that you
                    want.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of custom headers, if any, for this distribution.

                    - **Items** *(list) --*

                       **Optional** : A list that contains one ``OriginCustomHeader`` element for
                       each custom header that you want CloudFront to forward to the origin. If
                       Quantity is ``0`` , omit ``Items`` .

                      - *(dict) --*

                        A complex type that contains ``HeaderName`` and ``HeaderValue`` elements, if
                        any, for this distribution.

                        - **HeaderName** *(string) --* **[REQUIRED]**

                          The name of a header that you want CloudFront to forward to your origin.
                          For more information, see `Forwarding Custom Headers to Your Origin (Web
                          Distributions Only)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **HeaderValue** *(string) --* **[REQUIRED]**

                          The value for the header that you specified in the ``HeaderName`` field.

                  - **S3OriginConfig** *(dict) --*

                    A complex type that contains information about the Amazon S3 origin. If the
                    origin is a custom origin, use the ``CustomOriginConfig`` element instead.

                    - **OriginAccessIdentity** *(string) --* **[REQUIRED]**

                      The CloudFront origin access identity to associate with the origin. Use an
                      origin access identity to configure the origin so that viewers can *only*
                      access objects in an Amazon S3 bucket through CloudFront. The format of the
                      value is:

                      origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                      where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                      returned in the ``ID`` element when you created the origin access identity.

                      If you want viewers to be able to access objects using either the CloudFront
                      URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                      To delete the origin access identity from an existing distribution, update the
                      distribution configuration and include an empty ``OriginAccessIdentity``
                      element.

                      To replace the origin access identity, update the distribution configuration
                      and specify the new origin access identity.

                      For more information about the origin access identity, see `Serving Private
                      Content through CloudFront
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **CustomOriginConfig** *(dict) --*

                    A complex type that contains information about a custom origin. If the origin is
                    an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                    - **HTTPPort** *(integer) --* **[REQUIRED]**

                      The HTTP port the custom origin listens on.

                    - **HTTPSPort** *(integer) --* **[REQUIRED]**

                      The HTTPS port the custom origin listens on.

                    - **OriginProtocolPolicy** *(string) --* **[REQUIRED]**

                      The origin protocol policy to apply to your origin.

                    - **OriginSslProtocols** *(dict) --*

                      The SSL/TLS protocols that you want CloudFront to use when communicating with
                      your origin over HTTPS.

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of SSL/TLS protocols that you want to allow CloudFront to use
                        when establishing an HTTPS connection with this origin.

                      - **Items** *(list) --* **[REQUIRED]**

                        A list that contains allowed SSL/TLS protocols for this distribution.

                        - *(string) --*

                    - **OriginReadTimeout** *(integer) --*

                      You can create a custom origin read timeout. All timeout units are in seconds.
                      The default origin read timeout is 30 seconds, but you can configure custom
                      timeout lengths using the CloudFront API. The minimum timeout length is 4
                      seconds; the maximum is 60 seconds.

                      If you need to increase the maximum time limit, contact the `AWS Support
                      Center <https://console.aws.amazon.com/support/home#/>`__ .

                    - **OriginKeepaliveTimeout** *(integer) --*

                      You can create a custom keep-alive timeout. All timeout units are in seconds.
                      The default keep-alive timeout is 5 seconds, but you can configure custom
                      timeout lengths using the CloudFront API. The minimum timeout length is 1
                      second; the maximum is 60 seconds.

                      If you need to increase the maximum time limit, contact the `AWS Support
                      Center <https://console.aws.amazon.com/support/home#/>`__ .

            - **OriginGroups** *(dict) --*

              A complex type that contains information about origin groups for this distribution.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of origin groups.

              - **Items** *(list) --*

                The items (origin groups) in a distribution.

                - *(dict) --*

                  An origin group includes two origins (a primary origin and a second origin to
                  failover to) and a failover criteria that you specify. You create an origin group
                  to support origin failover in CloudFront. When you create or update a
                  distribution, you can specifiy the origin group instead of a single origin, and
                  CloudFront will failover from the primary origin to the second origin under the
                  failover conditions that you've chosen.

                  - **Id** *(string) --* **[REQUIRED]**

                    The origin group's ID.

                  - **FailoverCriteria** *(dict) --* **[REQUIRED]**

                    A complex type that contains information about the failover criteria for an
                    origin group.

                    - **StatusCodes** *(dict) --* **[REQUIRED]**

                      The status codes that, when returned from the primary origin, will trigger
                      CloudFront to failover to the second origin.

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of status codes.

                      - **Items** *(list) --* **[REQUIRED]**

                        The items (status codes) for an origin group.

                        - *(integer) --*

                  - **Members** *(dict) --* **[REQUIRED]**

                    A complex type that contains information about the origins in an origin group.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of origins in an origin group.

                    - **Items** *(list) --* **[REQUIRED]**

                      Items (origins) in an origin group.

                      - *(dict) --*

                        An origin in an origin group.

                        - **OriginId** *(string) --* **[REQUIRED]**

                          The ID for an origin in an origin group.

            - **DefaultCacheBehavior** *(dict) --* **[REQUIRED]**

              A complex type that describes the default cache behavior if you don't specify a
              ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern``
              in ``CacheBehavior`` elements. You must create exactly one default cache behavior.

              - **TargetOriginId** *(string) --* **[REQUIRED]**

                The value of ``ID`` for the origin that you want CloudFront to route requests to
                when a request matches the path pattern either for a cache behavior or for the
                default cache behavior in your distribution.

              - **ForwardedValues** *(dict) --* **[REQUIRED]**

                A complex type that specifies how CloudFront handles query strings and cookies.

                - **QueryString** *(boolean) --* **[REQUIRED]**

                  Indicates whether you want CloudFront to forward query strings to the origin that
                  is associated with this cache behavior and cache based on the query string
                  parameters. CloudFront behavior depends on the value of ``QueryString`` and on the
                  values that you specify for ``QueryStringCacheKeys`` , if any:

                  If you specify true for ``QueryString`` and you don't specify any values for
                  ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to the
                  origin and caches based on all query string parameters. Depending on how many
                  query string parameters and values you have, this can adversely affect performance
                  because CloudFront must forward more requests to the origin.

                  If you specify true for ``QueryString`` and you specify one or more values for
                  ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to the
                  origin, but it only caches based on the query string parameters that you specify.

                  If you specify false for ``QueryString`` , CloudFront doesn't forward any query
                  string parameters to the origin, and doesn't cache based on query string
                  parameters.

                  For more information, see `Configuring CloudFront to Cache Based on Query String
                  Parameters
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Cookies** *(dict) --* **[REQUIRED]**

                  A complex type that specifies whether you want CloudFront to forward cookies to
                  the origin and, if so, which ones. For more information about forwarding cookies
                  to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Forward** *(string) --* **[REQUIRED]**

                    Specifies which cookies to forward to the origin for this cache behavior: all,
                    none, or the list of cookies specified in the ``WhitelistedNames`` complex type.

                    Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                    requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                  - **WhitelistedNames** *(dict) --*

                    Required if you specify ``whitelist`` for the value of ``Forward:`` . A complex
                    type that specifies how many different cookies you want CloudFront to forward to
                    the origin for this cache behavior and, if you want to forward selected cookies,
                    the names of those cookies.

                    If you specify ``all`` or none for the value of ``Forward`` , omit
                    ``WhitelistedNames`` . If you change the value of ``Forward`` from ``whitelist``
                    to all or none and you don't delete the ``WhitelistedNames`` element and its
                    child elements, CloudFront deletes them automatically.

                    For the current limit on the number of cookie names that you can whitelist for
                    each cache behavior, see `CloudFront Limits
                    <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                    in the *AWS General Reference* .

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of different cookies that you want CloudFront to forward to the
                      origin for this cache behavior.

                    - **Items** *(list) --*

                      A complex type that contains one ``Name`` element for each cookie that you
                      want CloudFront to forward to the origin for this cache behavior.

                      - *(string) --*

                - **Headers** *(dict) --*

                  A complex type that specifies the ``Headers`` , if any, that you want CloudFront
                  to forward to the origin for this cache behavior (whitelisted headers). For the
                  headers that you specify, CloudFront also caches separate versions of a specified
                  object that is based on the header values in viewer requests.

                  For more information, see `Caching Content Based on Request Headers
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of different headers that you want CloudFront to base caching on for
                    this cache behavior. You can configure each cache behavior in a web distribution
                    to do one of the following:

                    * **Forward all headers to your origin** : Specify ``1`` for ``Quantity`` and
                    ``*`` for ``Name`` .

                    .. warning::

                       CloudFront doesn't cache the objects that are associated with this cache
                       behavior. Instead, CloudFront sends every request to the origin.

                    * **Forward a whitelist of headers you specify** : Specify the number of headers
                    that you want CloudFront to base caching on. Then specify the header names in
                    ``Name`` elements. CloudFront caches your objects based on the values in the
                    specified headers.

                    * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and omit
                    ``Items`` . In this configuration, CloudFront doesn't cache based on the values
                    in the request headers.

                    Regardless of which option you choose, CloudFront forwards headers to your
                    origin based on whether the origin is an S3 bucket or a custom origin. See the
                    following documentation:

                    * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or Updates
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                    * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                  - **Items** *(list) --*

                    A list that contains one ``Name`` element for each header that you want
                    CloudFront to use for caching in this cache behavior. If ``Quantity`` is ``0`` ,
                    omit ``Items`` .

                    - *(string) --*

                - **QueryStringCacheKeys** *(dict) --*

                  A complex type that contains information about the query string parameters that
                  you want CloudFront to use for caching for this cache behavior.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of ``whitelisted`` query string parameters for a cache behavior.

                  - **Items** *(list) --*

                    A list that contains the query string parameters that you want CloudFront to use
                    as a basis for caching for a cache behavior. If ``Quantity`` is 0, you can omit
                    ``Items`` .

                    - *(string) --*

              - **TrustedSigners** *(dict) --* **[REQUIRED]**

                A complex type that specifies the AWS accounts, if any, that you want to allow to
                create signed URLs for private content.

                If you want to require signed URLs in requests for objects in the target origin that
                match the ``PathPattern`` for this cache behavior, specify ``true`` for ``Enabled``
                , and specify the applicable values for ``Quantity`` and ``Items`` . For more
                information, see `Serving Private Content through CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                in the *Amazon CloudFront Developer Guide* .

                If you don't want to require signed URLs in requests for objects that match
                ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                Omit ``Items`` .

                To add, change, or remove one or more trusted signers, change ``Enabled`` to
                ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                specify all of the trusted signers that you want to include in the updated
                distribution.

                - **Enabled** *(boolean) --* **[REQUIRED]**

                  Specifies whether you want to require viewers to use signed URLs to access the
                  files specified by ``PathPattern`` and ``TargetOriginId`` .

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of trusted signers for this cache behavior.

                - **Items** *(list) --*

                   **Optional** : A complex type that contains trusted signers for this cache
                   behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                  - *(string) --*

              - **ViewerProtocolPolicy** *(string) --* **[REQUIRED]**

                The protocol that viewers can use to access the files in the origin specified by
                ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` . You
                can specify the following options:

                * ``allow-all`` : Viewers can use HTTP or HTTPS.

                * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront returns an
                HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL.
                The viewer then resubmits the request using the new URL.

                * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                status code of 403 (Forbidden).

                For more information about requiring the HTTPS protocol, see `Using an HTTPS
                Connection to Access Your Objects
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                in the *Amazon CloudFront Developer Guide* .

                .. note::

                  The only way to guarantee that viewers retrieve an object that was fetched from
                  the origin using HTTPS is never to use any other protocol to fetch the object. If
                  you have recently changed from HTTP to HTTPS, we recommend that you clear your
                  objects' cache because cached objects are protocol agnostic. That means that an
                  edge location will return an object from the cache regardless of whether the
                  current request protocol matches the protocol used previously. For more
                  information, see `Managing How Long Content Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

              - **MinTTL** *(integer) --* **[REQUIRED]**

                The minimum amount of time that you want objects to stay in CloudFront caches before
                CloudFront forwards another request to your origin to determine whether the object
                has been updated. For more information, see `Managing How Long Content Stays in an
                Edge Cache (Expiration)
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                in the *Amazon CloudFront Developer Guide* .

                You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                headers to your origin (under ``Headers`` , if you specify ``1`` for ``Quantity``
                and ``*`` for ``Name`` ).

              - **AllowedMethods** *(dict) --*

                A complex type that controls which HTTP methods CloudFront processes and forwards to
                your Amazon S3 bucket or your custom origin. There are three choices:

                * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                requests.

                If you pick the third choice, you may need to restrict access to your Amazon S3
                bucket or to your custom origin so users can't perform operations that you don't
                want them to. For example, you might not want users to have permissions to delete
                objects from your origin.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of HTTP methods that you want CloudFront to forward to your origin.
                  Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` , ``HEAD``
                  , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` ,
                  and ``DELETE`` requests).

                - **Items** *(list) --* **[REQUIRED]**

                  A complex type that contains the HTTP methods that you want CloudFront to process
                  and forward to your origin.

                  - *(string) --*

                - **CachedMethods** *(dict) --*

                  A complex type that controls whether CloudFront caches the response to requests
                  using the specified HTTP methods. There are two choices:

                  * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                  * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                  If you pick the second choice for your Amazon S3 Origin, you may need to forward
                  Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers
                  for the responses to be cached correctly.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of HTTP methods for which you want CloudFront to cache responses.
                    Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD`` requests)
                    and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                    requests).

                  - **Items** *(list) --* **[REQUIRED]**

                    A complex type that contains the HTTP methods that you want CloudFront to cache
                    responses to.

                    - *(string) --*

              - **SmoothStreaming** *(boolean) --*

                Indicates whether you want to distribute media files in the Microsoft Smooth
                Streaming format using the origin that is associated with this cache behavior. If
                so, specify ``true`` ; if not, specify ``false`` . If you specify ``true`` for
                ``SmoothStreaming`` , you can still distribute other content using this cache
                behavior if the content matches the value of ``PathPattern`` .

              - **DefaultTTL** *(integer) --*

                The default amount of time that you want objects to stay in CloudFront caches before
                CloudFront forwards another request to your origin to determine whether the object
                has been updated. The value that you specify applies only when your origin does not
                add HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` ,
                and ``Expires`` to objects. For more information, see `Managing How Long Content
                Stays in an Edge Cache (Expiration)
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **MaxTTL** *(integer) --*

                The maximum amount of time that you want objects to stay in CloudFront caches before
                CloudFront forwards another request to your origin to determine whether the object
                has been updated. The value that you specify applies only when your origin adds HTTP
                headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and
                ``Expires`` to objects. For more information, see `Managing How Long Content Stays
                in an Edge Cache (Expiration)
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **Compress** *(boolean) --*

                Whether you want CloudFront to automatically compress certain files for this cache
                behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                information, see `Serving Compressed Files
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **LambdaFunctionAssociations** *(dict) --*

                A complex type that contains zero or more Lambda function associations for a cache
                behavior.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of Lambda function associations for this cache behavior.

                - **Items** *(list) --*

                   **Optional** : A complex type that contains ``LambdaFunctionAssociation`` items
                   for this cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                  - *(dict) --*

                    A complex type that contains a Lambda function association.

                    - **LambdaFunctionARN** *(string) --* **[REQUIRED]**

                      The ARN of the Lambda function. You must specify the ARN of a function
                      version; you can't specify a Lambda alias or $LATEST.

                    - **EventType** *(string) --* **[REQUIRED]**

                      Specifies the event type that triggers a Lambda function invocation. You can
                      specify the following values:

                      * ``viewer-request`` : The function executes when CloudFront receives a
                      request from a viewer and before it checks to see whether the requested object
                      is in the edge cache.

                      * ``origin-request`` : The function executes only when CloudFront forwards a
                      request to your origin. When the requested object is in the edge cache, the
                      function doesn't execute.

                      * ``origin-response`` : The function executes after CloudFront receives a
                      response from the origin and before it caches the object in the response. When
                      the requested object is in the edge cache, the function doesn't execute.

                      * ``viewer-response`` : The function executes before CloudFront returns the
                      requested object to the viewer. The function executes regardless of whether
                      the object was already in the edge cache. If the origin returns an HTTP status
                      code other than HTTP 200 (OK), the function doesn't execute.

                    - **IncludeBody** *(boolean) --*

                      A flag that allows a Lambda function to have read access to the body content.
                      For more information, see `Accessing the Request Body by Choosing the Include
                      Body Option
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                      in the Amazon CloudFront Developer Guide.

              - **FieldLevelEncryptionId** *(string) --*

                The value of ``ID`` for the field-level encryption configuration that you want
                CloudFront to use for encrypting specific fields of data for a cache behavior or for
                the default cache behavior in your distribution.

            - **CacheBehaviors** *(dict) --*

              A complex type that contains zero or more ``CacheBehavior`` elements.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of cache behaviors for this distribution.

              - **Items** *(list) --*

                Optional: A complex type that contains cache behaviors for this distribution. If
                ``Quantity`` is ``0`` , you can omit ``Items`` .

                - *(dict) --*

                  A complex type that describes how CloudFront processes requests.

                  You must create at least as many cache behaviors (including the default cache
                  behavior) as you have origins if you want CloudFront to distribute objects from
                  all of the origins. Each cache behavior specifies the one origin from which you
                  want CloudFront to get objects. If you have two origins and only the default cache
                  behavior, the default cache behavior will cause CloudFront to get objects from one
                  of the origins, but the other origin is never used.

                  For the current limit on the number of cache behaviors that you can add to a
                  distribution, see `Amazon CloudFront Limits
                  <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                  in the *AWS General Reference* .

                  If you don't want to specify any cache behaviors, include only an empty
                  ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element, or
                  CloudFront returns a ``MalformedXML`` error.

                  To delete all cache behaviors in an existing distribution, update the distribution
                  configuration and include only an empty ``CacheBehaviors`` element.

                  To add, change, or remove one or more cache behaviors, update the distribution
                  configuration and specify all of the cache behaviors that you want to include in
                  the updated distribution.

                  For more information about cache behaviors, see `Cache Behaviors
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **PathPattern** *(string) --* **[REQUIRED]**

                    The pattern (for example, ``images/*.jpg`` ) that specifies which requests to
                    apply the behavior to. When CloudFront receives a viewer request, the requested
                    path is compared with path patterns in the order in which cache behaviors are
                    listed in the distribution.

                    .. note::

                      You can optionally include a slash (``/`` ) at the beginning of the path
                      pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same with
                      or without the leading ``/`` .

                    The path pattern for the default cache behavior is ``*`` and cannot be changed.
                    If the request for an object does not match the path pattern for any cache
                    behaviors, CloudFront applies the behavior in the default cache behavior.

                    For more information, see `Path Pattern
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **TargetOriginId** *(string) --* **[REQUIRED]**

                    The value of ``ID`` for the origin that you want CloudFront to route requests to
                    when a request matches the path pattern either for a cache behavior or for the
                    default cache behavior in your distribution.

                  - **ForwardedValues** *(dict) --* **[REQUIRED]**

                    A complex type that specifies how CloudFront handles query strings and cookies.

                    - **QueryString** *(boolean) --* **[REQUIRED]**

                      Indicates whether you want CloudFront to forward query strings to the origin
                      that is associated with this cache behavior and cache based on the query
                      string parameters. CloudFront behavior depends on the value of ``QueryString``
                      and on the values that you specify for ``QueryStringCacheKeys`` , if any:

                      If you specify true for ``QueryString`` and you don't specify any values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin and caches based on all query string parameters. Depending on how
                      many query string parameters and values you have, this can adversely affect
                      performance because CloudFront must forward more requests to the origin.

                      If you specify true for ``QueryString`` and you specify one or more values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin, but it only caches based on the query string parameters that you
                      specify.

                      If you specify false for ``QueryString`` , CloudFront doesn't forward any
                      query string parameters to the origin, and doesn't cache based on query string
                      parameters.

                      For more information, see `Configuring CloudFront to Cache Based on Query
                      String Parameters
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Cookies** *(dict) --* **[REQUIRED]**

                      A complex type that specifies whether you want CloudFront to forward cookies
                      to the origin and, if so, which ones. For more information about forwarding
                      cookies to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Forward** *(string) --* **[REQUIRED]**

                        Specifies which cookies to forward to the origin for this cache behavior:
                        all, none, or the list of cookies specified in the ``WhitelistedNames``
                        complex type.

                        Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                        requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                      - **WhitelistedNames** *(dict) --*

                        Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                        complex type that specifies how many different cookies you want CloudFront
                        to forward to the origin for this cache behavior and, if you want to forward
                        selected cookies, the names of those cookies.

                        If you specify ``all`` or none for the value of ``Forward`` , omit
                        ``WhitelistedNames`` . If you change the value of ``Forward`` from
                        ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                        element and its child elements, CloudFront deletes them automatically.

                        For the current limit on the number of cookie names that you can whitelist
                        for each cache behavior, see `CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Quantity** *(integer) --* **[REQUIRED]**

                          The number of different cookies that you want CloudFront to forward to the
                          origin for this cache behavior.

                        - **Items** *(list) --*

                          A complex type that contains one ``Name`` element for each cookie that you
                          want CloudFront to forward to the origin for this cache behavior.

                          - *(string) --*

                    - **Headers** *(dict) --*

                      A complex type that specifies the ``Headers`` , if any, that you want
                      CloudFront to forward to the origin for this cache behavior (whitelisted
                      headers). For the headers that you specify, CloudFront also caches separate
                      versions of a specified object that is based on the header values in viewer
                      requests.

                      For more information, see `Caching Content Based on Request Headers
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of different headers that you want CloudFront to base caching on
                        for this cache behavior. You can configure each cache behavior in a web
                        distribution to do one of the following:

                        * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                        and ``*`` for ``Name`` .

                        .. warning::

                           CloudFront doesn't cache the objects that are associated with this cache
                           behavior. Instead, CloudFront sends every request to the origin.

                        * **Forward a whitelist of headers you specify** : Specify the number of
                        headers that you want CloudFront to base caching on. Then specify the header
                        names in ``Name`` elements. CloudFront caches your objects based on the
                        values in the specified headers.

                        * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                        omit ``Items`` . In this configuration, CloudFront doesn't cache based on
                        the values in the request headers.

                        Regardless of which option you choose, CloudFront forwards headers to your
                        origin based on whether the origin is an S3 bucket or a custom origin. See
                        the following documentation:

                        * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                        Updates
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                        * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                      - **Items** *(list) --*

                        A list that contains one ``Name`` element for each header that you want
                        CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                        ``0`` , omit ``Items`` .

                        - *(string) --*

                    - **QueryStringCacheKeys** *(dict) --*

                      A complex type that contains information about the query string parameters
                      that you want CloudFront to use for caching for this cache behavior.

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of ``whitelisted`` query string parameters for a cache behavior.

                      - **Items** *(list) --*

                        A list that contains the query string parameters that you want CloudFront to
                        use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you
                        can omit ``Items`` .

                        - *(string) --*

                  - **TrustedSigners** *(dict) --* **[REQUIRED]**

                    A complex type that specifies the AWS accounts, if any, that you want to allow
                    to create signed URLs for private content.

                    If you want to require signed URLs in requests for objects in the target origin
                    that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                    ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                    For more information, see `Serving Private Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    If you don't want to require signed URLs in requests for objects that match
                    ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                    Omit ``Items`` .

                    To add, change, or remove one or more trusted signers, change ``Enabled`` to
                    ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                    specify all of the trusted signers that you want to include in the updated
                    distribution.

                    - **Enabled** *(boolean) --* **[REQUIRED]**

                      Specifies whether you want to require viewers to use signed URLs to access the
                      files specified by ``PathPattern`` and ``TargetOriginId`` .

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of trusted signers for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains trusted signers for this cache
                       behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(string) --*

                  - **ViewerProtocolPolicy** *(string) --* **[REQUIRED]**

                    The protocol that viewers can use to access the files in the origin specified by
                    ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                    You can specify the following options:

                    * ``allow-all`` : Viewers can use HTTP or HTTPS.

                    * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                    returns an HTTP status code of 301 (Moved Permanently) to the viewer along with
                    the HTTPS URL. The viewer then resubmits the request using the new URL.

                    * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                    status code of 403 (Forbidden).

                    For more information about requiring the HTTPS protocol, see `Using an HTTPS
                    Connection to Access Your Objects
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    .. note::

                      The only way to guarantee that viewers retrieve an object that was fetched
                      from the origin using HTTPS is never to use any other protocol to fetch the
                      object. If you have recently changed from HTTP to HTTPS, we recommend that you
                      clear your objects' cache because cached objects are protocol agnostic. That
                      means that an edge location will return an object from the cache regardless of
                      whether the current request protocol matches the protocol used previously. For
                      more information, see `Managing How Long Content Stays in an Edge Cache
                      (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **MinTTL** *(integer) --* **[REQUIRED]**

                    The minimum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. For more information, see `Managing How Long
                    Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                    headers to your origin (under ``Headers`` , if you specify ``1`` for
                    ``Quantity`` and ``*`` for ``Name`` ).

                  - **AllowedMethods** *(dict) --*

                    A complex type that controls which HTTP methods CloudFront processes and
                    forwards to your Amazon S3 bucket or your custom origin. There are three
                    choices:

                    * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                    * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                    requests.

                    If you pick the third choice, you may need to restrict access to your Amazon S3
                    bucket or to your custom origin so users can't perform operations that you don't
                    want them to. For example, you might not want users to have permissions to
                    delete objects from your origin.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of HTTP methods that you want CloudFront to forward to your origin.
                      Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                      ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                      PATCH, POST`` , and ``DELETE`` requests).

                    - **Items** *(list) --* **[REQUIRED]**

                      A complex type that contains the HTTP methods that you want CloudFront to
                      process and forward to your origin.

                      - *(string) --*

                    - **CachedMethods** *(dict) --*

                      A complex type that controls whether CloudFront caches the response to
                      requests using the specified HTTP methods. There are two choices:

                      * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                      * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                      requests.

                      If you pick the second choice for your Amazon S3 Origin, you may need to
                      forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                      Origin headers for the responses to be cached correctly.

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of HTTP methods for which you want CloudFront to cache responses.
                        Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                        requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                        ``OPTIONS`` requests).

                      - **Items** *(list) --* **[REQUIRED]**

                        A complex type that contains the HTTP methods that you want CloudFront to
                        cache responses to.

                        - *(string) --*

                  - **SmoothStreaming** *(boolean) --*

                    Indicates whether you want to distribute media files in the Microsoft Smooth
                    Streaming format using the origin that is associated with this cache behavior.
                    If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                    for ``SmoothStreaming`` , you can still distribute other content using this
                    cache behavior if the content matches the value of ``PathPattern`` .

                  - **DefaultTTL** *(integer) --*

                    The default amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                    ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                    see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MaxTTL** *(integer) --*

                    The maximum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                    s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                    Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Compress** *(boolean) --*

                    Whether you want CloudFront to automatically compress certain files for this
                    cache behavior. If so, specify true; if not, specify false. For more
                    information, see `Serving Compressed Files
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **LambdaFunctionAssociations** *(dict) --*

                    A complex type that contains zero or more Lambda function associations for a
                    cache behavior.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of Lambda function associations for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                       items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                       ``Items`` .

                      - *(dict) --*

                        A complex type that contains a Lambda function association.

                        - **LambdaFunctionARN** *(string) --* **[REQUIRED]**

                          The ARN of the Lambda function. You must specify the ARN of a function
                          version; you can't specify a Lambda alias or $LATEST.

                        - **EventType** *(string) --* **[REQUIRED]**

                          Specifies the event type that triggers a Lambda function invocation. You
                          can specify the following values:

                          * ``viewer-request`` : The function executes when CloudFront receives a
                          request from a viewer and before it checks to see whether the requested
                          object is in the edge cache.

                          * ``origin-request`` : The function executes only when CloudFront forwards
                          a request to your origin. When the requested object is in the edge cache,
                          the function doesn't execute.

                          * ``origin-response`` : The function executes after CloudFront receives a
                          response from the origin and before it caches the object in the response.
                          When the requested object is in the edge cache, the function doesn't
                          execute.

                          * ``viewer-response`` : The function executes before CloudFront returns
                          the requested object to the viewer. The function executes regardless of
                          whether the object was already in the edge cache. If the origin returns an
                          HTTP status code other than HTTP 200 (OK), the function doesn't execute.

                        - **IncludeBody** *(boolean) --*

                          A flag that allows a Lambda function to have read access to the body
                          content. For more information, see `Accessing the Request Body by Choosing
                          the Include Body Option
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                          in the Amazon CloudFront Developer Guide.

                  - **FieldLevelEncryptionId** *(string) --*

                    The value of ``ID`` for the field-level encryption configuration that you want
                    CloudFront to use for encrypting specific fields of data for a cache behavior or
                    for the default cache behavior in your distribution.

            - **CustomErrorResponses** *(dict) --*

              A complex type that controls the following:

              * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom
              error messages before returning the response to the viewer.

              * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

              For more information about custom error pages, see `Customizing Error Responses
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
              in the *Amazon CloudFront Developer Guide* .

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of HTTP status codes for which you want to specify a custom error page
                and/or a caching duration. If ``Quantity`` is ``0`` , you can omit ``Items`` .

              - **Items** *(list) --*

                A complex type that contains a ``CustomErrorResponse`` element for each HTTP status
                code for which you want to specify a custom error page and/or a caching duration.

                - *(dict) --*

                  A complex type that controls:

                  * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                  custom error messages before returning the response to the viewer.

                  * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                  For more information about custom error pages, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **ErrorCode** *(integer) --* **[REQUIRED]**

                    The HTTP status code for which you want to specify a custom error page and/or a
                    caching duration.

                  - **ResponsePagePath** *(string) --*

                    The path to the custom error page that you want CloudFront to return to a viewer
                    when your origin returns the HTTP status code specified by ``ErrorCode`` , for
                    example, ``/4xx-errors/403-forbidden.html`` . If you want to store your objects
                    and your custom error pages in different locations, your distribution must
                    include a cache behavior for which the following is true:

                    * The value of ``PathPattern`` matches the path to your custom error messages.
                    For example, suppose you saved custom error pages for 4xx errors in an Amazon S3
                    bucket in a directory named ``/4xx-errors`` . Your distribution must include a
                    cache behavior for which the path pattern routes requests for your custom error
                    pages to that location, for example, ``/4xx-errors/*`` .

                    * The value of ``TargetOriginId`` specifies the value of the ``ID`` element for
                    the origin that contains your custom error pages.

                    If you specify a value for ``ResponsePagePath`` , you must also specify a value
                    for ``ResponseCode`` . If you don't want to specify a value, include an empty
                    element, ``<ResponsePagePath>`` , in the XML document.

                    We recommend that you store custom error pages in an Amazon S3 bucket. If you
                    store custom error pages on an HTTP server and the server starts to return 5xx
                    errors, CloudFront can't get the files that you want to return to viewers
                    because the origin server is unavailable.

                  - **ResponseCode** *(string) --*

                    The HTTP status code that you want CloudFront to return to the viewer along with
                    the custom error page. There are a variety of reasons that you might want
                    CloudFront to return a status code different from the status code that your
                    origin returned to CloudFront, for example:

                    * Some Internet devices (some firewalls and corporate proxies, for example)
                    intercept HTTP 4xx and 5xx and prevent the response from being returned to the
                    viewer. If you substitute ``200`` , the response typically won't be intercepted.

                    * If you don't care about distinguishing among different client errors or server
                    errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for all 4xx
                    or 5xx errors.

                    * You might want to return a ``200`` status code (OK) and static website so your
                    customers don't know that your website is down.

                    If you specify a value for ``ResponseCode`` , you must also specify a value for
                    ``ResponsePagePath`` . If you don't want to specify a value, include an empty
                    element, ``<ResponseCode>`` , in the XML document.

                  - **ErrorCachingMinTTL** *(integer) --*

                    The minimum amount of time, in seconds, that you want CloudFront to cache the
                    HTTP status code specified in ``ErrorCode`` . When this time period has elapsed,
                    CloudFront queries your origin to see whether the problem that caused the error
                    has been resolved and the requested object is now available.

                    If you don't want to specify a value, include an empty element,
                    ``<ErrorCachingMinTTL>`` , in the XML document.

                    For more information, see `Customizing Error Responses
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                    in the *Amazon CloudFront Developer Guide* .

            - **Comment** *(string) --* **[REQUIRED]**

              Any comments you want to include about the distribution.

              If you don't want to specify a comment, include an empty ``Comment`` element.

              To delete an existing comment, update the distribution configuration and include an
              empty ``Comment`` element.

              To add or change a comment, update the distribution configuration and specify the new
              comment.

            - **Logging** *(dict) --*

              A complex type that controls whether access logs are written for the distribution.

              For more information about logging, see `Access Logs
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
              in the *Amazon CloudFront Developer Guide* .

              - **Enabled** *(boolean) --* **[REQUIRED]**

                Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If
                you don't want to enable logging when you create a distribution or if you want to
                disable logging for an existing distribution, specify ``false`` for ``Enabled`` ,
                and specify empty ``Bucket`` and ``Prefix`` elements. If you specify ``false`` for
                ``Enabled`` but you specify values for ``Bucket`` , ``prefix`` , and
                ``IncludeCookies`` , the values are automatically deleted.

              - **IncludeCookies** *(boolean) --* **[REQUIRED]**

                Specifies whether you want CloudFront to include cookies in access logs, specify
                ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs,
                CloudFront logs all cookies regardless of how you configure the cache behaviors for
                this distribution. If you don't want to include cookies when you create a
                distribution or if you want to disable include cookies for an existing distribution,
                specify ``false`` for ``IncludeCookies`` .

              - **Bucket** *(string) --* **[REQUIRED]**

                The Amazon S3 bucket to store the access logs in, for example,
                ``myawslogbucket.s3.amazonaws.com`` .

              - **Prefix** *(string) --* **[REQUIRED]**

                An optional string that you want CloudFront to prefix to the access log
                ``filenames`` for this distribution, for example, ``myprefix/`` . If you want to
                enable logging, but you don't want to specify a prefix, you still must include an
                empty ``Prefix`` element in the ``Logging`` element.

            - **PriceClass** *(string) --*

              The price class that corresponds with the maximum price that you want to pay for
              CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to
              requests for your objects from all CloudFront edge locations.

              If you specify a price class other than ``PriceClass_All`` , CloudFront serves your
              objects from the CloudFront edge location that has the lowest latency among the edge
              locations in your price class. Viewers who are in or near regions that are excluded
              from your specified price class may encounter slower performance.

              For more information about price classes, see `Choosing the Price Class for a
              CloudFront Distribution
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
              in the *Amazon CloudFront Developer Guide* . For information about CloudFront pricing,
              including how price classes (such as Price Class 100) map to CloudFront regions, see
              `Amazon CloudFront Pricing <http://aws.amazon.com/cloudfront/pricing/>`__ . For price
              class information, scroll down to see the table at the bottom of the page.

            - **Enabled** *(boolean) --* **[REQUIRED]**

              From this field, you can enable or disable the selected distribution.

            - **ViewerCertificate** *(dict) --*

              A complex type that specifies whether you want viewers to use HTTP or HTTPS to request
              your objects, whether you're using an alternate domain name with HTTPS, and if so, if
              you're using AWS Certificate Manager (ACM) or a third-party certificate authority.

              - **CloudFrontDefaultCertificate** *(boolean) --*

                If you're using the CloudFront domain name for your distribution, such as
                ``d111111abcdef8.cloudfront.net`` , specify the following value:

                * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

              - **IAMCertificateId** *(string) --*

                If you want viewers to use HTTPS to request your objects and you're using an
                alternate domain name, you must choose the type of certificate that you want to use.
                Specify the following value if you purchased your certificate from a third-party
                certificate authority:

                * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                certificate ID* `` is the ID that IAM returned when you added the certificate to the
                IAM certificate store.

                If you specify ``IAMCertificateId`` , you must also specify a value for
                ``SSLSupportMethod`` .

              - **ACMCertificateArn** *(string) --*

                If you want viewers to use HTTPS to request your objects and you're using an
                alternate domain name, you must choose the type of certificate that you want to use.
                Specify the following value if ACM provided your certificate:

                * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>`` where
                `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS certificate
                that you want to use for this distribution.

                If you specify ``ACMCertificateArn`` , you must also specify a value for
                ``SSLSupportMethod`` .

              - **SSLSupportMethod** *(string) --*

                If you specify a value for `ACMCertificateArn
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                or for `IAMCertificateId
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                , you must also specify how you want CloudFront to serve HTTPS requests: using a
                method that works for browsers and clients released after 2010 or one that works for
                all clients.

                * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that support
                Server Name Indication (SNI). All modern browsers support SNI, but there are a few
                that don't. For a current list of the browsers that support SNI, see the `Wikipedia
                entry Server Name Indication
                <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about options to
                explore if you have users with browsers that don't include SNI support, see
                `Choosing How CloudFront Serves HTTPS Requests
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                in the *Amazon CloudFront Developer Guide* .

                * ``vip`` : CloudFront uses dedicated IP addresses for your content and can respond
                to HTTPS requests from any viewer. However, there are additional monthly charges.
                For details, including specific pricing information, see `Custom SSL options for
                Amazon CloudFront <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the
                AWS marketing site.

                Don't specify a value for ``SSLSupportMethod`` if you specified
                ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                For more information, see `Choosing How CloudFront Serves HTTPS Requests
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **MinimumProtocolVersion** *(string) --*

                Specify the security policy that you want CloudFront to use for HTTPS connections. A
                security policy determines two settings:

                * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

                * The cipher that CloudFront uses to encrypt the content that it returns to viewers

                .. note::

                  On the CloudFront console, this setting is called **Security policy** .

                We recommend that you specify ``TLSv1.1_2016`` unless your users are using browsers
                or devices that do not support TLSv1.1 or later.

                When both of the following are true, you must specify ``TLSv1`` or later for the
                security policy:

                * You're using a custom certificate: you specified a value for ``ACMCertificateArn``
                or for ``IAMCertificateId``

                * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                automatically sets the security policy to ``TLSv1`` regardless of the value that you
                specify for ``MinimumProtocolVersion`` .

                For information about the relationship between the security policy that you choose
                and the protocols and ciphers that CloudFront uses to communicate with viewers, see
                `Supported SSL/TLS Protocols and Ciphers for Communication Between Viewers and
                CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                in the *Amazon CloudFront Developer Guide* .

              - **Certificate** *(string) --*

                This field is no longer used. Use one of the following fields instead:

                * `ACMCertificateArn
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                * `IAMCertificateId
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                * `CloudFrontDefaultCertificate
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

              - **CertificateSource** *(string) --*

                This field is no longer used. Use one of the following fields instead:

                * `ACMCertificateArn
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                * `IAMCertificateId
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                * `CloudFrontDefaultCertificate
                <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

            - **Restrictions** *(dict) --*

              A complex type that identifies ways in which you want to restrict distribution of your
              content.

              - **GeoRestriction** *(dict) --* **[REQUIRED]**

                A complex type that controls the countries in which your content is distributed.
                CloudFront determines the location of your users using ``MaxMind`` GeoIP databases.

                - **RestrictionType** *(string) --* **[REQUIRED]**

                  The method that you want to use to restrict distribution of your content by
                  country:

                  * ``none`` : No geo restriction is enabled, meaning access to content is not
                  restricted by client geo location.

                  * ``blacklist`` : The ``Location`` elements specify the countries in which you
                  don't want CloudFront to distribute your content.

                  * ``whitelist`` : The ``Location`` elements specify the countries in which you
                  want CloudFront to distribute your content.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  When geo restriction is ``enabled`` , this is the number of countries in your
                  ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled, ``Quantity``
                  is ``0`` , and you can omit ``Items`` .

                - **Items** *(list) --*

                  A complex type that contains a ``Location`` element for each country in which you
                  want CloudFront either to distribute your content (``whitelist`` ) or not
                  distribute your content (``blacklist`` ).

                  The ``Location`` element is a two-letter, uppercase country code for a country
                  that you want to include in your ``blacklist`` or ``whitelist`` . Include one
                  ``Location`` element for each country.

                  CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current
                  list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on
                  the *International Organization for Standardization* website. You can also refer
                  to the country list on the CloudFront console, which includes both country names
                  and codes.

                  - *(string) --*

            - **WebACLId** *(string) --*

              A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this
              distribution.

              AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS
              requests that are forwarded to CloudFront, and lets you control access to your
              content. Based on conditions that you specify, such as the IP addresses that requests
              originate from or the values of query strings, CloudFront responds to requests either
              with the requested content or with an HTTP 403 status code (Forbidden). You can also
              configure CloudFront to return a custom error page when a request is blocked. For more
              information about AWS WAF, see the `AWS WAF Developer Guide
              <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

            - **HttpVersion** *(string) --*

              (Optional) Specify the maximum HTTP version that you want viewers to use to
              communicate with CloudFront. The default value for new web distributions is http2.
              Viewers that don't support HTTP/2 automatically use an earlier HTTP version.

              For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and
              must support Server Name Identification (SNI).

              In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces
              latency. You can improve performance by optimizing for HTTP/2. For more information,
              do an Internet search for "http/2 optimization."

            - **IsIPV6Enabled** *(boolean) --*

              If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your
              distribution, specify ``true`` . If you specify ``false`` , CloudFront responds to
              IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP addresses.
              This allows viewers to submit a second request, for an IPv4 address for your
              distribution.

              In general, you should enable IPv6 if you have users on IPv6 networks who want to
              access your content. However, if you're using signed URLs or signed cookies to
              restrict access to your content, and if you're using a custom policy that includes the
              ``IpAddress`` parameter to restrict the IP addresses that can access your content,
              don't enable IPv6. If you want to restrict access to some content by IP address and
              not restrict access to other content (or restrict access but not by IP address), you
              can create two distributions. For more information, see `Creating a Signed URL Using a
              Custom Policy
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
              in the *Amazon CloudFront Developer Guide* .

              If you're using an Amazon Route 53 alias resource record set to route traffic to your
              CloudFront distribution, you need to create a second alias resource record set when
              both of the following are true:

              * You enable IPv6 for the distribution

              * You're using alternate domain names in the URLs for your objects

              For more information, see `Routing Traffic to an Amazon CloudFront Web Distribution by
              Using Your Domain Name
              <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
              in the *Amazon Route 53 Developer Guide* .

              If you created a CNAME resource record set, either with Amazon Route 53 or with
              another DNS service, you don't need to make any changes. A CNAME record will route
              traffic to your distribution regardless of the IP address format of the viewer
              request.

          - **Tags** *(dict) --* **[REQUIRED]**

            A complex type that contains zero or more ``Tag`` elements.

            - **Items** *(list) --*

              A complex type that contains ``Tag`` elements.

              - *(dict) --*

                A complex type that contains ``Tag`` key and ``Tag`` value.

                - **Key** *(string) --* **[REQUIRED]**

                  A string that contains ``Tag`` key.

                  The string length should be between 1 and 128 characters. Valid characters include
                  ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / = +
                  @`` .

                - **Value** *(string) --*

                  A string that contains an optional ``Tag`` value.

                  The string length should be between 0 and 256 characters. Valid characters include
                  ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / = +
                  @`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Distribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'InProgressInvalidationBatches': 123,
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'DistributionConfig': {
                        'CallerReference': 'string',
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'DefaultRootObject': 'string',
                        'Origins': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'DomainName': 'string',
                                    'OriginPath': 'string',
                                    'CustomHeaders': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'HeaderName': 'string',
                                                'HeaderValue': 'string'
                                            },
                                        ]
                                    },
                                    'S3OriginConfig': {
                                        'OriginAccessIdentity': 'string'
                                    },
                                    'CustomOriginConfig': {
                                        'HTTPPort': 123,
                                        'HTTPSPort': 123,
                                        'OriginProtocolPolicy':
                                        'http-only'|'match-viewer'
                                        |'https-only',
                                        'OriginSslProtocols': {
                                            'Quantity': 123,
                                            'Items': [
                                                'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                            ]
                                        },
                                        'OriginReadTimeout': 123,
                                        'OriginKeepaliveTimeout': 123
                                    }
                                },
                            ]
                        },
                        'OriginGroups': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'FailoverCriteria': {
                                        'StatusCodes': {
                                            'Quantity': 123,
                                            'Items': [
                                                123,
                                            ]
                                        }
                                    },
                                    'Members': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'OriginId': 'string'
                                            },
                                        ]
                                    }
                                },
                            ]
                        },
                        'DefaultCacheBehavior': {
                            'TargetOriginId': 'string',
                            'ForwardedValues': {
                                'QueryString': True|False,
                                'Cookies': {
                                    'Forward': 'none'|'whitelist'|'all',
                                    'WhitelistedNames': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'Headers': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'QueryStringCacheKeys': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'TrustedSigners': {
                                'Enabled': True|False,
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                            'MinTTL': 123,
                            'AllowedMethods': {
                                'Quantity': 123,
                                'Items': [
                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                ],
                                'CachedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ]
                                }
                            },
                            'SmoothStreaming': True|False,
                            'DefaultTTL': 123,
                            'MaxTTL': 123,
                            'Compress': True|False,
                            'LambdaFunctionAssociations': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'LambdaFunctionARN': 'string',
                                        'EventType':
                                        'viewer-request'
                                        |'viewer-response'
                                        |'origin-request'
                                        |'origin-response',
                                        'IncludeBody': True|False
                                    },
                                ]
                            },
                            'FieldLevelEncryptionId': 'string'
                        },
                        'CacheBehaviors': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PathPattern': 'string',
                                    'TargetOriginId': 'string',
                                    'ForwardedValues': {
                                        'QueryString': True|False,
                                        'Cookies': {
                                            'Forward': 'none'|'whitelist'|'all',
                                            'WhitelistedNames': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            }
                                        },
                                        'Headers': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        },
                                        'QueryStringCacheKeys': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'TrustedSigners': {
                                        'Enabled': True|False,
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'ViewerProtocolPolicy':
                                    'allow-all'|'https-only'
                                    |'redirect-to-https',
                                    'MinTTL': 123,
                                    'AllowedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ],
                                        'CachedMethods': {
                                            'Quantity': 123,
                                            'Items': [
                                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                |'DELETE',
                                            ]
                                        }
                                    },
                                    'SmoothStreaming': True|False,
                                    'DefaultTTL': 123,
                                    'MaxTTL': 123,
                                    'Compress': True|False,
                                    'LambdaFunctionAssociations': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'LambdaFunctionARN': 'string',
                                                'EventType':
                                                'viewer-request'|'viewer-response'|'origin-request'
                                                |'origin-response',
                                                'IncludeBody': True|False
                                            },
                                        ]
                                    },
                                    'FieldLevelEncryptionId': 'string'
                                },
                            ]
                        },
                        'CustomErrorResponses': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'ErrorCode': 123,
                                    'ResponsePagePath': 'string',
                                    'ResponseCode': 'string',
                                    'ErrorCachingMinTTL': 123
                                },
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'IncludeCookies': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False,
                        'ViewerCertificate': {
                            'CloudFrontDefaultCertificate': True|False,
                            'IAMCertificateId': 'string',
                            'ACMCertificateArn': 'string',
                            'SSLSupportMethod': 'sni-only'|'vip',
                            'MinimumProtocolVersion':
                            'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                            |'TLSv1.2_2018',
                            'Certificate': 'string',
                            'CertificateSource': 'cloudfront'|'iam'|'acm'
                        },
                        'Restrictions': {
                            'GeoRestriction': {
                                'RestrictionType': 'blacklist'|'whitelist'|'none',
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            }
                        },
                        'WebACLId': 'string',
                        'HttpVersion': 'http1.1'|'http2',
                        'IsIPV6Enabled': True|False
                    },
                    'AliasICPRecordals': [
                        {
                            'CNAME': 'string',
                            'ICPRecordalStatus': 'APPROVED'|'SUSPENDED'|'PENDING'
                        },
                    ]
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Distribution** *(dict) --*

              The distribution's information.

              - **Id** *(string) --*

                The identifier for the distribution. For example: ``EDFDVBD632BHDS5`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                This response element indicates the current status of the distribution. When the
                status is ``Deployed`` , the distribution's information is fully propagated to all
                CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time the distribution was last modified.

              - **InProgressInvalidationBatches** *(integer) --*

                The number of invalidation batches currently in progress.

              - **DomainName** *(string) --*

                The domain name corresponding to the distribution, for example,
                ``d111111abcdef8.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                CloudFront automatically adds this element to the response only if you've set up the
                distribution to serve private content with signed URLs. The element lists the key
                pair IDs that CloudFront is aware of for each trusted signer. The ``Signer`` child
                element lists the AWS account number of the trusted signer (or an empty ``Self``
                element if the signer is you). The ``Signer`` element also includes the IDs of any
                active key pairs associated with the trusted signer's AWS account. If no
                ``KeyPairId`` element appears for a ``Signer`` , that signer can't create working
                signed URLs.

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **DistributionConfig** *(dict) --*

                The current configuration information for the distribution. Send a ``GET`` request
                to the ``/*CloudFront API version* /distribution ID/config`` resource.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``DistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **DefaultRootObject** *(string) --*

                  The object that you want CloudFront to request from your origin (for example,
                  ``index.html`` ) when a viewer requests the root URL for your distribution
                  (``http://www.example.com`` ) instead of an object in your distribution
                  (``http://www.example.com/product-description.html`` ). Specifying a default root
                  object avoids exposing the contents of your distribution.

                  Specify only the object name, for example, ``index.html`` . Don't add a ``/``
                  before the object name.

                  If you don't want to specify a default root object when you create a distribution,
                  include an empty ``DefaultRootObject`` element.

                  To delete the default root object from an existing distribution, update the
                  distribution configuration and include an empty ``DefaultRootObject`` element.

                  To replace the default root object, update the distribution configuration and
                  specify the new object.

                  For more information about the default root object, see `Creating a Default Root
                  Object
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Origins** *(dict) --*

                  A complex type that contains information about origins for this distribution.

                  - **Quantity** *(integer) --*

                    The number of origins or origin groups for this distribution.

                  - **Items** *(list) --*

                    A complex type that contains origins or origin groups for this distribution.

                    - *(dict) --*

                      A complex type that describes the Amazon S3 bucket, HTTP server (for example,
                      a web server), Amazon MediaStore, or other server from which CloudFront gets
                      your files. This can also be an origin group, if you've created an origin
                      group. You must specify at least one origin or origin group.

                      For the current limit on the number of origins or origin groups that you can
                      specify for a distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Id** *(string) --*

                        A unique identifier for the origin or origin group. The value of ``Id`` must
                        be unique within the distribution.

                        When you specify the value of ``TargetOriginId`` for the default cache
                        behavior or for another cache behavior, you indicate the origin to which you
                        want the cache behavior to route requests by specifying the value of the
                        ``Id`` element for that origin. When a request matches the path pattern for
                        that cache behavior, CloudFront routes the request to the specified origin.
                        For more information, see `Cache Behavior Settings
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **DomainName** *(string) --*

                         **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you
                         want CloudFront to get objects for this origin, for example,
                         ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be
                         configured as a website endpoint, enter the Amazon S3 static website
                         hosting endpoint for the bucket.

                        For more information about specifying this value for different types of
                        origins, see `Origin Domain Name
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                        in the *Amazon CloudFront Developer Guide* .

                        Constraints for Amazon S3 origins:

                        * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                        specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                        * The bucket name must be between 3 and 63 characters long (inclusive).

                        * The bucket name must contain only lowercase characters, numbers, periods,
                        underscores, and dashes.

                        * The bucket name must not contain adjacent periods.

                         **Custom Origins** : The DNS domain name for the HTTP server from which you
                         want CloudFront to get objects for this origin, for example,
                         ``www.example.com`` .

                        Constraints for custom origins:

                        * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9,
                        dot (.), hyphen (-), or underscore (_) characters.

                        * The name cannot exceed 128 characters.

                      - **OriginPath** *(string) --*

                        An optional element that causes CloudFront to request your content from a
                        directory in your Amazon S3 bucket or your custom origin. When you include
                        the ``OriginPath`` element, specify the directory name, beginning with a
                        ``/`` . CloudFront appends the directory name to the value of ``DomainName``
                        , for example, ``example.com/production`` . Do not include a ``/`` at the
                        end of the directory name.

                        For example, suppose you've specified the following values for your
                        distribution:

                        * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                        * ``OriginPath`` : ``/production``

                        * ``CNAME`` : ``example.com``

                        When a user enters ``example.com/index.html`` in a browser, CloudFront sends
                        a request to Amazon S3 for ``myawsbucket/production/index.html`` .

                        When a user enters ``example.com/acme/index.html`` in a browser, CloudFront
                        sends a request to Amazon S3 for ``myawsbucket/production/acme/index.html``
                        .

                      - **CustomHeaders** *(dict) --*

                        A complex type that contains names and values for the custom headers that
                        you want.

                        - **Quantity** *(integer) --*

                          The number of custom headers, if any, for this distribution.

                        - **Items** *(list) --*

                           **Optional** : A list that contains one ``OriginCustomHeader`` element
                           for each custom header that you want CloudFront to forward to the origin.
                           If Quantity is ``0`` , omit ``Items`` .

                          - *(dict) --*

                            A complex type that contains ``HeaderName`` and ``HeaderValue``
                            elements, if any, for this distribution.

                            - **HeaderName** *(string) --*

                              The name of a header that you want CloudFront to forward to your
                              origin. For more information, see `Forwarding Custom Headers to Your
                              Origin (Web Distributions Only)
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                              in the *Amazon CloudFront Developer Guide* .

                            - **HeaderValue** *(string) --*

                              The value for the header that you specified in the ``HeaderName``
                              field.

                      - **S3OriginConfig** *(dict) --*

                        A complex type that contains information about the Amazon S3 origin. If the
                        origin is a custom origin, use the ``CustomOriginConfig`` element instead.

                        - **OriginAccessIdentity** *(string) --*

                          The CloudFront origin access identity to associate with the origin. Use an
                          origin access identity to configure the origin so that viewers can *only*
                          access objects in an Amazon S3 bucket through CloudFront. The format of
                          the value is:

                          origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                          where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                          returned in the ``ID`` element when you created the origin access
                          identity.

                          If you want viewers to be able to access objects using either the
                          CloudFront URL or the Amazon S3 URL, specify an empty
                          ``OriginAccessIdentity`` element.

                          To delete the origin access identity from an existing distribution, update
                          the distribution configuration and include an empty
                          ``OriginAccessIdentity`` element.

                          To replace the origin access identity, update the distribution
                          configuration and specify the new origin access identity.

                          For more information about the origin access identity, see `Serving
                          Private Content through CloudFront
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **CustomOriginConfig** *(dict) --*

                        A complex type that contains information about a custom origin. If the
                        origin is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                        - **HTTPPort** *(integer) --*

                          The HTTP port the custom origin listens on.

                        - **HTTPSPort** *(integer) --*

                          The HTTPS port the custom origin listens on.

                        - **OriginProtocolPolicy** *(string) --*

                          The origin protocol policy to apply to your origin.

                        - **OriginSslProtocols** *(dict) --*

                          The SSL/TLS protocols that you want CloudFront to use when communicating
                          with your origin over HTTPS.

                          - **Quantity** *(integer) --*

                            The number of SSL/TLS protocols that you want to allow CloudFront to use
                            when establishing an HTTPS connection with this origin.

                          - **Items** *(list) --*

                            A list that contains allowed SSL/TLS protocols for this distribution.

                            - *(string) --*

                        - **OriginReadTimeout** *(integer) --*

                          You can create a custom origin read timeout. All timeout units are in
                          seconds. The default origin read timeout is 30 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 4 seconds; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                        - **OriginKeepaliveTimeout** *(integer) --*

                          You can create a custom keep-alive timeout. All timeout units are in
                          seconds. The default keep-alive timeout is 5 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 1 second; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                - **OriginGroups** *(dict) --*

                  A complex type that contains information about origin groups for this
                  distribution.

                  - **Quantity** *(integer) --*

                    The number of origin groups.

                  - **Items** *(list) --*

                    The items (origin groups) in a distribution.

                    - *(dict) --*

                      An origin group includes two origins (a primary origin and a second origin to
                      failover to) and a failover criteria that you specify. You create an origin
                      group to support origin failover in CloudFront. When you create or update a
                      distribution, you can specifiy the origin group instead of a single origin,
                      and CloudFront will failover from the primary origin to the second origin
                      under the failover conditions that you've chosen.

                      - **Id** *(string) --*

                        The origin group's ID.

                      - **FailoverCriteria** *(dict) --*

                        A complex type that contains information about the failover criteria for an
                        origin group.

                        - **StatusCodes** *(dict) --*

                          The status codes that, when returned from the primary origin, will trigger
                          CloudFront to failover to the second origin.

                          - **Quantity** *(integer) --*

                            The number of status codes.

                          - **Items** *(list) --*

                            The items (status codes) for an origin group.

                            - *(integer) --*

                      - **Members** *(dict) --*

                        A complex type that contains information about the origins in an origin
                        group.

                        - **Quantity** *(integer) --*

                          The number of origins in an origin group.

                        - **Items** *(list) --*

                          Items (origins) in an origin group.

                          - *(dict) --*

                            An origin in an origin group.

                            - **OriginId** *(string) --*

                              The ID for an origin in an origin group.

                - **DefaultCacheBehavior** *(dict) --*

                  A complex type that describes the default cache behavior if you don't specify a
                  ``CacheBehavior`` element or if files don't match any of the values of
                  ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default
                  cache behavior.

                  - **TargetOriginId** *(string) --*

                    The value of ``ID`` for the origin that you want CloudFront to route requests to
                    when a request matches the path pattern either for a cache behavior or for the
                    default cache behavior in your distribution.

                  - **ForwardedValues** *(dict) --*

                    A complex type that specifies how CloudFront handles query strings and cookies.

                    - **QueryString** *(boolean) --*

                      Indicates whether you want CloudFront to forward query strings to the origin
                      that is associated with this cache behavior and cache based on the query
                      string parameters. CloudFront behavior depends on the value of ``QueryString``
                      and on the values that you specify for ``QueryStringCacheKeys`` , if any:

                      If you specify true for ``QueryString`` and you don't specify any values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin and caches based on all query string parameters. Depending on how
                      many query string parameters and values you have, this can adversely affect
                      performance because CloudFront must forward more requests to the origin.

                      If you specify true for ``QueryString`` and you specify one or more values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin, but it only caches based on the query string parameters that you
                      specify.

                      If you specify false for ``QueryString`` , CloudFront doesn't forward any
                      query string parameters to the origin, and doesn't cache based on query string
                      parameters.

                      For more information, see `Configuring CloudFront to Cache Based on Query
                      String Parameters
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Cookies** *(dict) --*

                      A complex type that specifies whether you want CloudFront to forward cookies
                      to the origin and, if so, which ones. For more information about forwarding
                      cookies to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Forward** *(string) --*

                        Specifies which cookies to forward to the origin for this cache behavior:
                        all, none, or the list of cookies specified in the ``WhitelistedNames``
                        complex type.

                        Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                        requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                      - **WhitelistedNames** *(dict) --*

                        Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                        complex type that specifies how many different cookies you want CloudFront
                        to forward to the origin for this cache behavior and, if you want to forward
                        selected cookies, the names of those cookies.

                        If you specify ``all`` or none for the value of ``Forward`` , omit
                        ``WhitelistedNames`` . If you change the value of ``Forward`` from
                        ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                        element and its child elements, CloudFront deletes them automatically.

                        For the current limit on the number of cookie names that you can whitelist
                        for each cache behavior, see `CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Quantity** *(integer) --*

                          The number of different cookies that you want CloudFront to forward to the
                          origin for this cache behavior.

                        - **Items** *(list) --*

                          A complex type that contains one ``Name`` element for each cookie that you
                          want CloudFront to forward to the origin for this cache behavior.

                          - *(string) --*

                    - **Headers** *(dict) --*

                      A complex type that specifies the ``Headers`` , if any, that you want
                      CloudFront to forward to the origin for this cache behavior (whitelisted
                      headers). For the headers that you specify, CloudFront also caches separate
                      versions of a specified object that is based on the header values in viewer
                      requests.

                      For more information, see `Caching Content Based on Request Headers
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Quantity** *(integer) --*

                        The number of different headers that you want CloudFront to base caching on
                        for this cache behavior. You can configure each cache behavior in a web
                        distribution to do one of the following:

                        * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                        and ``*`` for ``Name`` .

                        .. warning::

                           CloudFront doesn't cache the objects that are associated with this cache
                           behavior. Instead, CloudFront sends every request to the origin.

                        * **Forward a whitelist of headers you specify** : Specify the number of
                        headers that you want CloudFront to base caching on. Then specify the header
                        names in ``Name`` elements. CloudFront caches your objects based on the
                        values in the specified headers.

                        * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                        omit ``Items`` . In this configuration, CloudFront doesn't cache based on
                        the values in the request headers.

                        Regardless of which option you choose, CloudFront forwards headers to your
                        origin based on whether the origin is an S3 bucket or a custom origin. See
                        the following documentation:

                        * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                        Updates
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                        * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                      - **Items** *(list) --*

                        A list that contains one ``Name`` element for each header that you want
                        CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                        ``0`` , omit ``Items`` .

                        - *(string) --*

                    - **QueryStringCacheKeys** *(dict) --*

                      A complex type that contains information about the query string parameters
                      that you want CloudFront to use for caching for this cache behavior.

                      - **Quantity** *(integer) --*

                        The number of ``whitelisted`` query string parameters for a cache behavior.

                      - **Items** *(list) --*

                        A list that contains the query string parameters that you want CloudFront to
                        use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you
                        can omit ``Items`` .

                        - *(string) --*

                  - **TrustedSigners** *(dict) --*

                    A complex type that specifies the AWS accounts, if any, that you want to allow
                    to create signed URLs for private content.

                    If you want to require signed URLs in requests for objects in the target origin
                    that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                    ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                    For more information, see `Serving Private Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    If you don't want to require signed URLs in requests for objects that match
                    ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                    Omit ``Items`` .

                    To add, change, or remove one or more trusted signers, change ``Enabled`` to
                    ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                    specify all of the trusted signers that you want to include in the updated
                    distribution.

                    - **Enabled** *(boolean) --*

                      Specifies whether you want to require viewers to use signed URLs to access the
                      files specified by ``PathPattern`` and ``TargetOriginId`` .

                    - **Quantity** *(integer) --*

                      The number of trusted signers for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains trusted signers for this cache
                       behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(string) --*

                  - **ViewerProtocolPolicy** *(string) --*

                    The protocol that viewers can use to access the files in the origin specified by
                    ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                    You can specify the following options:

                    * ``allow-all`` : Viewers can use HTTP or HTTPS.

                    * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                    returns an HTTP status code of 301 (Moved Permanently) to the viewer along with
                    the HTTPS URL. The viewer then resubmits the request using the new URL.

                    * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                    status code of 403 (Forbidden).

                    For more information about requiring the HTTPS protocol, see `Using an HTTPS
                    Connection to Access Your Objects
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    .. note::

                      The only way to guarantee that viewers retrieve an object that was fetched
                      from the origin using HTTPS is never to use any other protocol to fetch the
                      object. If you have recently changed from HTTP to HTTPS, we recommend that you
                      clear your objects' cache because cached objects are protocol agnostic. That
                      means that an edge location will return an object from the cache regardless of
                      whether the current request protocol matches the protocol used previously. For
                      more information, see `Managing How Long Content Stays in an Edge Cache
                      (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **MinTTL** *(integer) --*

                    The minimum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. For more information, see `Managing How Long
                    Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                    headers to your origin (under ``Headers`` , if you specify ``1`` for
                    ``Quantity`` and ``*`` for ``Name`` ).

                  - **AllowedMethods** *(dict) --*

                    A complex type that controls which HTTP methods CloudFront processes and
                    forwards to your Amazon S3 bucket or your custom origin. There are three
                    choices:

                    * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                    * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                    requests.

                    If you pick the third choice, you may need to restrict access to your Amazon S3
                    bucket or to your custom origin so users can't perform operations that you don't
                    want them to. For example, you might not want users to have permissions to
                    delete objects from your origin.

                    - **Quantity** *(integer) --*

                      The number of HTTP methods that you want CloudFront to forward to your origin.
                      Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                      ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                      PATCH, POST`` , and ``DELETE`` requests).

                    - **Items** *(list) --*

                      A complex type that contains the HTTP methods that you want CloudFront to
                      process and forward to your origin.

                      - *(string) --*

                    - **CachedMethods** *(dict) --*

                      A complex type that controls whether CloudFront caches the response to
                      requests using the specified HTTP methods. There are two choices:

                      * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                      * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                      requests.

                      If you pick the second choice for your Amazon S3 Origin, you may need to
                      forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                      Origin headers for the responses to be cached correctly.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods for which you want CloudFront to cache responses.
                        Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                        requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                        ``OPTIONS`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        cache responses to.

                        - *(string) --*

                  - **SmoothStreaming** *(boolean) --*

                    Indicates whether you want to distribute media files in the Microsoft Smooth
                    Streaming format using the origin that is associated with this cache behavior.
                    If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                    for ``SmoothStreaming`` , you can still distribute other content using this
                    cache behavior if the content matches the value of ``PathPattern`` .

                  - **DefaultTTL** *(integer) --*

                    The default amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                    ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                    see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MaxTTL** *(integer) --*

                    The maximum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                    s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                    Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Compress** *(boolean) --*

                    Whether you want CloudFront to automatically compress certain files for this
                    cache behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                    information, see `Serving Compressed Files
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **LambdaFunctionAssociations** *(dict) --*

                    A complex type that contains zero or more Lambda function associations for a
                    cache behavior.

                    - **Quantity** *(integer) --*

                      The number of Lambda function associations for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                       items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                       ``Items`` .

                      - *(dict) --*

                        A complex type that contains a Lambda function association.

                        - **LambdaFunctionARN** *(string) --*

                          The ARN of the Lambda function. You must specify the ARN of a function
                          version; you can't specify a Lambda alias or $LATEST.

                        - **EventType** *(string) --*

                          Specifies the event type that triggers a Lambda function invocation. You
                          can specify the following values:

                          * ``viewer-request`` : The function executes when CloudFront receives a
                          request from a viewer and before it checks to see whether the requested
                          object is in the edge cache.

                          * ``origin-request`` : The function executes only when CloudFront forwards
                          a request to your origin. When the requested object is in the edge cache,
                          the function doesn't execute.

                          * ``origin-response`` : The function executes after CloudFront receives a
                          response from the origin and before it caches the object in the response.
                          When the requested object is in the edge cache, the function doesn't
                          execute.

                          * ``viewer-response`` : The function executes before CloudFront returns
                          the requested object to the viewer. The function executes regardless of
                          whether the object was already in the edge cache. If the origin returns an
                          HTTP status code other than HTTP 200 (OK), the function doesn't execute.

                        - **IncludeBody** *(boolean) --*

                          A flag that allows a Lambda function to have read access to the body
                          content. For more information, see `Accessing the Request Body by Choosing
                          the Include Body Option
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                          in the Amazon CloudFront Developer Guide.

                  - **FieldLevelEncryptionId** *(string) --*

                    The value of ``ID`` for the field-level encryption configuration that you want
                    CloudFront to use for encrypting specific fields of data for a cache behavior or
                    for the default cache behavior in your distribution.

                - **CacheBehaviors** *(dict) --*

                  A complex type that contains zero or more ``CacheBehavior`` elements.

                  - **Quantity** *(integer) --*

                    The number of cache behaviors for this distribution.

                  - **Items** *(list) --*

                    Optional: A complex type that contains cache behaviors for this distribution. If
                    ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that describes how CloudFront processes requests.

                      You must create at least as many cache behaviors (including the default cache
                      behavior) as you have origins if you want CloudFront to distribute objects
                      from all of the origins. Each cache behavior specifies the one origin from
                      which you want CloudFront to get objects. If you have two origins and only the
                      default cache behavior, the default cache behavior will cause CloudFront to
                      get objects from one of the origins, but the other origin is never used.

                      For the current limit on the number of cache behaviors that you can add to a
                      distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      If you don't want to specify any cache behaviors, include only an empty
                      ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element,
                      or CloudFront returns a ``MalformedXML`` error.

                      To delete all cache behaviors in an existing distribution, update the
                      distribution configuration and include only an empty ``CacheBehaviors``
                      element.

                      To add, change, or remove one or more cache behaviors, update the distribution
                      configuration and specify all of the cache behaviors that you want to include
                      in the updated distribution.

                      For more information about cache behaviors, see `Cache Behaviors
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **PathPattern** *(string) --*

                        The pattern (for example, ``images/*.jpg`` ) that specifies which requests
                        to apply the behavior to. When CloudFront receives a viewer request, the
                        requested path is compared with path patterns in the order in which cache
                        behaviors are listed in the distribution.

                        .. note::

                          You can optionally include a slash (``/`` ) at the beginning of the path
                          pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same
                          with or without the leading ``/`` .

                        The path pattern for the default cache behavior is ``*`` and cannot be
                        changed. If the request for an object does not match the path pattern for
                        any cache behaviors, CloudFront applies the behavior in the default cache
                        behavior.

                        For more information, see `Path Pattern
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **TargetOriginId** *(string) --*

                        The value of ``ID`` for the origin that you want CloudFront to route
                        requests to when a request matches the path pattern either for a cache
                        behavior or for the default cache behavior in your distribution.

                      - **ForwardedValues** *(dict) --*

                        A complex type that specifies how CloudFront handles query strings and
                        cookies.

                        - **QueryString** *(boolean) --*

                          Indicates whether you want CloudFront to forward query strings to the
                          origin that is associated with this cache behavior and cache based on the
                          query string parameters. CloudFront behavior depends on the value of
                          ``QueryString`` and on the values that you specify for
                          ``QueryStringCacheKeys`` , if any:

                          If you specify true for ``QueryString`` and you don't specify any values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin and caches based on all query string parameters.
                          Depending on how many query string parameters and values you have, this
                          can adversely affect performance because CloudFront must forward more
                          requests to the origin.

                          If you specify true for ``QueryString`` and you specify one or more values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin, but it only caches based on the query string
                          parameters that you specify.

                          If you specify false for ``QueryString`` , CloudFront doesn't forward any
                          query string parameters to the origin, and doesn't cache based on query
                          string parameters.

                          For more information, see `Configuring CloudFront to Cache Based on Query
                          String Parameters
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **Cookies** *(dict) --*

                          A complex type that specifies whether you want CloudFront to forward
                          cookies to the origin and, if so, which ones. For more information about
                          forwarding cookies to the origin, see `How CloudFront Forwards, Caches,
                          and Logs Cookies
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Forward** *(string) --*

                            Specifies which cookies to forward to the origin for this cache
                            behavior: all, none, or the list of cookies specified in the
                            ``WhitelistedNames`` complex type.

                            Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                            requests to an Amazon S3 origin, specify none for the ``Forward``
                            element.

                          - **WhitelistedNames** *(dict) --*

                            Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                            complex type that specifies how many different cookies you want
                            CloudFront to forward to the origin for this cache behavior and, if you
                            want to forward selected cookies, the names of those cookies.

                            If you specify ``all`` or none for the value of ``Forward`` , omit
                            ``WhitelistedNames`` . If you change the value of ``Forward`` from
                            ``whitelist`` to all or none and you don't delete the
                            ``WhitelistedNames`` element and its child elements, CloudFront deletes
                            them automatically.

                            For the current limit on the number of cookie names that you can
                            whitelist for each cache behavior, see `CloudFront Limits
                            <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                            in the *AWS General Reference* .

                            - **Quantity** *(integer) --*

                              The number of different cookies that you want CloudFront to forward to
                              the origin for this cache behavior.

                            - **Items** *(list) --*

                              A complex type that contains one ``Name`` element for each cookie that
                              you want CloudFront to forward to the origin for this cache behavior.

                              - *(string) --*

                        - **Headers** *(dict) --*

                          A complex type that specifies the ``Headers`` , if any, that you want
                          CloudFront to forward to the origin for this cache behavior (whitelisted
                          headers). For the headers that you specify, CloudFront also caches
                          separate versions of a specified object that is based on the header values
                          in viewer requests.

                          For more information, see `Caching Content Based on Request Headers
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Quantity** *(integer) --*

                            The number of different headers that you want CloudFront to base caching
                            on for this cache behavior. You can configure each cache behavior in a
                            web distribution to do one of the following:

                            * **Forward all headers to your origin** : Specify ``1`` for
                            ``Quantity`` and ``*`` for ``Name`` .

                            .. warning::

                               CloudFront doesn't cache the objects that are associated with this
                               cache behavior. Instead, CloudFront sends every request to the
                               origin.

                            * **Forward a whitelist of headers you specify** : Specify the number of
                            headers that you want CloudFront to base caching on. Then specify the
                            header names in ``Name`` elements. CloudFront caches your objects based
                            on the values in the specified headers.

                            * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                            and omit ``Items`` . In this configuration, CloudFront doesn't cache
                            based on the values in the request headers.

                            Regardless of which option you choose, CloudFront forwards headers to
                            your origin based on whether the origin is an S3 bucket or a custom
                            origin. See the following documentation:

                            * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                            Updates
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                            * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                          - **Items** *(list) --*

                            A list that contains one ``Name`` element for each header that you want
                            CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                            ``0`` , omit ``Items`` .

                            - *(string) --*

                        - **QueryStringCacheKeys** *(dict) --*

                          A complex type that contains information about the query string parameters
                          that you want CloudFront to use for caching for this cache behavior.

                          - **Quantity** *(integer) --*

                            The number of ``whitelisted`` query string parameters for a cache
                            behavior.

                          - **Items** *(list) --*

                            A list that contains the query string parameters that you want
                            CloudFront to use as a basis for caching for a cache behavior. If
                            ``Quantity`` is 0, you can omit ``Items`` .

                            - *(string) --*

                      - **TrustedSigners** *(dict) --*

                        A complex type that specifies the AWS accounts, if any, that you want to
                        allow to create signed URLs for private content.

                        If you want to require signed URLs in requests for objects in the target
                        origin that match the ``PathPattern`` for this cache behavior, specify
                        ``true`` for ``Enabled`` , and specify the applicable values for
                        ``Quantity`` and ``Items`` . For more information, see `Serving Private
                        Content through CloudFront
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        If you don't want to require signed URLs in requests for objects that match
                        ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for
                        ``Quantity`` . Omit ``Items`` .

                        To add, change, or remove one or more trusted signers, change ``Enabled`` to
                        ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                        and specify all of the trusted signers that you want to include in the
                        updated distribution.

                        - **Enabled** *(boolean) --*

                          Specifies whether you want to require viewers to use signed URLs to access
                          the files specified by ``PathPattern`` and ``TargetOriginId`` .

                        - **Quantity** *(integer) --*

                          The number of trusted signers for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains trusted signers for this
                           cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                          - *(string) --*

                      - **ViewerProtocolPolicy** *(string) --*

                        The protocol that viewers can use to access the files in the origin
                        specified by ``TargetOriginId`` when a request matches the path pattern in
                        ``PathPattern`` . You can specify the following options:

                        * ``allow-all`` : Viewers can use HTTP or HTTPS.

                        * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                        returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                        with the HTTPS URL. The viewer then resubmits the request using the new URL.

                        * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                        HTTP status code of 403 (Forbidden).

                        For more information about requiring the HTTPS protocol, see `Using an HTTPS
                        Connection to Access Your Objects
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        .. note::

                          The only way to guarantee that viewers retrieve an object that was fetched
                          from the origin using HTTPS is never to use any other protocol to fetch
                          the object. If you have recently changed from HTTP to HTTPS, we recommend
                          that you clear your objects' cache because cached objects are protocol
                          agnostic. That means that an edge location will return an object from the
                          cache regardless of whether the current request protocol matches the
                          protocol used previously. For more information, see `Managing How Long
                          Content Stays in an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **MinTTL** *(integer) --*

                        The minimum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. For more information, see
                        `Managing How Long Content Stays in an Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                        all headers to your origin (under ``Headers`` , if you specify ``1`` for
                        ``Quantity`` and ``*`` for ``Name`` ).

                      - **AllowedMethods** *(dict) --*

                        A complex type that controls which HTTP methods CloudFront processes and
                        forwards to your Amazon S3 bucket or your custom origin. There are three
                        choices:

                        * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                        * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                        * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                        ``DELETE`` requests.

                        If you pick the third choice, you may need to restrict access to your Amazon
                        S3 bucket or to your custom origin so users can't perform operations that
                        you don't want them to. For example, you might not want users to have
                        permissions to delete objects from your origin.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods that you want CloudFront to forward to your
                          origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                          ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                          OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          process and forward to your origin.

                          - *(string) --*

                        - **CachedMethods** *(dict) --*

                          A complex type that controls whether CloudFront caches the response to
                          requests using the specified HTTP methods. There are two choices:

                          * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                          * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                          requests.

                          If you pick the second choice for your Amazon S3 Origin, you may need to
                          forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                          Origin headers for the responses to be cached correctly.

                          - **Quantity** *(integer) --*

                            The number of HTTP methods for which you want CloudFront to cache
                            responses. Valid values are ``2`` (for caching responses to ``GET`` and
                            ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` ,
                            ``HEAD`` , and ``OPTIONS`` requests).

                          - **Items** *(list) --*

                            A complex type that contains the HTTP methods that you want CloudFront
                            to cache responses to.

                            - *(string) --*

                      - **SmoothStreaming** *(boolean) --*

                        Indicates whether you want to distribute media files in the Microsoft Smooth
                        Streaming format using the origin that is associated with this cache
                        behavior. If so, specify ``true`` ; if not, specify ``false`` . If you
                        specify ``true`` for ``SmoothStreaming`` , you can still distribute other
                        content using this cache behavior if the content matches the value of
                        ``PathPattern`` .

                      - **DefaultTTL** *(integer) --*

                        The default amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin does not add HTTP headers such as
                        ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to
                        objects. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **MaxTTL** *(integer) --*

                        The maximum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin adds HTTP headers such as ``Cache-Control
                        max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to objects. For
                        more information, see `Managing How Long Content Stays in an Edge Cache
                        (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Compress** *(boolean) --*

                        Whether you want CloudFront to automatically compress certain files for this
                        cache behavior. If so, specify true; if not, specify false. For more
                        information, see `Serving Compressed Files
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **LambdaFunctionAssociations** *(dict) --*

                        A complex type that contains zero or more Lambda function associations for a
                        cache behavior.

                        - **Quantity** *(integer) --*

                          The number of Lambda function associations for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                           items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                           ``Items`` .

                          - *(dict) --*

                            A complex type that contains a Lambda function association.

                            - **LambdaFunctionARN** *(string) --*

                              The ARN of the Lambda function. You must specify the ARN of a function
                              version; you can't specify a Lambda alias or $LATEST.

                            - **EventType** *(string) --*

                              Specifies the event type that triggers a Lambda function invocation.
                              You can specify the following values:

                              * ``viewer-request`` : The function executes when CloudFront receives
                              a request from a viewer and before it checks to see whether the
                              requested object is in the edge cache.

                              * ``origin-request`` : The function executes only when CloudFront
                              forwards a request to your origin. When the requested object is in the
                              edge cache, the function doesn't execute.

                              * ``origin-response`` : The function executes after CloudFront
                              receives a response from the origin and before it caches the object in
                              the response. When the requested object is in the edge cache, the
                              function doesn't execute.

                              * ``viewer-response`` : The function executes before CloudFront
                              returns the requested object to the viewer. The function executes
                              regardless of whether the object was already in the edge cache. If the
                              origin returns an HTTP status code other than HTTP 200 (OK), the
                              function doesn't execute.

                            - **IncludeBody** *(boolean) --*

                              A flag that allows a Lambda function to have read access to the body
                              content. For more information, see `Accessing the Request Body by
                              Choosing the Include Body Option
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                              in the Amazon CloudFront Developer Guide.

                      - **FieldLevelEncryptionId** *(string) --*

                        The value of ``ID`` for the field-level encryption configuration that you
                        want CloudFront to use for encrypting specific fields of data for a cache
                        behavior or for the default cache behavior in your distribution.

                - **CustomErrorResponses** *(dict) --*

                  A complex type that controls the following:

                  * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                  custom error messages before returning the response to the viewer.

                  * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                  For more information about custom error pages, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --*

                    The number of HTTP status codes for which you want to specify a custom error
                    page and/or a caching duration. If ``Quantity`` is ``0`` , you can omit
                    ``Items`` .

                  - **Items** *(list) --*

                    A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                    status code for which you want to specify a custom error page and/or a caching
                    duration.

                    - *(dict) --*

                      A complex type that controls:

                      * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                      custom error messages before returning the response to the viewer.

                      * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                      For more information about custom error pages, see `Customizing Error
                      Responses
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **ErrorCode** *(integer) --*

                        The HTTP status code for which you want to specify a custom error page
                        and/or a caching duration.

                      - **ResponsePagePath** *(string) --*

                        The path to the custom error page that you want CloudFront to return to a
                        viewer when your origin returns the HTTP status code specified by
                        ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you
                        want to store your objects and your custom error pages in different
                        locations, your distribution must include a cache behavior for which the
                        following is true:

                        * The value of ``PathPattern`` matches the path to your custom error
                        messages. For example, suppose you saved custom error pages for 4xx errors
                        in an Amazon S3 bucket in a directory named ``/4xx-errors`` . Your
                        distribution must include a cache behavior for which the path pattern routes
                        requests for your custom error pages to that location, for example,
                        ``/4xx-errors/*`` .

                        * The value of ``TargetOriginId`` specifies the value of the ``ID`` element
                        for the origin that contains your custom error pages.

                        If you specify a value for ``ResponsePagePath`` , you must also specify a
                        value for ``ResponseCode`` . If you don't want to specify a value, include
                        an empty element, ``<ResponsePagePath>`` , in the XML document.

                        We recommend that you store custom error pages in an Amazon S3 bucket. If
                        you store custom error pages on an HTTP server and the server starts to
                        return 5xx errors, CloudFront can't get the files that you want to return to
                        viewers because the origin server is unavailable.

                      - **ResponseCode** *(string) --*

                        The HTTP status code that you want CloudFront to return to the viewer along
                        with the custom error page. There are a variety of reasons that you might
                        want CloudFront to return a status code different from the status code that
                        your origin returned to CloudFront, for example:

                        * Some Internet devices (some firewalls and corporate proxies, for example)
                        intercept HTTP 4xx and 5xx and prevent the response from being returned to
                        the viewer. If you substitute ``200`` , the response typically won't be
                        intercepted.

                        * If you don't care about distinguishing among different client errors or
                        server errors, you can specify ``400`` or ``500`` as the ``ResponseCode``
                        for all 4xx or 5xx errors.

                        * You might want to return a ``200`` status code (OK) and static website so
                        your customers don't know that your website is down.

                        If you specify a value for ``ResponseCode`` , you must also specify a value
                        for ``ResponsePagePath`` . If you don't want to specify a value, include an
                        empty element, ``<ResponseCode>`` , in the XML document.

                      - **ErrorCachingMinTTL** *(integer) --*

                        The minimum amount of time, in seconds, that you want CloudFront to cache
                        the HTTP status code specified in ``ErrorCode`` . When this time period has
                        elapsed, CloudFront queries your origin to see whether the problem that
                        caused the error has been resolved and the requested object is now
                        available.

                        If you don't want to specify a value, include an empty element,
                        ``<ErrorCachingMinTTL>`` , in the XML document.

                        For more information, see `Customizing Error Responses
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                - **Comment** *(string) --*

                  Any comments you want to include about the distribution.

                  If you don't want to specify a comment, include an empty ``Comment`` element.

                  To delete an existing comment, update the distribution configuration and include
                  an empty ``Comment`` element.

                  To add or change a comment, update the distribution configuration and specify the
                  new comment.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the distribution.

                  For more information about logging, see `Access Logs
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a distribution or if
                    you want to disable logging for an existing distribution, specify ``false`` for
                    ``Enabled`` , and specify empty ``Bucket`` and ``Prefix`` elements. If you
                    specify ``false`` for ``Enabled`` but you specify values for ``Bucket`` ,
                    ``prefix`` , and ``IncludeCookies`` , the values are automatically deleted.

                  - **IncludeCookies** *(boolean) --*

                    Specifies whether you want CloudFront to include cookies in access logs, specify
                    ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs,
                    CloudFront logs all cookies regardless of how you configure the cache behaviors
                    for this distribution. If you don't want to include cookies when you create a
                    distribution or if you want to disable include cookies for an existing
                    distribution, specify ``false`` for ``IncludeCookies`` .

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    ``filenames`` for this distribution, for example, ``myprefix/`` . If you want to
                    enable logging, but you don't want to specify a prefix, you still must include
                    an empty ``Prefix`` element in the ``Logging`` element.

                - **PriceClass** *(string) --*

                  The price class that corresponds with the maximum price that you want to pay for
                  CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to
                  requests for your objects from all CloudFront edge locations.

                  If you specify a price class other than ``PriceClass_All`` , CloudFront serves
                  your objects from the CloudFront edge location that has the lowest latency among
                  the edge locations in your price class. Viewers who are in or near regions that
                  are excluded from your specified price class may encounter slower performance.

                  For more information about price classes, see `Choosing the Price Class for a
                  CloudFront Distribution
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
                  in the *Amazon CloudFront Developer Guide* . For information about CloudFront
                  pricing, including how price classes (such as Price Class 100) map to CloudFront
                  regions, see `Amazon CloudFront Pricing
                  <http://aws.amazon.com/cloudfront/pricing/>`__ . For price class information,
                  scroll down to see the table at the bottom of the page.

                - **Enabled** *(boolean) --*

                  From this field, you can enable or disable the selected distribution.

                - **ViewerCertificate** *(dict) --*

                  A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                  request your objects, whether you're using an alternate domain name with HTTPS,
                  and if so, if you're using AWS Certificate Manager (ACM) or a third-party
                  certificate authority.

                  - **CloudFrontDefaultCertificate** *(boolean) --*

                    If you're using the CloudFront domain name for your distribution, such as
                    ``d111111abcdef8.cloudfront.net`` , specify the following value:

                    * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                  - **IAMCertificateId** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if you purchased your certificate from a
                    third-party certificate authority:

                    * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                    certificate ID* `` is the ID that IAM returned when you added the certificate to
                    the IAM certificate store.

                    If you specify ``IAMCertificateId`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **ACMCertificateArn** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if ACM provided your certificate:

                    * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                    where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                    certificate that you want to use for this distribution.

                    If you specify ``ACMCertificateArn`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **SSLSupportMethod** *(string) --*

                    If you specify a value for `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                    or for `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                    , you must also specify how you want CloudFront to serve HTTPS requests: using a
                    method that works for browsers and clients released after 2010 or one that works
                    for all clients.

                    * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                    support Server Name Indication (SNI). All modern browsers support SNI, but there
                    are a few that don't. For a current list of the browsers that support SNI, see
                    the `Wikipedia entry Server Name Indication
                    <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about
                    options to explore if you have users with browsers that don't include SNI
                    support, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                    respond to HTTPS requests from any viewer. However, there are additional monthly
                    charges. For details, including specific pricing information, see `Custom SSL
                    options for Amazon CloudFront
                    <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                    site.

                    Don't specify a value for ``SSLSupportMethod`` if you specified
                    ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                    For more information, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MinimumProtocolVersion** *(string) --*

                    Specify the security policy that you want CloudFront to use for HTTPS
                    connections. A security policy determines two settings:

                    * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

                    * The cipher that CloudFront uses to encrypt the content that it returns to
                    viewers

                    .. note::

                      On the CloudFront console, this setting is called **Security policy** .

                    We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                    browsers or devices that do not support TLSv1.1 or later.

                    When both of the following are true, you must specify ``TLSv1`` or later for the
                    security policy:

                    * You're using a custom certificate: you specified a value for
                    ``ACMCertificateArn`` or for ``IAMCertificateId``

                    * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                    If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                    automatically sets the security policy to ``TLSv1`` regardless of the value that
                    you specify for ``MinimumProtocolVersion`` .

                    For information about the relationship between the security policy that you
                    choose and the protocols and ciphers that CloudFront uses to communicate with
                    viewers, see `Supported SSL/TLS Protocols and Ciphers for Communication Between
                    Viewers and CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Certificate** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                  - **CertificateSource** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                - **Restrictions** *(dict) --*

                  A complex type that identifies ways in which you want to restrict distribution of
                  your content.

                  - **GeoRestriction** *(dict) --*

                    A complex type that controls the countries in which your content is distributed.
                    CloudFront determines the location of your users using ``MaxMind`` GeoIP
                    databases.

                    - **RestrictionType** *(string) --*

                      The method that you want to use to restrict distribution of your content by
                      country:

                      * ``none`` : No geo restriction is enabled, meaning access to content is not
                      restricted by client geo location.

                      * ``blacklist`` : The ``Location`` elements specify the countries in which you
                      don't want CloudFront to distribute your content.

                      * ``whitelist`` : The ``Location`` elements specify the countries in which you
                      want CloudFront to distribute your content.

                    - **Quantity** *(integer) --*

                      When geo restriction is ``enabled`` , this is the number of countries in your
                      ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled,
                      ``Quantity`` is ``0`` , and you can omit ``Items`` .

                    - **Items** *(list) --*

                      A complex type that contains a ``Location`` element for each country in which
                      you want CloudFront either to distribute your content (``whitelist`` ) or not
                      distribute your content (``blacklist`` ).

                      The ``Location`` element is a two-letter, uppercase country code for a country
                      that you want to include in your ``blacklist`` or ``whitelist`` . Include one
                      ``Location`` element for each country.

                      CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the
                      current list of countries and the corresponding codes, see ``ISO
                      3166-1-alpha-2`` code on the *International Organization for Standardization*
                      website. You can also refer to the country list on the CloudFront console,
                      which includes both country names and codes.

                      - *(string) --*

                - **WebACLId** *(string) --*

                  A unique identifier that specifies the AWS WAF web ACL, if any, to associate with
                  this distribution.

                  AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS
                  requests that are forwarded to CloudFront, and lets you control access to your
                  content. Based on conditions that you specify, such as the IP addresses that
                  requests originate from or the values of query strings, CloudFront responds to
                  requests either with the requested content or with an HTTP 403 status code
                  (Forbidden). You can also configure CloudFront to return a custom error page when
                  a request is blocked. For more information about AWS WAF, see the `AWS WAF
                  Developer Guide
                  <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

                - **HttpVersion** *(string) --*

                  (Optional) Specify the maximum HTTP version that you want viewers to use to
                  communicate with CloudFront. The default value for new web distributions is http2.
                  Viewers that don't support HTTP/2 automatically use an earlier HTTP version.

                  For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later,
                  and must support Server Name Identification (SNI).

                  In general, configuring CloudFront to communicate with viewers using HTTP/2
                  reduces latency. You can improve performance by optimizing for HTTP/2. For more
                  information, do an Internet search for "http/2 optimization."

                - **IsIPV6Enabled** *(boolean) --*

                  If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for
                  your distribution, specify ``true`` . If you specify ``false`` , CloudFront
                  responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no
                  IP addresses. This allows viewers to submit a second request, for an IPv4 address
                  for your distribution.

                  In general, you should enable IPv6 if you have users on IPv6 networks who want to
                  access your content. However, if you're using signed URLs or signed cookies to
                  restrict access to your content, and if you're using a custom policy that includes
                  the ``IpAddress`` parameter to restrict the IP addresses that can access your
                  content, don't enable IPv6. If you want to restrict access to some content by IP
                  address and not restrict access to other content (or restrict access but not by IP
                  address), you can create two distributions. For more information, see `Creating a
                  Signed URL Using a Custom Policy
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you're using an Amazon Route 53 alias resource record set to route traffic to
                  your CloudFront distribution, you need to create a second alias resource record
                  set when both of the following are true:

                  * You enable IPv6 for the distribution

                  * You're using alternate domain names in the URLs for your objects

                  For more information, see `Routing Traffic to an Amazon CloudFront Web
                  Distribution by Using Your Domain Name
                  <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
                  in the *Amazon Route 53 Developer Guide* .

                  If you created a CNAME resource record set, either with Amazon Route 53 or with
                  another DNS service, you don't need to make any changes. A CNAME record will route
                  traffic to your distribution regardless of the IP address format of the viewer
                  request.

              - **AliasICPRecordals** *(list) --*

                AWS services in China customers must file for an Internet Content Provider (ICP)
                recordal if they want to serve content publicly on an alternate domain name, also
                known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                ICP recordal status for CNAMEs associated with distributions.

                For more information about ICP recordals, see `Signup, Accounts, and Credentials
                <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                in *Getting Started with AWS services in China* .

                - *(dict) --*

                  AWS services in China customers must file for an Internet Content Provider (ICP)
                  recordal if they want to serve content publicly on an alternate domain name, also
                  known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                  ICP recordal status for CNAMEs associated with distributions. The status is
                  returned in the CloudFront response; you can't configure it yourself.

                  For more information about ICP recordals, see `Signup, Accounts, and Credentials
                  <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                  in *Getting Started with AWS services in China* .

                  - **CNAME** *(string) --*

                    A domain name associated with a distribution.

                  - **ICPRecordalStatus** *(string) --*

                    The Internet Content Provider (ICP) recordal status for a CNAME. The
                    ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside
                    of China.

                    The status values returned are the following:

                    * **APPROVED** indicates that the associated CNAME has a valid ICP recordal
                    number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can
                    correspond to different ICP recordals. To be marked as APPROVED, that is, valid
                    to use with China region, a CNAME must have one ICP recordal number associated
                    with it.

                    * **SUSPENDED** indicates that the associated CNAME does not have a valid ICP
                    recordal number.

                    * **PENDING** indicates that at least one CNAME associated with the distribution
                    does not have a valid ICP recordal number.

            - **Location** *(string) --*

              The fully qualified URI of the new distribution resource just created. For example:
              ``https://cloudfront.amazonaws.com/2010-11-01/distribution/EDFDVBD632BHDS5`` .

            - **ETag** *(string) --*

              The current version of the distribution created.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_field_level_encryption_config(
        self,
        FieldLevelEncryptionConfig: ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
    ) -> ClientCreateFieldLevelEncryptionConfigResponseTypeDef:
        """
        Create a new field-level encryption configuration.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateFieldLevelEncryptionConfig>`_

        **Request Syntax**
        ::

          response = client.create_field_level_encryption_config(
              FieldLevelEncryptionConfig={
                  'CallerReference': 'string',
                  'Comment': 'string',
                  'QueryArgProfileConfig': {
                      'ForwardWhenQueryArgProfileIsUnknown': True|False,
                      'QueryArgProfiles': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'QueryArg': 'string',
                                  'ProfileId': 'string'
                              },
                          ]
                      }
                  },
                  'ContentTypeProfileConfig': {
                      'ForwardWhenContentTypeIsUnknown': True|False,
                      'ContentTypeProfiles': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'Format': 'URLEncoded',
                                  'ProfileId': 'string',
                                  'ContentType': 'string'
                              },
                          ]
                      }
                  }
              }
          )
        :type FieldLevelEncryptionConfig: dict
        :param FieldLevelEncryptionConfig: **[REQUIRED]**

          The request to create a new field-level encryption configuration.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique number that ensures the request can't be replayed.

          - **Comment** *(string) --*

            An optional comment about the configuration.

          - **QueryArgProfileConfig** *(dict) --*

            A complex data type that specifies when to forward content if a profile isn't found and
            the profile that can be provided as a query argument in a request.

            - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --* **[REQUIRED]**

              Flag to set if you want a request to be forwarded to the origin even if the profile
              specified by the field-level encryption query argument, fle-profile, is unknown.

            - **QueryArgProfiles** *(dict) --*

              Profiles specified for query argument-profile mapping for field-level encryption.

              - **Quantity** *(integer) --* **[REQUIRED]**

                Number of profiles for query argument-profile mapping for field-level encryption.

              - **Items** *(list) --*

                Number of items for query argument-profile mapping for field-level encryption.

                - *(dict) --*

                  Query argument-profile mapping for field-level encryption.

                  - **QueryArg** *(string) --* **[REQUIRED]**

                    Query argument for field-level encryption query argument-profile mapping.

                  - **ProfileId** *(string) --* **[REQUIRED]**

                    ID of profile to use for field-level encryption query argument-profile mapping

          - **ContentTypeProfileConfig** *(dict) --*

            A complex data type that specifies when to forward content if a content type isn't
            recognized and profiles to use as by default in a request if a query argument doesn't
            specify a profile to use.

            - **ForwardWhenContentTypeIsUnknown** *(boolean) --* **[REQUIRED]**

              The setting in a field-level encryption content type-profile mapping that specifies
              what to do when an unknown content type is provided for the profile. If true, content
              is forwarded without being encrypted when the content type is unknown. If false (the
              default), an error is returned when the content type is unknown.

            - **ContentTypeProfiles** *(dict) --*

              The configuration for a field-level encryption content type-profile.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of field-level encryption content type-profile mappings.

              - **Items** *(list) --*

                Items in a field-level encryption content type-profile mapping.

                - *(dict) --*

                  A field-level encryption content type profile.

                  - **Format** *(string) --* **[REQUIRED]**

                    The format for a field-level encryption content type-profile mapping.

                  - **ProfileId** *(string) --*

                    The profile ID for a field-level encryption content type-profile mapping.

                  - **ContentType** *(string) --* **[REQUIRED]**

                    The content type for a field-level encryption content type-profile mapping.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryption': {
                    'Id': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'FieldLevelEncryptionConfig': {
                        'CallerReference': 'string',
                        'Comment': 'string',
                        'QueryArgProfileConfig': {
                            'ForwardWhenQueryArgProfileIsUnknown': True|False,
                            'QueryArgProfiles': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'QueryArg': 'string',
                                        'ProfileId': 'string'
                                    },
                                ]
                            }
                        },
                        'ContentTypeProfileConfig': {
                            'ForwardWhenContentTypeIsUnknown': True|False,
                            'ContentTypeProfiles': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Format': 'URLEncoded',
                                        'ProfileId': 'string',
                                        'ContentType': 'string'
                                    },
                                ]
                            }
                        }
                    }
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryption** *(dict) --*

              Returned when you create a new field-level encryption configuration.

              - **Id** *(string) --*

                The configuration ID for a field-level encryption configuration which includes a set
                of profiles that specify certain selected data fields to be encrypted by specific
                public keys.

              - **LastModifiedTime** *(datetime) --*

                The last time the field-level encryption configuration was changed.

              - **FieldLevelEncryptionConfig** *(dict) --*

                A complex data type that includes the profile configurations specified for
                field-level encryption.

                - **CallerReference** *(string) --*

                  A unique number that ensures the request can't be replayed.

                - **Comment** *(string) --*

                  An optional comment about the configuration.

                - **QueryArgProfileConfig** *(dict) --*

                  A complex data type that specifies when to forward content if a profile isn't
                  found and the profile that can be provided as a query argument in a request.

                  - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --*

                    Flag to set if you want a request to be forwarded to the origin even if the
                    profile specified by the field-level encryption query argument, fle-profile, is
                    unknown.

                  - **QueryArgProfiles** *(dict) --*

                    Profiles specified for query argument-profile mapping for field-level
                    encryption.

                    - **Quantity** *(integer) --*

                      Number of profiles for query argument-profile mapping for field-level
                      encryption.

                    - **Items** *(list) --*

                      Number of items for query argument-profile mapping for field-level encryption.

                      - *(dict) --*

                        Query argument-profile mapping for field-level encryption.

                        - **QueryArg** *(string) --*

                          Query argument for field-level encryption query argument-profile mapping.

                        - **ProfileId** *(string) --*

                          ID of profile to use for field-level encryption query argument-profile
                          mapping

                - **ContentTypeProfileConfig** *(dict) --*

                  A complex data type that specifies when to forward content if a content type isn't
                  recognized and profiles to use as by default in a request if a query argument
                  doesn't specify a profile to use.

                  - **ForwardWhenContentTypeIsUnknown** *(boolean) --*

                    The setting in a field-level encryption content type-profile mapping that
                    specifies what to do when an unknown content type is provided for the profile.
                    If true, content is forwarded without being encrypted when the content type is
                    unknown. If false (the default), an error is returned when the content type is
                    unknown.

                  - **ContentTypeProfiles** *(dict) --*

                    The configuration for a field-level encryption content type-profile.

                    - **Quantity** *(integer) --*

                      The number of field-level encryption content type-profile mappings.

                    - **Items** *(list) --*

                      Items in a field-level encryption content type-profile mapping.

                      - *(dict) --*

                        A field-level encryption content type profile.

                        - **Format** *(string) --*

                          The format for a field-level encryption content type-profile mapping.

                        - **ProfileId** *(string) --*

                          The profile ID for a field-level encryption content type-profile mapping.

                        - **ContentType** *(string) --*

                          The content type for a field-level encryption content type-profile
                          mapping.

            - **Location** *(string) --*

              The fully qualified URI of the new configuration resource just created. For example:
              ``https://cloudfront.amazonaws.com/2010-11-01/field-level-encryption-config/EDFDVBD632BHDS5``
              .

            - **ETag** *(string) --*

              The current version of the field level encryption configuration. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_field_level_encryption_profile(
        self,
        FieldLevelEncryptionProfileConfig: ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    ) -> ClientCreateFieldLevelEncryptionProfileResponseTypeDef:
        """
        Create a field-level encryption profile.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateFieldLevelEncryptionProfile>`_

        **Request Syntax**
        ::

          response = client.create_field_level_encryption_profile(
              FieldLevelEncryptionProfileConfig={
                  'Name': 'string',
                  'CallerReference': 'string',
                  'Comment': 'string',
                  'EncryptionEntities': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'PublicKeyId': 'string',
                              'ProviderId': 'string',
                              'FieldPatterns': {
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              }
                          },
                      ]
                  }
              }
          )
        :type FieldLevelEncryptionProfileConfig: dict
        :param FieldLevelEncryptionProfileConfig: **[REQUIRED]**

          The request to create a field-level encryption profile.

          - **Name** *(string) --* **[REQUIRED]**

            Profile name for the field-level encryption profile.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique number that ensures that the request can't be replayed.

          - **Comment** *(string) --*

            An optional comment for the field-level encryption profile.

          - **EncryptionEntities** *(dict) --* **[REQUIRED]**

            A complex data type of encryption entities for the field-level encryption profile that
            include the public key ID, provider, and field patterns for specifying which fields to
            encrypt with this key.

            - **Quantity** *(integer) --* **[REQUIRED]**

              Number of field pattern items in a field-level encryption content type-profile
              mapping.

            - **Items** *(list) --*

              An array of field patterns in a field-level encryption content type-profile mapping.

              - *(dict) --*

                Complex data type for field-level encryption profiles that includes the encryption
                key and field pattern specifications.

                - **PublicKeyId** *(string) --* **[REQUIRED]**

                  The public key associated with a set of field-level encryption patterns, to be
                  used when encrypting the fields that match the patterns.

                - **ProviderId** *(string) --* **[REQUIRED]**

                  The provider associated with the public key being used for encryption. This value
                  must also be provided with the private key for applications to be able to decrypt
                  data.

                - **FieldPatterns** *(dict) --* **[REQUIRED]**

                  Field patterns in a field-level encryption content type profile specify the fields
                  that you want to be encrypted. You can provide the full field name, or any
                  beginning characters followed by a wildcard (*). You can't overlap field patterns.
                  For example, you can't have both ABC* and AB*. Note that field patterns are
                  case-sensitive.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of field-level encryption field patterns.

                  - **Items** *(list) --*

                    An array of the field-level encryption field patterns.

                    - *(string) --*

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionProfile': {
                    'Id': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'FieldLevelEncryptionProfileConfig': {
                        'Name': 'string',
                        'CallerReference': 'string',
                        'Comment': 'string',
                        'EncryptionEntities': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PublicKeyId': 'string',
                                    'ProviderId': 'string',
                                    'FieldPatterns': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                            ]
                        }
                    }
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionProfile** *(dict) --*

              Returned when you create a new field-level encryption profile.

              - **Id** *(string) --*

                The ID for a field-level encryption profile configuration which includes a set of
                profiles that specify certain selected data fields to be encrypted by specific
                public keys.

              - **LastModifiedTime** *(datetime) --*

                The last time the field-level encryption profile was updated.

              - **FieldLevelEncryptionProfileConfig** *(dict) --*

                A complex data type that includes the profile name and the encryption entities for
                the field-level encryption profile.

                - **Name** *(string) --*

                  Profile name for the field-level encryption profile.

                - **CallerReference** *(string) --*

                  A unique number that ensures that the request can't be replayed.

                - **Comment** *(string) --*

                  An optional comment for the field-level encryption profile.

                - **EncryptionEntities** *(dict) --*

                  A complex data type of encryption entities for the field-level encryption profile
                  that include the public key ID, provider, and field patterns for specifying which
                  fields to encrypt with this key.

                  - **Quantity** *(integer) --*

                    Number of field pattern items in a field-level encryption content type-profile
                    mapping.

                  - **Items** *(list) --*

                    An array of field patterns in a field-level encryption content type-profile
                    mapping.

                    - *(dict) --*

                      Complex data type for field-level encryption profiles that includes the
                      encryption key and field pattern specifications.

                      - **PublicKeyId** *(string) --*

                        The public key associated with a set of field-level encryption patterns, to
                        be used when encrypting the fields that match the patterns.

                      - **ProviderId** *(string) --*

                        The provider associated with the public key being used for encryption. This
                        value must also be provided with the private key for applications to be able
                        to decrypt data.

                      - **FieldPatterns** *(dict) --*

                        Field patterns in a field-level encryption content type profile specify the
                        fields that you want to be encrypted. You can provide the full field name,
                        or any beginning characters followed by a wildcard (*). You can't overlap
                        field patterns. For example, you can't have both ABC* and AB*. Note that
                        field patterns are case-sensitive.

                        - **Quantity** *(integer) --*

                          The number of field-level encryption field patterns.

                        - **Items** *(list) --*

                          An array of the field-level encryption field patterns.

                          - *(string) --*

            - **Location** *(string) --*

              The fully qualified URI of the new profile resource just created. For example:
              ``https://cloudfront.amazonaws.com/2010-11-01/field-level-encryption-profile/EDFDVBD632BHDS5``
              .

            - **ETag** *(string) --*

              The current version of the field level encryption profile. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_invalidation(
        self,
        DistributionId: str,
        InvalidationBatch: ClientCreateInvalidationInvalidationBatchTypeDef,
    ) -> ClientCreateInvalidationResponseTypeDef:
        """
        Create a new invalidation.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateInvalidation>`_

        **Request Syntax**
        ::

          response = client.create_invalidation(
              DistributionId='string',
              InvalidationBatch={
                  'Paths': {
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'CallerReference': 'string'
              }
          )
        :type DistributionId: string
        :param DistributionId: **[REQUIRED]**

          The distribution's id.

        :type InvalidationBatch: dict
        :param InvalidationBatch: **[REQUIRED]**

          The batch information for the invalidation.

          - **Paths** *(dict) --* **[REQUIRED]**

            A complex type that contains information about the objects that you want to invalidate.
            For more information, see `Specifying the Objects to Invalidate
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of invalidation paths specified for the objects that you want to
              invalidate.

            - **Items** *(list) --*

              A complex type that contains a list of the paths that you want to invalidate.

              - *(string) --*

          - **CallerReference** *(string) --* **[REQUIRED]**

            A value that you specify to uniquely identify an invalidation request. CloudFront uses
            the value to prevent you from accidentally resubmitting an identical request. Whenever
            you create a new invalidation request, you must specify a new value for
            ``CallerReference`` and change other values in the request as applicable. One way to
            ensure that the value of ``CallerReference`` is unique is to use a ``timestamp`` , for
            example, ``20120301090000`` .

            If you make a second invalidation request with the same value for ``CallerReference`` ,
            and if the rest of the request is the same, CloudFront doesn't create a new invalidation
            request. Instead, CloudFront returns information about the invalidation request that you
            previously created with the same ``CallerReference`` .

            If ``CallerReference`` is a value you already sent in a previous invalidation batch
            request but the content of any ``Path`` is different from the original request,
            CloudFront returns an ``InvalidationBatchAlreadyExists`` error.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Location': 'string',
                'Invalidation': {
                    'Id': 'string',
                    'Status': 'string',
                    'CreateTime': datetime(2015, 1, 1),
                    'InvalidationBatch': {
                        'Paths': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'CallerReference': 'string'
                    }
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Location** *(string) --*

              The fully qualified URI of the distribution and invalidation batch request, including
              the ``Invalidation ID`` .

            - **Invalidation** *(dict) --*

              The invalidation's information.

              - **Id** *(string) --*

                The identifier for the invalidation request. For example: ``IDFDVBD632BHDS5`` .

              - **Status** *(string) --*

                The status of the invalidation request. When the invalidation batch is finished, the
                status is ``Completed`` .

              - **CreateTime** *(datetime) --*

                The date and time the invalidation request was first made.

              - **InvalidationBatch** *(dict) --*

                The current invalidation information for the batch request.

                - **Paths** *(dict) --*

                  A complex type that contains information about the objects that you want to
                  invalidate. For more information, see `Specifying the Objects to Invalidate
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --*

                    The number of invalidation paths specified for the objects that you want to
                    invalidate.

                  - **Items** *(list) --*

                    A complex type that contains a list of the paths that you want to invalidate.

                    - *(string) --*

                - **CallerReference** *(string) --*

                  A value that you specify to uniquely identify an invalidation request. CloudFront
                  uses the value to prevent you from accidentally resubmitting an identical request.
                  Whenever you create a new invalidation request, you must specify a new value for
                  ``CallerReference`` and change other values in the request as applicable. One way
                  to ensure that the value of ``CallerReference`` is unique is to use a
                  ``timestamp`` , for example, ``20120301090000`` .

                  If you make a second invalidation request with the same value for
                  ``CallerReference`` , and if the rest of the request is the same, CloudFront
                  doesn't create a new invalidation request. Instead, CloudFront returns information
                  about the invalidation request that you previously created with the same
                  ``CallerReference`` .

                  If ``CallerReference`` is a value you already sent in a previous invalidation
                  batch request but the content of any ``Path`` is different from the original
                  request, CloudFront returns an ``InvalidationBatchAlreadyExists`` error.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_public_key(
        self, PublicKeyConfig: ClientCreatePublicKeyPublicKeyConfigTypeDef
    ) -> ClientCreatePublicKeyResponseTypeDef:
        """
        Add a new public key to CloudFront to use, for example, for field-level encryption. You can
        add a maximum of 10 public keys with one AWS account.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreatePublicKey>`_

        **Request Syntax**
        ::

          response = client.create_public_key(
              PublicKeyConfig={
                  'CallerReference': 'string',
                  'Name': 'string',
                  'EncodedKey': 'string',
                  'Comment': 'string'
              }
          )
        :type PublicKeyConfig: dict
        :param PublicKeyConfig: **[REQUIRED]**

          The request to add a public key to CloudFront.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique number that ensures that the request can't be replayed.

          - **Name** *(string) --* **[REQUIRED]**

            The name for a public key you add to CloudFront to use with features like field-level
            encryption.

          - **EncodedKey** *(string) --* **[REQUIRED]**

            The encoded public key that you want to add to CloudFront to use with features like
            field-level encryption.

          - **Comment** *(string) --*

            An optional comment about a public key.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'PublicKey': {
                    'Id': 'string',
                    'CreatedTime': datetime(2015, 1, 1),
                    'PublicKeyConfig': {
                        'CallerReference': 'string',
                        'Name': 'string',
                        'EncodedKey': 'string',
                        'Comment': 'string'
                    }
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **PublicKey** *(dict) --*

              Returned when you add a public key.

              - **Id** *(string) --*

                A unique ID assigned to a public key you've added to CloudFront.

              - **CreatedTime** *(datetime) --*

                A time you added a public key to CloudFront.

              - **PublicKeyConfig** *(dict) --*

                A complex data type for a public key you add to CloudFront to use with features like
                field-level encryption.

                - **CallerReference** *(string) --*

                  A unique number that ensures that the request can't be replayed.

                - **Name** *(string) --*

                  The name for a public key you add to CloudFront to use with features like
                  field-level encryption.

                - **EncodedKey** *(string) --*

                  The encoded public key that you want to add to CloudFront to use with features
                  like field-level encryption.

                - **Comment** *(string) --*

                  An optional comment about a public key.

            - **Location** *(string) --*

              The fully qualified URI of the new public key resource just created. For example:
              ``https://cloudfront.amazonaws.com/2010-11-01/cloudfront-public-key/EDFDVBD632BHDS5``
              .

            - **ETag** *(string) --*

              The current version of the public key. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_streaming_distribution(
        self,
        StreamingDistributionConfig: ClientCreateStreamingDistributionStreamingDistributionConfigTypeDef,
    ) -> ClientCreateStreamingDistributionResponseTypeDef:
        """
        Creates a new RTMP distribution. An RTMP distribution is similar to a web distribution, but
        an RTMP distribution streams media files using the Adobe Real-Time Messaging Protocol (RTMP)
        instead of serving files using HTTP.

        To create a new distribution, submit a ``POST`` request to the *CloudFront API version*
        /distribution resource. The request body must include a document with a
        *StreamingDistributionConfig* element. The response echoes the
        ``StreamingDistributionConfig`` element and returns other information about the RTMP
        distribution.

        To get the status of your request, use the *GET StreamingDistribution* API action. When the
        value of ``Enabled`` is ``true`` and the value of ``Status`` is ``Deployed`` , your
        distribution is ready. A distribution usually deploys in less than 15 minutes.

        For more information about web distributions, see `Working with RTMP Distributions
        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-rtmp.html>`__
        in the *Amazon CloudFront Developer Guide* .

        .. warning::

          Beginning with the 2012-05-05 version of the CloudFront API, we made substantial changes
          to the format of the XML document that you include in the request body when you create or
          update a web distribution or an RTMP distribution, and when you invalidate objects. With
          previous versions of the API, we discovered that it was too easy to accidentally delete
          one or more values for an element that accepts multiple values, for example, CNAMEs and
          trusted signers. Our changes for the 2012-05-05 release are intended to prevent these
          accidental deletions and to notify you when there's a mismatch between the number of
          values you say you're specifying in the ``Quantity`` element and the number of values
          specified.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateStreamingDistribution>`_

        **Request Syntax**
        ::

          response = client.create_streaming_distribution(
              StreamingDistributionConfig={
                  'CallerReference': 'string',
                  'S3Origin': {
                      'DomainName': 'string',
                      'OriginAccessIdentity': 'string'
                  },
                  'Aliases': {
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'Comment': 'string',
                  'Logging': {
                      'Enabled': True|False,
                      'Bucket': 'string',
                      'Prefix': 'string'
                  },
                  'TrustedSigners': {
                      'Enabled': True|False,
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                  'Enabled': True|False
              }
          )
        :type StreamingDistributionConfig: dict
        :param StreamingDistributionConfig: **[REQUIRED]**

          The streaming distribution's configuration information.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique value (for example, a date-time stamp) that ensures that the request can't be
            replayed.

            If the value of ``CallerReference`` is new (regardless of the content of the
            ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

            If ``CallerReference`` is a value that you already sent in a previous request to create
            a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

          - **S3Origin** *(dict) --* **[REQUIRED]**

            A complex type that contains information about the Amazon S3 bucket from which you want
            CloudFront to get your media files for distribution.

            - **DomainName** *(string) --* **[REQUIRED]**

              The DNS name of the Amazon S3 origin.

            - **OriginAccessIdentity** *(string) --* **[REQUIRED]**

              The CloudFront origin access identity to associate with the distribution. Use an
              origin access identity to configure the distribution so that end users can only access
              objects in an Amazon S3 bucket through CloudFront.

              If you want end users to be able to access objects using either the CloudFront URL or
              the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

              To delete the origin access identity from an existing distribution, update the
              distribution configuration and include an empty ``OriginAccessIdentity`` element.

              To replace the origin access identity, update the distribution configuration and
              specify the new origin access identity.

              For more information, see `Using an Origin Access Identity to Restrict Access to Your
              Amazon S3 Content
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
              in the *Amazon CloudFront Developer Guide* .

          - **Aliases** *(dict) --*

            A complex type that contains information about CNAMEs (alternate domain names), if any,
            for this streaming distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of CNAME aliases, if any, that you want to associate with this
              distribution.

            - **Items** *(list) --*

              A complex type that contains the CNAME aliases, if any, that you want to associate
              with this distribution.

              - *(string) --*

          - **Comment** *(string) --* **[REQUIRED]**

            Any comments you want to include about the streaming distribution.

          - **Logging** *(dict) --*

            A complex type that controls whether access logs are written for the streaming
            distribution.

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If
              you don't want to enable logging when you create a streaming distribution or if you
              want to disable logging for an existing streaming distribution, specify ``false`` for
              ``Enabled`` , and specify ``empty Bucket`` and ``Prefix`` elements. If you specify
              ``false`` for ``Enabled`` but you specify values for ``Bucket`` and ``Prefix`` , the
              values are automatically deleted.

            - **Bucket** *(string) --* **[REQUIRED]**

              The Amazon S3 bucket to store the access logs in, for example,
              ``myawslogbucket.s3.amazonaws.com`` .

            - **Prefix** *(string) --* **[REQUIRED]**

              An optional string that you want CloudFront to prefix to the access log filenames for
              this streaming distribution, for example, ``myprefix/`` . If you want to enable
              logging, but you don't want to specify a prefix, you still must include an empty
              ``Prefix`` element in the ``Logging`` element.

          - **TrustedSigners** *(dict) --* **[REQUIRED]**

            A complex type that specifies any AWS accounts that you want to permit to create signed
            URLs for private content. If you want the distribution to use signed URLs, include this
            element; if you want the distribution to use public URLs, remove this element. For more
            information, see `Serving Private Content through CloudFront
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Specifies whether you want to require viewers to use signed URLs to access the files
              specified by ``PathPattern`` and ``TargetOriginId`` .

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of trusted signers for this cache behavior.

            - **Items** *(list) --*

               **Optional** : A complex type that contains trusted signers for this cache behavior.
               If ``Quantity`` is ``0`` , you can omit ``Items`` .

              - *(string) --*

          - **PriceClass** *(string) --*

            A complex type that contains information about price class for this streaming
            distribution.

          - **Enabled** *(boolean) --* **[REQUIRED]**

            Whether the streaming distribution is enabled to accept user requests for content.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'StreamingDistribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'StreamingDistributionConfig': {
                        'CallerReference': 'string',
                        'S3Origin': {
                            'DomainName': 'string',
                            'OriginAccessIdentity': 'string'
                        },
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'TrustedSigners': {
                            'Enabled': True|False,
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False
                    }
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **StreamingDistribution** *(dict) --*

              The streaming distribution's information.

              - **Id** *(string) --*

                The identifier for the RTMP distribution. For example: ``EGTXBD79EXAMPLE`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                The current status of the RTMP distribution. When the status is ``Deployed`` , the
                distribution's information is propagated to all CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time that the distribution was last modified.

              - **DomainName** *(string) --*

                The domain name that corresponds to the streaming distribution, for example,
                ``s5c39gqb8ow64r.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                A complex type that lists the AWS accounts, if any, that you included in the
                ``TrustedSigners`` complex type for this distribution. These are the accounts that
                you want to allow to create signed URLs for private content.

                The ``Signer`` complex type lists the AWS account number of the trusted signer or
                ``self`` if the signer is the AWS account that created the distribution. The
                ``Signer`` element also includes the IDs of any active CloudFront key pairs that are
                associated with the trusted signer's AWS account. If no ``KeyPairId`` element
                appears for a ``Signer`` , that signer can't create signed URLs.

                For more information, see `Serving Private Content through CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **StreamingDistributionConfig** *(dict) --*

                The current configuration information for the RTMP distribution.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **S3Origin** *(dict) --*

                  A complex type that contains information about the Amazon S3 bucket from which you
                  want CloudFront to get your media files for distribution.

                  - **DomainName** *(string) --*

                    The DNS name of the Amazon S3 origin.

                  - **OriginAccessIdentity** *(string) --*

                    The CloudFront origin access identity to associate with the distribution. Use an
                    origin access identity to configure the distribution so that end users can only
                    access objects in an Amazon S3 bucket through CloudFront.

                    If you want end users to be able to access objects using either the CloudFront
                    URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                    To delete the origin access identity from an existing distribution, update the
                    distribution configuration and include an empty ``OriginAccessIdentity``
                    element.

                    To replace the origin access identity, update the distribution configuration and
                    specify the new origin access identity.

                    For more information, see `Using an Origin Access Identity to Restrict Access to
                    Your Amazon S3 Content
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this streaming distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **Comment** *(string) --*

                  Any comments you want to include about the streaming distribution.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the streaming
                  distribution.

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a streaming
                    distribution or if you want to disable logging for an existing streaming
                    distribution, specify ``false`` for ``Enabled`` , and specify ``empty Bucket``
                    and ``Prefix`` elements. If you specify ``false`` for ``Enabled`` but you
                    specify values for ``Bucket`` and ``Prefix`` , the values are automatically
                    deleted.

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    filenames for this streaming distribution, for example, ``myprefix/`` . If you
                    want to enable logging, but you don't want to specify a prefix, you still must
                    include an empty ``Prefix`` element in the ``Logging`` element.

                - **TrustedSigners** *(dict) --*

                  A complex type that specifies any AWS accounts that you want to permit to create
                  signed URLs for private content. If you want the distribution to use signed URLs,
                  include this element; if you want the distribution to use public URLs, remove this
                  element. For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --*

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **PriceClass** *(string) --*

                  A complex type that contains information about price class for this streaming
                  distribution.

                - **Enabled** *(boolean) --*

                  Whether the streaming distribution is enabled to accept user requests for content.

            - **Location** *(string) --*

              The fully qualified URI of the new streaming distribution resource just created. For
              example:
              ``https://cloudfront.amazonaws.com/2010-11-01/streaming-distribution/EGTXBD79H29TRA8``
              .

            - **ETag** *(string) --*

              The current version of the streaming distribution created.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def create_streaming_distribution_with_tags(
        self,
        StreamingDistributionConfigWithTags: ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef,
    ) -> ClientCreateStreamingDistributionWithTagsResponseTypeDef:
        """
        Create a new streaming distribution with tags.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/CreateStreamingDistributionWithTags>`_

        **Request Syntax**
        ::

          response = client.create_streaming_distribution_with_tags(
              StreamingDistributionConfigWithTags={
                  'StreamingDistributionConfig': {
                      'CallerReference': 'string',
                      'S3Origin': {
                          'DomainName': 'string',
                          'OriginAccessIdentity': 'string'
                      },
                      'Aliases': {
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      },
                      'Comment': 'string',
                      'Logging': {
                          'Enabled': True|False,
                          'Bucket': 'string',
                          'Prefix': 'string'
                      },
                      'TrustedSigners': {
                          'Enabled': True|False,
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      },
                      'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                      'Enabled': True|False
                  },
                  'Tags': {
                      'Items': [
                          {
                              'Key': 'string',
                              'Value': 'string'
                          },
                      ]
                  }
              }
          )
        :type StreamingDistributionConfigWithTags: dict
        :param StreamingDistributionConfigWithTags: **[REQUIRED]**

          The streaming distribution's configuration information.

          - **StreamingDistributionConfig** *(dict) --* **[REQUIRED]**

            A streaming distribution Configuration.

            - **CallerReference** *(string) --* **[REQUIRED]**

              A unique value (for example, a date-time stamp) that ensures that the request can't be
              replayed.

              If the value of ``CallerReference`` is new (regardless of the content of the
              ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

              If ``CallerReference`` is a value that you already sent in a previous request to
              create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

            - **S3Origin** *(dict) --* **[REQUIRED]**

              A complex type that contains information about the Amazon S3 bucket from which you
              want CloudFront to get your media files for distribution.

              - **DomainName** *(string) --* **[REQUIRED]**

                The DNS name of the Amazon S3 origin.

              - **OriginAccessIdentity** *(string) --* **[REQUIRED]**

                The CloudFront origin access identity to associate with the distribution. Use an
                origin access identity to configure the distribution so that end users can only
                access objects in an Amazon S3 bucket through CloudFront.

                If you want end users to be able to access objects using either the CloudFront URL
                or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                To delete the origin access identity from an existing distribution, update the
                distribution configuration and include an empty ``OriginAccessIdentity`` element.

                To replace the origin access identity, update the distribution configuration and
                specify the new origin access identity.

                For more information, see `Using an Origin Access Identity to Restrict Access to
                Your Amazon S3 Content
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                in the *Amazon CloudFront Developer Guide* .

            - **Aliases** *(dict) --*

              A complex type that contains information about CNAMEs (alternate domain names), if
              any, for this streaming distribution.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of CNAME aliases, if any, that you want to associate with this
                distribution.

              - **Items** *(list) --*

                A complex type that contains the CNAME aliases, if any, that you want to associate
                with this distribution.

                - *(string) --*

            - **Comment** *(string) --* **[REQUIRED]**

              Any comments you want to include about the streaming distribution.

            - **Logging** *(dict) --*

              A complex type that controls whether access logs are written for the streaming
              distribution.

              - **Enabled** *(boolean) --* **[REQUIRED]**

                Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If
                you don't want to enable logging when you create a streaming distribution or if you
                want to disable logging for an existing streaming distribution, specify ``false``
                for ``Enabled`` , and specify ``empty Bucket`` and ``Prefix`` elements. If you
                specify ``false`` for ``Enabled`` but you specify values for ``Bucket`` and
                ``Prefix`` , the values are automatically deleted.

              - **Bucket** *(string) --* **[REQUIRED]**

                The Amazon S3 bucket to store the access logs in, for example,
                ``myawslogbucket.s3.amazonaws.com`` .

              - **Prefix** *(string) --* **[REQUIRED]**

                An optional string that you want CloudFront to prefix to the access log filenames
                for this streaming distribution, for example, ``myprefix/`` . If you want to enable
                logging, but you don't want to specify a prefix, you still must include an empty
                ``Prefix`` element in the ``Logging`` element.

            - **TrustedSigners** *(dict) --* **[REQUIRED]**

              A complex type that specifies any AWS accounts that you want to permit to create
              signed URLs for private content. If you want the distribution to use signed URLs,
              include this element; if you want the distribution to use public URLs, remove this
              element. For more information, see `Serving Private Content through CloudFront
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
              in the *Amazon CloudFront Developer Guide* .

              - **Enabled** *(boolean) --* **[REQUIRED]**

                Specifies whether you want to require viewers to use signed URLs to access the files
                specified by ``PathPattern`` and ``TargetOriginId`` .

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of trusted signers for this cache behavior.

              - **Items** *(list) --*

                 **Optional** : A complex type that contains trusted signers for this cache
                 behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                - *(string) --*

            - **PriceClass** *(string) --*

              A complex type that contains information about price class for this streaming
              distribution.

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Whether the streaming distribution is enabled to accept user requests for content.

          - **Tags** *(dict) --* **[REQUIRED]**

            A complex type that contains zero or more ``Tag`` elements.

            - **Items** *(list) --*

              A complex type that contains ``Tag`` elements.

              - *(dict) --*

                A complex type that contains ``Tag`` key and ``Tag`` value.

                - **Key** *(string) --* **[REQUIRED]**

                  A string that contains ``Tag`` key.

                  The string length should be between 1 and 128 characters. Valid characters include
                  ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / = +
                  @`` .

                - **Value** *(string) --*

                  A string that contains an optional ``Tag`` value.

                  The string length should be between 0 and 256 characters. Valid characters include
                  ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / = +
                  @`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'StreamingDistribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'StreamingDistributionConfig': {
                        'CallerReference': 'string',
                        'S3Origin': {
                            'DomainName': 'string',
                            'OriginAccessIdentity': 'string'
                        },
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'TrustedSigners': {
                            'Enabled': True|False,
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False
                    }
                },
                'Location': 'string',
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **StreamingDistribution** *(dict) --*

              The streaming distribution's information.

              - **Id** *(string) --*

                The identifier for the RTMP distribution. For example: ``EGTXBD79EXAMPLE`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                The current status of the RTMP distribution. When the status is ``Deployed`` , the
                distribution's information is propagated to all CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time that the distribution was last modified.

              - **DomainName** *(string) --*

                The domain name that corresponds to the streaming distribution, for example,
                ``s5c39gqb8ow64r.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                A complex type that lists the AWS accounts, if any, that you included in the
                ``TrustedSigners`` complex type for this distribution. These are the accounts that
                you want to allow to create signed URLs for private content.

                The ``Signer`` complex type lists the AWS account number of the trusted signer or
                ``self`` if the signer is the AWS account that created the distribution. The
                ``Signer`` element also includes the IDs of any active CloudFront key pairs that are
                associated with the trusted signer's AWS account. If no ``KeyPairId`` element
                appears for a ``Signer`` , that signer can't create signed URLs.

                For more information, see `Serving Private Content through CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **StreamingDistributionConfig** *(dict) --*

                The current configuration information for the RTMP distribution.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **S3Origin** *(dict) --*

                  A complex type that contains information about the Amazon S3 bucket from which you
                  want CloudFront to get your media files for distribution.

                  - **DomainName** *(string) --*

                    The DNS name of the Amazon S3 origin.

                  - **OriginAccessIdentity** *(string) --*

                    The CloudFront origin access identity to associate with the distribution. Use an
                    origin access identity to configure the distribution so that end users can only
                    access objects in an Amazon S3 bucket through CloudFront.

                    If you want end users to be able to access objects using either the CloudFront
                    URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                    To delete the origin access identity from an existing distribution, update the
                    distribution configuration and include an empty ``OriginAccessIdentity``
                    element.

                    To replace the origin access identity, update the distribution configuration and
                    specify the new origin access identity.

                    For more information, see `Using an Origin Access Identity to Restrict Access to
                    Your Amazon S3 Content
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this streaming distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **Comment** *(string) --*

                  Any comments you want to include about the streaming distribution.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the streaming
                  distribution.

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a streaming
                    distribution or if you want to disable logging for an existing streaming
                    distribution, specify ``false`` for ``Enabled`` , and specify ``empty Bucket``
                    and ``Prefix`` elements. If you specify ``false`` for ``Enabled`` but you
                    specify values for ``Bucket`` and ``Prefix`` , the values are automatically
                    deleted.

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    filenames for this streaming distribution, for example, ``myprefix/`` . If you
                    want to enable logging, but you don't want to specify a prefix, you still must
                    include an empty ``Prefix`` element in the ``Logging`` element.

                - **TrustedSigners** *(dict) --*

                  A complex type that specifies any AWS accounts that you want to permit to create
                  signed URLs for private content. If you want the distribution to use signed URLs,
                  include this element; if you want the distribution to use public URLs, remove this
                  element. For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --*

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **PriceClass** *(string) --*

                  A complex type that contains information about price class for this streaming
                  distribution.

                - **Enabled** *(boolean) --*

                  Whether the streaming distribution is enabled to accept user requests for content.

            - **Location** *(string) --*

              The fully qualified URI of the new streaming distribution resource just created. For
              example:``https://cloudfront.amazonaws.com/2010-11-01/streaming-distribution/EGTXBD79H29TRA8``
              .

            - **ETag** *(string) --*

              The current version of the distribution created.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def delete_cloud_front_origin_access_identity(self, Id: str, IfMatch: str = None) -> None:
        """
        Delete an origin access identity.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/DeleteCloudFrontOriginAccessIdentity>`_

        **Request Syntax**
        ::

          response = client.delete_cloud_front_origin_access_identity(
              Id='string',
              IfMatch='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The origin access identity's ID.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header you received from a previous ``GET`` or ``PUT`` request.
          For example: ``E2QWRUHAPOMQZL`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def delete_distribution(self, Id: str, IfMatch: str = None) -> None:
        """
        Delete a distribution.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/DeleteDistribution>`_

        **Request Syntax**
        ::

          response = client.delete_distribution(
              Id='string',
              IfMatch='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The distribution ID.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when you disabled the distribution. For
          example: ``E2QWRUHAPOMQZL`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def delete_field_level_encryption_config(self, Id: str, IfMatch: str = None) -> None:
        """
        Remove a field-level encryption configuration.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/DeleteFieldLevelEncryptionConfig>`_

        **Request Syntax**
        ::

          response = client.delete_field_level_encryption_config(
              Id='string',
              IfMatch='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The ID of the configuration you want to delete from CloudFront.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the configuration
          identity to delete. For example: ``E2QWRUHAPOMQZL`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def delete_field_level_encryption_profile(self, Id: str, IfMatch: str = None) -> None:
        """
        Remove a field-level encryption profile.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/DeleteFieldLevelEncryptionProfile>`_

        **Request Syntax**
        ::

          response = client.delete_field_level_encryption_profile(
              Id='string',
              IfMatch='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Request the ID of the profile you want to delete from CloudFront.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the profile to delete.
          For example: ``E2QWRUHAPOMQZL`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def delete_public_key(self, Id: str, IfMatch: str = None) -> None:
        """
        Remove a public key you previously added to CloudFront.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/DeletePublicKey>`_

        **Request Syntax**
        ::

          response = client.delete_public_key(
              Id='string',
              IfMatch='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The ID of the public key you want to remove from CloudFront.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the public key identity
          to delete. For example: ``E2QWRUHAPOMQZL`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def delete_streaming_distribution(self, Id: str, IfMatch: str = None) -> None:
        """
        Delete a streaming distribution. To delete an RTMP distribution using the CloudFront API,
        perform the following steps.

         **To delete an RTMP distribution using the CloudFront API** :

        * Disable the RTMP distribution.

        * Submit a ``GET Streaming Distribution Config`` request to get the current configuration
        and the ``Etag`` header for the distribution.

        * Update the XML document that was returned in the response to your ``GET Streaming
        Distribution Config`` request to change the value of ``Enabled`` to ``false`` .

        * Submit a ``PUT Streaming Distribution Config`` request to update the configuration for
        your distribution. In the request body, include the XML document that you updated in Step 3.
        Then set the value of the HTTP ``If-Match`` header to the value of the ``ETag`` header that
        CloudFront returned when you submitted the ``GET Streaming Distribution Config`` request in
        Step 2.

        * Review the response to the ``PUT Streaming Distribution Config`` request to confirm that
        the distribution was successfully disabled.

        * Submit a ``GET Streaming Distribution Config`` request to confirm that your changes have
        propagated. When propagation is complete, the value of ``Status`` is ``Deployed`` .

        * Submit a ``DELETE Streaming Distribution`` request. Set the value of the HTTP ``If-Match``
        header to the value of the ``ETag`` header that CloudFront returned when you submitted the
        ``GET Streaming Distribution Config`` request in Step 2.

        * Review the response to your ``DELETE Streaming Distribution`` request to confirm that the
        distribution was successfully deleted.

        For information about deleting a distribution using the CloudFront console, see `Deleting a
        Distribution
        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToDeleteDistribution.html>`__
        in the *Amazon CloudFront Developer Guide* .

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/DeleteStreamingDistribution>`_

        **Request Syntax**
        ::

          response = client.delete_streaming_distribution(
              Id='string',
              IfMatch='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The distribution ID.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when you disabled the streaming
          distribution. For example: ``E2QWRUHAPOMQZL`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def generate_presigned_url(
        self,
        ClientMethod: str,
        Params: Dict[str, Any] = None,
        ExpiresIn: int = 3600,
        HttpMethod: str = None,
    ) -> None:
        """
        Generate a presigned url given a client, its method, and arguments

        :type ClientMethod: string
        :param ClientMethod: The client method to presign for

        :type Params: dict
        :param Params: The parameters normally passed to
            ``ClientMethod``.

        :type ExpiresIn: int
        :param ExpiresIn: The number of seconds the presigned url is valid
            for. By default it expires in an hour (3600 seconds)

        :type HttpMethod: string
        :param HttpMethod: The http method to use on the generated url. By
            default, the http method is whatever is used in the method's model.

        :returns: The presigned url
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_cloud_front_origin_access_identity(
        self, Id: str
    ) -> ClientGetCloudFrontOriginAccessIdentityResponseTypeDef:
        """
        Get the information about an origin access identity.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetCloudFrontOriginAccessIdentity>`_

        **Request Syntax**
        ::

          response = client.get_cloud_front_origin_access_identity(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The identity's ID.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'CloudFrontOriginAccessIdentity': {
                    'Id': 'string',
                    'S3CanonicalUserId': 'string',
                    'CloudFrontOriginAccessIdentityConfig': {
                        'CallerReference': 'string',
                        'Comment': 'string'
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **CloudFrontOriginAccessIdentity** *(dict) --*

              The origin access identity's information.

              - **Id** *(string) --*

                The ID for the origin access identity, for example, ``E74FTE3AJFJ256A`` .

              - **S3CanonicalUserId** *(string) --*

                The Amazon S3 canonical user ID for the origin access identity, used when giving the
                origin access identity read permission to an object in Amazon S3.

              - **CloudFrontOriginAccessIdentityConfig** *(dict) --*

                The current configuration information for the identity.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``CloudFrontOriginAccessIdentityConfig`` object), a new origin access identity is
                  created.

                  If the ``CallerReference`` is a value already sent in a previous identity request,
                  and the content of the ``CloudFrontOriginAccessIdentityConfig`` is identical to
                  the original request (ignoring white space), the response includes the same
                  information returned to the original request.

                  If the ``CallerReference`` is a value you already sent in a previous request to
                  create an identity, but the content of the
                  ``CloudFrontOriginAccessIdentityConfig`` is different from the original request,
                  CloudFront returns a ``CloudFrontOriginAccessIdentityAlreadyExists`` error.

                - **Comment** *(string) --*

                  Any comments you want to include about the origin access identity.

            - **ETag** *(string) --*

              The current version of the origin access identity's information. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_cloud_front_origin_access_identity_config(
        self, Id: str
    ) -> ClientGetCloudFrontOriginAccessIdentityConfigResponseTypeDef:
        """
        Get the configuration information about an origin access identity.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetCloudFrontOriginAccessIdentityConfig>`_

        **Request Syntax**
        ::

          response = client.get_cloud_front_origin_access_identity_config(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The identity's ID.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'CloudFrontOriginAccessIdentityConfig': {
                    'CallerReference': 'string',
                    'Comment': 'string'
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **CloudFrontOriginAccessIdentityConfig** *(dict) --*

              The origin access identity's configuration information.

              - **CallerReference** *(string) --*

                A unique value (for example, a date-time stamp) that ensures that the request can't
                be replayed.

                If the value of ``CallerReference`` is new (regardless of the content of the
                ``CloudFrontOriginAccessIdentityConfig`` object), a new origin access identity is
                created.

                If the ``CallerReference`` is a value already sent in a previous identity request,
                and the content of the ``CloudFrontOriginAccessIdentityConfig`` is identical to the
                original request (ignoring white space), the response includes the same information
                returned to the original request.

                If the ``CallerReference`` is a value you already sent in a previous request to
                create an identity, but the content of the ``CloudFrontOriginAccessIdentityConfig``
                is different from the original request, CloudFront returns a
                ``CloudFrontOriginAccessIdentityAlreadyExists`` error.

              - **Comment** *(string) --*

                Any comments you want to include about the origin access identity.

            - **ETag** *(string) --*

              The current version of the configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_distribution(self, Id: str) -> ClientGetDistributionResponseTypeDef:
        """
        Get the information about a distribution.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetDistribution>`_

        **Request Syntax**
        ::

          response = client.get_distribution(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The distribution's ID. If the ID is empty, an empty distribution configuration is
          returned.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Distribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'InProgressInvalidationBatches': 123,
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'DistributionConfig': {
                        'CallerReference': 'string',
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'DefaultRootObject': 'string',
                        'Origins': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'DomainName': 'string',
                                    'OriginPath': 'string',
                                    'CustomHeaders': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'HeaderName': 'string',
                                                'HeaderValue': 'string'
                                            },
                                        ]
                                    },
                                    'S3OriginConfig': {
                                        'OriginAccessIdentity': 'string'
                                    },
                                    'CustomOriginConfig': {
                                        'HTTPPort': 123,
                                        'HTTPSPort': 123,
                                        'OriginProtocolPolicy':
                                        'http-only'|'match-viewer'
                                        |'https-only',
                                        'OriginSslProtocols': {
                                            'Quantity': 123,
                                            'Items': [
                                                'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                            ]
                                        },
                                        'OriginReadTimeout': 123,
                                        'OriginKeepaliveTimeout': 123
                                    }
                                },
                            ]
                        },
                        'OriginGroups': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'FailoverCriteria': {
                                        'StatusCodes': {
                                            'Quantity': 123,
                                            'Items': [
                                                123,
                                            ]
                                        }
                                    },
                                    'Members': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'OriginId': 'string'
                                            },
                                        ]
                                    }
                                },
                            ]
                        },
                        'DefaultCacheBehavior': {
                            'TargetOriginId': 'string',
                            'ForwardedValues': {
                                'QueryString': True|False,
                                'Cookies': {
                                    'Forward': 'none'|'whitelist'|'all',
                                    'WhitelistedNames': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'Headers': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'QueryStringCacheKeys': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'TrustedSigners': {
                                'Enabled': True|False,
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                            'MinTTL': 123,
                            'AllowedMethods': {
                                'Quantity': 123,
                                'Items': [
                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                ],
                                'CachedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ]
                                }
                            },
                            'SmoothStreaming': True|False,
                            'DefaultTTL': 123,
                            'MaxTTL': 123,
                            'Compress': True|False,
                            'LambdaFunctionAssociations': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'LambdaFunctionARN': 'string',
                                        'EventType':
                                        'viewer-request'
                                        |'viewer-response'
                                        |'origin-request'
                                        |'origin-response',
                                        'IncludeBody': True|False
                                    },
                                ]
                            },
                            'FieldLevelEncryptionId': 'string'
                        },
                        'CacheBehaviors': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PathPattern': 'string',
                                    'TargetOriginId': 'string',
                                    'ForwardedValues': {
                                        'QueryString': True|False,
                                        'Cookies': {
                                            'Forward': 'none'|'whitelist'|'all',
                                            'WhitelistedNames': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            }
                                        },
                                        'Headers': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        },
                                        'QueryStringCacheKeys': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'TrustedSigners': {
                                        'Enabled': True|False,
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'ViewerProtocolPolicy':
                                    'allow-all'|'https-only'
                                    |'redirect-to-https',
                                    'MinTTL': 123,
                                    'AllowedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ],
                                        'CachedMethods': {
                                            'Quantity': 123,
                                            'Items': [
                                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                |'DELETE',
                                            ]
                                        }
                                    },
                                    'SmoothStreaming': True|False,
                                    'DefaultTTL': 123,
                                    'MaxTTL': 123,
                                    'Compress': True|False,
                                    'LambdaFunctionAssociations': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'LambdaFunctionARN': 'string',
                                                'EventType':
                                                'viewer-request'|'viewer-response'|'origin-request'
                                                |'origin-response',
                                                'IncludeBody': True|False
                                            },
                                        ]
                                    },
                                    'FieldLevelEncryptionId': 'string'
                                },
                            ]
                        },
                        'CustomErrorResponses': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'ErrorCode': 123,
                                    'ResponsePagePath': 'string',
                                    'ResponseCode': 'string',
                                    'ErrorCachingMinTTL': 123
                                },
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'IncludeCookies': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False,
                        'ViewerCertificate': {
                            'CloudFrontDefaultCertificate': True|False,
                            'IAMCertificateId': 'string',
                            'ACMCertificateArn': 'string',
                            'SSLSupportMethod': 'sni-only'|'vip',
                            'MinimumProtocolVersion':
                            'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                            |'TLSv1.2_2018',
                            'Certificate': 'string',
                            'CertificateSource': 'cloudfront'|'iam'|'acm'
                        },
                        'Restrictions': {
                            'GeoRestriction': {
                                'RestrictionType': 'blacklist'|'whitelist'|'none',
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            }
                        },
                        'WebACLId': 'string',
                        'HttpVersion': 'http1.1'|'http2',
                        'IsIPV6Enabled': True|False
                    },
                    'AliasICPRecordals': [
                        {
                            'CNAME': 'string',
                            'ICPRecordalStatus': 'APPROVED'|'SUSPENDED'|'PENDING'
                        },
                    ]
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Distribution** *(dict) --*

              The distribution's information.

              - **Id** *(string) --*

                The identifier for the distribution. For example: ``EDFDVBD632BHDS5`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                This response element indicates the current status of the distribution. When the
                status is ``Deployed`` , the distribution's information is fully propagated to all
                CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time the distribution was last modified.

              - **InProgressInvalidationBatches** *(integer) --*

                The number of invalidation batches currently in progress.

              - **DomainName** *(string) --*

                The domain name corresponding to the distribution, for example,
                ``d111111abcdef8.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                CloudFront automatically adds this element to the response only if you've set up the
                distribution to serve private content with signed URLs. The element lists the key
                pair IDs that CloudFront is aware of for each trusted signer. The ``Signer`` child
                element lists the AWS account number of the trusted signer (or an empty ``Self``
                element if the signer is you). The ``Signer`` element also includes the IDs of any
                active key pairs associated with the trusted signer's AWS account. If no
                ``KeyPairId`` element appears for a ``Signer`` , that signer can't create working
                signed URLs.

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **DistributionConfig** *(dict) --*

                The current configuration information for the distribution. Send a ``GET`` request
                to the ``/*CloudFront API version* /distribution ID/config`` resource.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``DistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **DefaultRootObject** *(string) --*

                  The object that you want CloudFront to request from your origin (for example,
                  ``index.html`` ) when a viewer requests the root URL for your distribution
                  (``http://www.example.com`` ) instead of an object in your distribution
                  (``http://www.example.com/product-description.html`` ). Specifying a default root
                  object avoids exposing the contents of your distribution.

                  Specify only the object name, for example, ``index.html`` . Don't add a ``/``
                  before the object name.

                  If you don't want to specify a default root object when you create a distribution,
                  include an empty ``DefaultRootObject`` element.

                  To delete the default root object from an existing distribution, update the
                  distribution configuration and include an empty ``DefaultRootObject`` element.

                  To replace the default root object, update the distribution configuration and
                  specify the new object.

                  For more information about the default root object, see `Creating a Default Root
                  Object
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Origins** *(dict) --*

                  A complex type that contains information about origins for this distribution.

                  - **Quantity** *(integer) --*

                    The number of origins or origin groups for this distribution.

                  - **Items** *(list) --*

                    A complex type that contains origins or origin groups for this distribution.

                    - *(dict) --*

                      A complex type that describes the Amazon S3 bucket, HTTP server (for example,
                      a web server), Amazon MediaStore, or other server from which CloudFront gets
                      your files. This can also be an origin group, if you've created an origin
                      group. You must specify at least one origin or origin group.

                      For the current limit on the number of origins or origin groups that you can
                      specify for a distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Id** *(string) --*

                        A unique identifier for the origin or origin group. The value of ``Id`` must
                        be unique within the distribution.

                        When you specify the value of ``TargetOriginId`` for the default cache
                        behavior or for another cache behavior, you indicate the origin to which you
                        want the cache behavior to route requests by specifying the value of the
                        ``Id`` element for that origin. When a request matches the path pattern for
                        that cache behavior, CloudFront routes the request to the specified origin.
                        For more information, see `Cache Behavior Settings
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **DomainName** *(string) --*

                         **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you
                         want CloudFront to get objects for this origin, for example,
                         ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be
                         configured as a website endpoint, enter the Amazon S3 static website
                         hosting endpoint for the bucket.

                        For more information about specifying this value for different types of
                        origins, see `Origin Domain Name
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                        in the *Amazon CloudFront Developer Guide* .

                        Constraints for Amazon S3 origins:

                        * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                        specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                        * The bucket name must be between 3 and 63 characters long (inclusive).

                        * The bucket name must contain only lowercase characters, numbers, periods,
                        underscores, and dashes.

                        * The bucket name must not contain adjacent periods.

                         **Custom Origins** : The DNS domain name for the HTTP server from which you
                         want CloudFront to get objects for this origin, for example,
                         ``www.example.com`` .

                        Constraints for custom origins:

                        * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9,
                        dot (.), hyphen (-), or underscore (_) characters.

                        * The name cannot exceed 128 characters.

                      - **OriginPath** *(string) --*

                        An optional element that causes CloudFront to request your content from a
                        directory in your Amazon S3 bucket or your custom origin. When you include
                        the ``OriginPath`` element, specify the directory name, beginning with a
                        ``/`` . CloudFront appends the directory name to the value of ``DomainName``
                        , for example, ``example.com/production`` . Do not include a ``/`` at the
                        end of the directory name.

                        For example, suppose you've specified the following values for your
                        distribution:

                        * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                        * ``OriginPath`` : ``/production``

                        * ``CNAME`` : ``example.com``

                        When a user enters ``example.com/index.html`` in a browser, CloudFront sends
                        a request to Amazon S3 for ``myawsbucket/production/index.html`` .

                        When a user enters ``example.com/acme/index.html`` in a browser, CloudFront
                        sends a request to Amazon S3 for ``myawsbucket/production/acme/index.html``
                        .

                      - **CustomHeaders** *(dict) --*

                        A complex type that contains names and values for the custom headers that
                        you want.

                        - **Quantity** *(integer) --*

                          The number of custom headers, if any, for this distribution.

                        - **Items** *(list) --*

                           **Optional** : A list that contains one ``OriginCustomHeader`` element
                           for each custom header that you want CloudFront to forward to the origin.
                           If Quantity is ``0`` , omit ``Items`` .

                          - *(dict) --*

                            A complex type that contains ``HeaderName`` and ``HeaderValue``
                            elements, if any, for this distribution.

                            - **HeaderName** *(string) --*

                              The name of a header that you want CloudFront to forward to your
                              origin. For more information, see `Forwarding Custom Headers to Your
                              Origin (Web Distributions Only)
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                              in the *Amazon CloudFront Developer Guide* .

                            - **HeaderValue** *(string) --*

                              The value for the header that you specified in the ``HeaderName``
                              field.

                      - **S3OriginConfig** *(dict) --*

                        A complex type that contains information about the Amazon S3 origin. If the
                        origin is a custom origin, use the ``CustomOriginConfig`` element instead.

                        - **OriginAccessIdentity** *(string) --*

                          The CloudFront origin access identity to associate with the origin. Use an
                          origin access identity to configure the origin so that viewers can *only*
                          access objects in an Amazon S3 bucket through CloudFront. The format of
                          the value is:

                          origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                          where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                          returned in the ``ID`` element when you created the origin access
                          identity.

                          If you want viewers to be able to access objects using either the
                          CloudFront URL or the Amazon S3 URL, specify an empty
                          ``OriginAccessIdentity`` element.

                          To delete the origin access identity from an existing distribution, update
                          the distribution configuration and include an empty
                          ``OriginAccessIdentity`` element.

                          To replace the origin access identity, update the distribution
                          configuration and specify the new origin access identity.

                          For more information about the origin access identity, see `Serving
                          Private Content through CloudFront
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **CustomOriginConfig** *(dict) --*

                        A complex type that contains information about a custom origin. If the
                        origin is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                        - **HTTPPort** *(integer) --*

                          The HTTP port the custom origin listens on.

                        - **HTTPSPort** *(integer) --*

                          The HTTPS port the custom origin listens on.

                        - **OriginProtocolPolicy** *(string) --*

                          The origin protocol policy to apply to your origin.

                        - **OriginSslProtocols** *(dict) --*

                          The SSL/TLS protocols that you want CloudFront to use when communicating
                          with your origin over HTTPS.

                          - **Quantity** *(integer) --*

                            The number of SSL/TLS protocols that you want to allow CloudFront to use
                            when establishing an HTTPS connection with this origin.

                          - **Items** *(list) --*

                            A list that contains allowed SSL/TLS protocols for this distribution.

                            - *(string) --*

                        - **OriginReadTimeout** *(integer) --*

                          You can create a custom origin read timeout. All timeout units are in
                          seconds. The default origin read timeout is 30 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 4 seconds; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                        - **OriginKeepaliveTimeout** *(integer) --*

                          You can create a custom keep-alive timeout. All timeout units are in
                          seconds. The default keep-alive timeout is 5 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 1 second; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                - **OriginGroups** *(dict) --*

                  A complex type that contains information about origin groups for this
                  distribution.

                  - **Quantity** *(integer) --*

                    The number of origin groups.

                  - **Items** *(list) --*

                    The items (origin groups) in a distribution.

                    - *(dict) --*

                      An origin group includes two origins (a primary origin and a second origin to
                      failover to) and a failover criteria that you specify. You create an origin
                      group to support origin failover in CloudFront. When you create or update a
                      distribution, you can specifiy the origin group instead of a single origin,
                      and CloudFront will failover from the primary origin to the second origin
                      under the failover conditions that you've chosen.

                      - **Id** *(string) --*

                        The origin group's ID.

                      - **FailoverCriteria** *(dict) --*

                        A complex type that contains information about the failover criteria for an
                        origin group.

                        - **StatusCodes** *(dict) --*

                          The status codes that, when returned from the primary origin, will trigger
                          CloudFront to failover to the second origin.

                          - **Quantity** *(integer) --*

                            The number of status codes.

                          - **Items** *(list) --*

                            The items (status codes) for an origin group.

                            - *(integer) --*

                      - **Members** *(dict) --*

                        A complex type that contains information about the origins in an origin
                        group.

                        - **Quantity** *(integer) --*

                          The number of origins in an origin group.

                        - **Items** *(list) --*

                          Items (origins) in an origin group.

                          - *(dict) --*

                            An origin in an origin group.

                            - **OriginId** *(string) --*

                              The ID for an origin in an origin group.

                - **DefaultCacheBehavior** *(dict) --*

                  A complex type that describes the default cache behavior if you don't specify a
                  ``CacheBehavior`` element or if files don't match any of the values of
                  ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default
                  cache behavior.

                  - **TargetOriginId** *(string) --*

                    The value of ``ID`` for the origin that you want CloudFront to route requests to
                    when a request matches the path pattern either for a cache behavior or for the
                    default cache behavior in your distribution.

                  - **ForwardedValues** *(dict) --*

                    A complex type that specifies how CloudFront handles query strings and cookies.

                    - **QueryString** *(boolean) --*

                      Indicates whether you want CloudFront to forward query strings to the origin
                      that is associated with this cache behavior and cache based on the query
                      string parameters. CloudFront behavior depends on the value of ``QueryString``
                      and on the values that you specify for ``QueryStringCacheKeys`` , if any:

                      If you specify true for ``QueryString`` and you don't specify any values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin and caches based on all query string parameters. Depending on how
                      many query string parameters and values you have, this can adversely affect
                      performance because CloudFront must forward more requests to the origin.

                      If you specify true for ``QueryString`` and you specify one or more values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin, but it only caches based on the query string parameters that you
                      specify.

                      If you specify false for ``QueryString`` , CloudFront doesn't forward any
                      query string parameters to the origin, and doesn't cache based on query string
                      parameters.

                      For more information, see `Configuring CloudFront to Cache Based on Query
                      String Parameters
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Cookies** *(dict) --*

                      A complex type that specifies whether you want CloudFront to forward cookies
                      to the origin and, if so, which ones. For more information about forwarding
                      cookies to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Forward** *(string) --*

                        Specifies which cookies to forward to the origin for this cache behavior:
                        all, none, or the list of cookies specified in the ``WhitelistedNames``
                        complex type.

                        Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                        requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                      - **WhitelistedNames** *(dict) --*

                        Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                        complex type that specifies how many different cookies you want CloudFront
                        to forward to the origin for this cache behavior and, if you want to forward
                        selected cookies, the names of those cookies.

                        If you specify ``all`` or none for the value of ``Forward`` , omit
                        ``WhitelistedNames`` . If you change the value of ``Forward`` from
                        ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                        element and its child elements, CloudFront deletes them automatically.

                        For the current limit on the number of cookie names that you can whitelist
                        for each cache behavior, see `CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Quantity** *(integer) --*

                          The number of different cookies that you want CloudFront to forward to the
                          origin for this cache behavior.

                        - **Items** *(list) --*

                          A complex type that contains one ``Name`` element for each cookie that you
                          want CloudFront to forward to the origin for this cache behavior.

                          - *(string) --*

                    - **Headers** *(dict) --*

                      A complex type that specifies the ``Headers`` , if any, that you want
                      CloudFront to forward to the origin for this cache behavior (whitelisted
                      headers). For the headers that you specify, CloudFront also caches separate
                      versions of a specified object that is based on the header values in viewer
                      requests.

                      For more information, see `Caching Content Based on Request Headers
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Quantity** *(integer) --*

                        The number of different headers that you want CloudFront to base caching on
                        for this cache behavior. You can configure each cache behavior in a web
                        distribution to do one of the following:

                        * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                        and ``*`` for ``Name`` .

                        .. warning::

                           CloudFront doesn't cache the objects that are associated with this cache
                           behavior. Instead, CloudFront sends every request to the origin.

                        * **Forward a whitelist of headers you specify** : Specify the number of
                        headers that you want CloudFront to base caching on. Then specify the header
                        names in ``Name`` elements. CloudFront caches your objects based on the
                        values in the specified headers.

                        * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                        omit ``Items`` . In this configuration, CloudFront doesn't cache based on
                        the values in the request headers.

                        Regardless of which option you choose, CloudFront forwards headers to your
                        origin based on whether the origin is an S3 bucket or a custom origin. See
                        the following documentation:

                        * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                        Updates
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                        * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                      - **Items** *(list) --*

                        A list that contains one ``Name`` element for each header that you want
                        CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                        ``0`` , omit ``Items`` .

                        - *(string) --*

                    - **QueryStringCacheKeys** *(dict) --*

                      A complex type that contains information about the query string parameters
                      that you want CloudFront to use for caching for this cache behavior.

                      - **Quantity** *(integer) --*

                        The number of ``whitelisted`` query string parameters for a cache behavior.

                      - **Items** *(list) --*

                        A list that contains the query string parameters that you want CloudFront to
                        use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you
                        can omit ``Items`` .

                        - *(string) --*

                  - **TrustedSigners** *(dict) --*

                    A complex type that specifies the AWS accounts, if any, that you want to allow
                    to create signed URLs for private content.

                    If you want to require signed URLs in requests for objects in the target origin
                    that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                    ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                    For more information, see `Serving Private Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    If you don't want to require signed URLs in requests for objects that match
                    ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                    Omit ``Items`` .

                    To add, change, or remove one or more trusted signers, change ``Enabled`` to
                    ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                    specify all of the trusted signers that you want to include in the updated
                    distribution.

                    - **Enabled** *(boolean) --*

                      Specifies whether you want to require viewers to use signed URLs to access the
                      files specified by ``PathPattern`` and ``TargetOriginId`` .

                    - **Quantity** *(integer) --*

                      The number of trusted signers for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains trusted signers for this cache
                       behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(string) --*

                  - **ViewerProtocolPolicy** *(string) --*

                    The protocol that viewers can use to access the files in the origin specified by
                    ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                    You can specify the following options:

                    * ``allow-all`` : Viewers can use HTTP or HTTPS.

                    * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                    returns an HTTP status code of 301 (Moved Permanently) to the viewer along with
                    the HTTPS URL. The viewer then resubmits the request using the new URL.

                    * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                    status code of 403 (Forbidden).

                    For more information about requiring the HTTPS protocol, see `Using an HTTPS
                    Connection to Access Your Objects
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    .. note::

                      The only way to guarantee that viewers retrieve an object that was fetched
                      from the origin using HTTPS is never to use any other protocol to fetch the
                      object. If you have recently changed from HTTP to HTTPS, we recommend that you
                      clear your objects' cache because cached objects are protocol agnostic. That
                      means that an edge location will return an object from the cache regardless of
                      whether the current request protocol matches the protocol used previously. For
                      more information, see `Managing How Long Content Stays in an Edge Cache
                      (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **MinTTL** *(integer) --*

                    The minimum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. For more information, see `Managing How Long
                    Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                    headers to your origin (under ``Headers`` , if you specify ``1`` for
                    ``Quantity`` and ``*`` for ``Name`` ).

                  - **AllowedMethods** *(dict) --*

                    A complex type that controls which HTTP methods CloudFront processes and
                    forwards to your Amazon S3 bucket or your custom origin. There are three
                    choices:

                    * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                    * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                    requests.

                    If you pick the third choice, you may need to restrict access to your Amazon S3
                    bucket or to your custom origin so users can't perform operations that you don't
                    want them to. For example, you might not want users to have permissions to
                    delete objects from your origin.

                    - **Quantity** *(integer) --*

                      The number of HTTP methods that you want CloudFront to forward to your origin.
                      Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                      ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                      PATCH, POST`` , and ``DELETE`` requests).

                    - **Items** *(list) --*

                      A complex type that contains the HTTP methods that you want CloudFront to
                      process and forward to your origin.

                      - *(string) --*

                    - **CachedMethods** *(dict) --*

                      A complex type that controls whether CloudFront caches the response to
                      requests using the specified HTTP methods. There are two choices:

                      * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                      * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                      requests.

                      If you pick the second choice for your Amazon S3 Origin, you may need to
                      forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                      Origin headers for the responses to be cached correctly.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods for which you want CloudFront to cache responses.
                        Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                        requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                        ``OPTIONS`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        cache responses to.

                        - *(string) --*

                  - **SmoothStreaming** *(boolean) --*

                    Indicates whether you want to distribute media files in the Microsoft Smooth
                    Streaming format using the origin that is associated with this cache behavior.
                    If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                    for ``SmoothStreaming`` , you can still distribute other content using this
                    cache behavior if the content matches the value of ``PathPattern`` .

                  - **DefaultTTL** *(integer) --*

                    The default amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                    ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                    see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MaxTTL** *(integer) --*

                    The maximum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                    s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                    Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Compress** *(boolean) --*

                    Whether you want CloudFront to automatically compress certain files for this
                    cache behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                    information, see `Serving Compressed Files
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **LambdaFunctionAssociations** *(dict) --*

                    A complex type that contains zero or more Lambda function associations for a
                    cache behavior.

                    - **Quantity** *(integer) --*

                      The number of Lambda function associations for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                       items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                       ``Items`` .

                      - *(dict) --*

                        A complex type that contains a Lambda function association.

                        - **LambdaFunctionARN** *(string) --*

                          The ARN of the Lambda function. You must specify the ARN of a function
                          version; you can't specify a Lambda alias or $LATEST.

                        - **EventType** *(string) --*

                          Specifies the event type that triggers a Lambda function invocation. You
                          can specify the following values:

                          * ``viewer-request`` : The function executes when CloudFront receives a
                          request from a viewer and before it checks to see whether the requested
                          object is in the edge cache.

                          * ``origin-request`` : The function executes only when CloudFront forwards
                          a request to your origin. When the requested object is in the edge cache,
                          the function doesn't execute.

                          * ``origin-response`` : The function executes after CloudFront receives a
                          response from the origin and before it caches the object in the response.
                          When the requested object is in the edge cache, the function doesn't
                          execute.

                          * ``viewer-response`` : The function executes before CloudFront returns
                          the requested object to the viewer. The function executes regardless of
                          whether the object was already in the edge cache. If the origin returns an
                          HTTP status code other than HTTP 200 (OK), the function doesn't execute.

                        - **IncludeBody** *(boolean) --*

                          A flag that allows a Lambda function to have read access to the body
                          content. For more information, see `Accessing the Request Body by Choosing
                          the Include Body Option
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                          in the Amazon CloudFront Developer Guide.

                  - **FieldLevelEncryptionId** *(string) --*

                    The value of ``ID`` for the field-level encryption configuration that you want
                    CloudFront to use for encrypting specific fields of data for a cache behavior or
                    for the default cache behavior in your distribution.

                - **CacheBehaviors** *(dict) --*

                  A complex type that contains zero or more ``CacheBehavior`` elements.

                  - **Quantity** *(integer) --*

                    The number of cache behaviors for this distribution.

                  - **Items** *(list) --*

                    Optional: A complex type that contains cache behaviors for this distribution. If
                    ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that describes how CloudFront processes requests.

                      You must create at least as many cache behaviors (including the default cache
                      behavior) as you have origins if you want CloudFront to distribute objects
                      from all of the origins. Each cache behavior specifies the one origin from
                      which you want CloudFront to get objects. If you have two origins and only the
                      default cache behavior, the default cache behavior will cause CloudFront to
                      get objects from one of the origins, but the other origin is never used.

                      For the current limit on the number of cache behaviors that you can add to a
                      distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      If you don't want to specify any cache behaviors, include only an empty
                      ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element,
                      or CloudFront returns a ``MalformedXML`` error.

                      To delete all cache behaviors in an existing distribution, update the
                      distribution configuration and include only an empty ``CacheBehaviors``
                      element.

                      To add, change, or remove one or more cache behaviors, update the distribution
                      configuration and specify all of the cache behaviors that you want to include
                      in the updated distribution.

                      For more information about cache behaviors, see `Cache Behaviors
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **PathPattern** *(string) --*

                        The pattern (for example, ``images/*.jpg`` ) that specifies which requests
                        to apply the behavior to. When CloudFront receives a viewer request, the
                        requested path is compared with path patterns in the order in which cache
                        behaviors are listed in the distribution.

                        .. note::

                          You can optionally include a slash (``/`` ) at the beginning of the path
                          pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same
                          with or without the leading ``/`` .

                        The path pattern for the default cache behavior is ``*`` and cannot be
                        changed. If the request for an object does not match the path pattern for
                        any cache behaviors, CloudFront applies the behavior in the default cache
                        behavior.

                        For more information, see `Path Pattern
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **TargetOriginId** *(string) --*

                        The value of ``ID`` for the origin that you want CloudFront to route
                        requests to when a request matches the path pattern either for a cache
                        behavior or for the default cache behavior in your distribution.

                      - **ForwardedValues** *(dict) --*

                        A complex type that specifies how CloudFront handles query strings and
                        cookies.

                        - **QueryString** *(boolean) --*

                          Indicates whether you want CloudFront to forward query strings to the
                          origin that is associated with this cache behavior and cache based on the
                          query string parameters. CloudFront behavior depends on the value of
                          ``QueryString`` and on the values that you specify for
                          ``QueryStringCacheKeys`` , if any:

                          If you specify true for ``QueryString`` and you don't specify any values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin and caches based on all query string parameters.
                          Depending on how many query string parameters and values you have, this
                          can adversely affect performance because CloudFront must forward more
                          requests to the origin.

                          If you specify true for ``QueryString`` and you specify one or more values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin, but it only caches based on the query string
                          parameters that you specify.

                          If you specify false for ``QueryString`` , CloudFront doesn't forward any
                          query string parameters to the origin, and doesn't cache based on query
                          string parameters.

                          For more information, see `Configuring CloudFront to Cache Based on Query
                          String Parameters
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **Cookies** *(dict) --*

                          A complex type that specifies whether you want CloudFront to forward
                          cookies to the origin and, if so, which ones. For more information about
                          forwarding cookies to the origin, see `How CloudFront Forwards, Caches,
                          and Logs Cookies
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Forward** *(string) --*

                            Specifies which cookies to forward to the origin for this cache
                            behavior: all, none, or the list of cookies specified in the
                            ``WhitelistedNames`` complex type.

                            Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                            requests to an Amazon S3 origin, specify none for the ``Forward``
                            element.

                          - **WhitelistedNames** *(dict) --*

                            Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                            complex type that specifies how many different cookies you want
                            CloudFront to forward to the origin for this cache behavior and, if you
                            want to forward selected cookies, the names of those cookies.

                            If you specify ``all`` or none for the value of ``Forward`` , omit
                            ``WhitelistedNames`` . If you change the value of ``Forward`` from
                            ``whitelist`` to all or none and you don't delete the
                            ``WhitelistedNames`` element and its child elements, CloudFront deletes
                            them automatically.

                            For the current limit on the number of cookie names that you can
                            whitelist for each cache behavior, see `CloudFront Limits
                            <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                            in the *AWS General Reference* .

                            - **Quantity** *(integer) --*

                              The number of different cookies that you want CloudFront to forward to
                              the origin for this cache behavior.

                            - **Items** *(list) --*

                              A complex type that contains one ``Name`` element for each cookie that
                              you want CloudFront to forward to the origin for this cache behavior.

                              - *(string) --*

                        - **Headers** *(dict) --*

                          A complex type that specifies the ``Headers`` , if any, that you want
                          CloudFront to forward to the origin for this cache behavior (whitelisted
                          headers). For the headers that you specify, CloudFront also caches
                          separate versions of a specified object that is based on the header values
                          in viewer requests.

                          For more information, see `Caching Content Based on Request Headers
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Quantity** *(integer) --*

                            The number of different headers that you want CloudFront to base caching
                            on for this cache behavior. You can configure each cache behavior in a
                            web distribution to do one of the following:

                            * **Forward all headers to your origin** : Specify ``1`` for
                            ``Quantity`` and ``*`` for ``Name`` .

                            .. warning::

                               CloudFront doesn't cache the objects that are associated with this
                               cache behavior. Instead, CloudFront sends every request to the
                               origin.

                            * **Forward a whitelist of headers you specify** : Specify the number of
                            headers that you want CloudFront to base caching on. Then specify the
                            header names in ``Name`` elements. CloudFront caches your objects based
                            on the values in the specified headers.

                            * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                            and omit ``Items`` . In this configuration, CloudFront doesn't cache
                            based on the values in the request headers.

                            Regardless of which option you choose, CloudFront forwards headers to
                            your origin based on whether the origin is an S3 bucket or a custom
                            origin. See the following documentation:

                            * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                            Updates
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                            * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                          - **Items** *(list) --*

                            A list that contains one ``Name`` element for each header that you want
                            CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                            ``0`` , omit ``Items`` .

                            - *(string) --*

                        - **QueryStringCacheKeys** *(dict) --*

                          A complex type that contains information about the query string parameters
                          that you want CloudFront to use for caching for this cache behavior.

                          - **Quantity** *(integer) --*

                            The number of ``whitelisted`` query string parameters for a cache
                            behavior.

                          - **Items** *(list) --*

                            A list that contains the query string parameters that you want
                            CloudFront to use as a basis for caching for a cache behavior. If
                            ``Quantity`` is 0, you can omit ``Items`` .

                            - *(string) --*

                      - **TrustedSigners** *(dict) --*

                        A complex type that specifies the AWS accounts, if any, that you want to
                        allow to create signed URLs for private content.

                        If you want to require signed URLs in requests for objects in the target
                        origin that match the ``PathPattern`` for this cache behavior, specify
                        ``true`` for ``Enabled`` , and specify the applicable values for
                        ``Quantity`` and ``Items`` . For more information, see `Serving Private
                        Content through CloudFront
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        If you don't want to require signed URLs in requests for objects that match
                        ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for
                        ``Quantity`` . Omit ``Items`` .

                        To add, change, or remove one or more trusted signers, change ``Enabled`` to
                        ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                        and specify all of the trusted signers that you want to include in the
                        updated distribution.

                        - **Enabled** *(boolean) --*

                          Specifies whether you want to require viewers to use signed URLs to access
                          the files specified by ``PathPattern`` and ``TargetOriginId`` .

                        - **Quantity** *(integer) --*

                          The number of trusted signers for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains trusted signers for this
                           cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                          - *(string) --*

                      - **ViewerProtocolPolicy** *(string) --*

                        The protocol that viewers can use to access the files in the origin
                        specified by ``TargetOriginId`` when a request matches the path pattern in
                        ``PathPattern`` . You can specify the following options:

                        * ``allow-all`` : Viewers can use HTTP or HTTPS.

                        * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                        returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                        with the HTTPS URL. The viewer then resubmits the request using the new URL.

                        * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                        HTTP status code of 403 (Forbidden).

                        For more information about requiring the HTTPS protocol, see `Using an HTTPS
                        Connection to Access Your Objects
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        .. note::

                          The only way to guarantee that viewers retrieve an object that was fetched
                          from the origin using HTTPS is never to use any other protocol to fetch
                          the object. If you have recently changed from HTTP to HTTPS, we recommend
                          that you clear your objects' cache because cached objects are protocol
                          agnostic. That means that an edge location will return an object from the
                          cache regardless of whether the current request protocol matches the
                          protocol used previously. For more information, see `Managing How Long
                          Content Stays in an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **MinTTL** *(integer) --*

                        The minimum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. For more information, see
                        `Managing How Long Content Stays in an Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                        all headers to your origin (under ``Headers`` , if you specify ``1`` for
                        ``Quantity`` and ``*`` for ``Name`` ).

                      - **AllowedMethods** *(dict) --*

                        A complex type that controls which HTTP methods CloudFront processes and
                        forwards to your Amazon S3 bucket or your custom origin. There are three
                        choices:

                        * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                        * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                        * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                        ``DELETE`` requests.

                        If you pick the third choice, you may need to restrict access to your Amazon
                        S3 bucket or to your custom origin so users can't perform operations that
                        you don't want them to. For example, you might not want users to have
                        permissions to delete objects from your origin.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods that you want CloudFront to forward to your
                          origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                          ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                          OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          process and forward to your origin.

                          - *(string) --*

                        - **CachedMethods** *(dict) --*

                          A complex type that controls whether CloudFront caches the response to
                          requests using the specified HTTP methods. There are two choices:

                          * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                          * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                          requests.

                          If you pick the second choice for your Amazon S3 Origin, you may need to
                          forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                          Origin headers for the responses to be cached correctly.

                          - **Quantity** *(integer) --*

                            The number of HTTP methods for which you want CloudFront to cache
                            responses. Valid values are ``2`` (for caching responses to ``GET`` and
                            ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` ,
                            ``HEAD`` , and ``OPTIONS`` requests).

                          - **Items** *(list) --*

                            A complex type that contains the HTTP methods that you want CloudFront
                            to cache responses to.

                            - *(string) --*

                      - **SmoothStreaming** *(boolean) --*

                        Indicates whether you want to distribute media files in the Microsoft Smooth
                        Streaming format using the origin that is associated with this cache
                        behavior. If so, specify ``true`` ; if not, specify ``false`` . If you
                        specify ``true`` for ``SmoothStreaming`` , you can still distribute other
                        content using this cache behavior if the content matches the value of
                        ``PathPattern`` .

                      - **DefaultTTL** *(integer) --*

                        The default amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin does not add HTTP headers such as
                        ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to
                        objects. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **MaxTTL** *(integer) --*

                        The maximum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin adds HTTP headers such as ``Cache-Control
                        max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to objects. For
                        more information, see `Managing How Long Content Stays in an Edge Cache
                        (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Compress** *(boolean) --*

                        Whether you want CloudFront to automatically compress certain files for this
                        cache behavior. If so, specify true; if not, specify false. For more
                        information, see `Serving Compressed Files
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **LambdaFunctionAssociations** *(dict) --*

                        A complex type that contains zero or more Lambda function associations for a
                        cache behavior.

                        - **Quantity** *(integer) --*

                          The number of Lambda function associations for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                           items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                           ``Items`` .

                          - *(dict) --*

                            A complex type that contains a Lambda function association.

                            - **LambdaFunctionARN** *(string) --*

                              The ARN of the Lambda function. You must specify the ARN of a function
                              version; you can't specify a Lambda alias or $LATEST.

                            - **EventType** *(string) --*

                              Specifies the event type that triggers a Lambda function invocation.
                              You can specify the following values:

                              * ``viewer-request`` : The function executes when CloudFront receives
                              a request from a viewer and before it checks to see whether the
                              requested object is in the edge cache.

                              * ``origin-request`` : The function executes only when CloudFront
                              forwards a request to your origin. When the requested object is in the
                              edge cache, the function doesn't execute.

                              * ``origin-response`` : The function executes after CloudFront
                              receives a response from the origin and before it caches the object in
                              the response. When the requested object is in the edge cache, the
                              function doesn't execute.

                              * ``viewer-response`` : The function executes before CloudFront
                              returns the requested object to the viewer. The function executes
                              regardless of whether the object was already in the edge cache. If the
                              origin returns an HTTP status code other than HTTP 200 (OK), the
                              function doesn't execute.

                            - **IncludeBody** *(boolean) --*

                              A flag that allows a Lambda function to have read access to the body
                              content. For more information, see `Accessing the Request Body by
                              Choosing the Include Body Option
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                              in the Amazon CloudFront Developer Guide.

                      - **FieldLevelEncryptionId** *(string) --*

                        The value of ``ID`` for the field-level encryption configuration that you
                        want CloudFront to use for encrypting specific fields of data for a cache
                        behavior or for the default cache behavior in your distribution.

                - **CustomErrorResponses** *(dict) --*

                  A complex type that controls the following:

                  * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                  custom error messages before returning the response to the viewer.

                  * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                  For more information about custom error pages, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --*

                    The number of HTTP status codes for which you want to specify a custom error
                    page and/or a caching duration. If ``Quantity`` is ``0`` , you can omit
                    ``Items`` .

                  - **Items** *(list) --*

                    A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                    status code for which you want to specify a custom error page and/or a caching
                    duration.

                    - *(dict) --*

                      A complex type that controls:

                      * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                      custom error messages before returning the response to the viewer.

                      * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                      For more information about custom error pages, see `Customizing Error
                      Responses
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **ErrorCode** *(integer) --*

                        The HTTP status code for which you want to specify a custom error page
                        and/or a caching duration.

                      - **ResponsePagePath** *(string) --*

                        The path to the custom error page that you want CloudFront to return to a
                        viewer when your origin returns the HTTP status code specified by
                        ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you
                        want to store your objects and your custom error pages in different
                        locations, your distribution must include a cache behavior for which the
                        following is true:

                        * The value of ``PathPattern`` matches the path to your custom error
                        messages. For example, suppose you saved custom error pages for 4xx errors
                        in an Amazon S3 bucket in a directory named ``/4xx-errors`` . Your
                        distribution must include a cache behavior for which the path pattern routes
                        requests for your custom error pages to that location, for example,
                        ``/4xx-errors/*`` .

                        * The value of ``TargetOriginId`` specifies the value of the ``ID`` element
                        for the origin that contains your custom error pages.

                        If you specify a value for ``ResponsePagePath`` , you must also specify a
                        value for ``ResponseCode`` . If you don't want to specify a value, include
                        an empty element, ``<ResponsePagePath>`` , in the XML document.

                        We recommend that you store custom error pages in an Amazon S3 bucket. If
                        you store custom error pages on an HTTP server and the server starts to
                        return 5xx errors, CloudFront can't get the files that you want to return to
                        viewers because the origin server is unavailable.

                      - **ResponseCode** *(string) --*

                        The HTTP status code that you want CloudFront to return to the viewer along
                        with the custom error page. There are a variety of reasons that you might
                        want CloudFront to return a status code different from the status code that
                        your origin returned to CloudFront, for example:

                        * Some Internet devices (some firewalls and corporate proxies, for example)
                        intercept HTTP 4xx and 5xx and prevent the response from being returned to
                        the viewer. If you substitute ``200`` , the response typically won't be
                        intercepted.

                        * If you don't care about distinguishing among different client errors or
                        server errors, you can specify ``400`` or ``500`` as the ``ResponseCode``
                        for all 4xx or 5xx errors.

                        * You might want to return a ``200`` status code (OK) and static website so
                        your customers don't know that your website is down.

                        If you specify a value for ``ResponseCode`` , you must also specify a value
                        for ``ResponsePagePath`` . If you don't want to specify a value, include an
                        empty element, ``<ResponseCode>`` , in the XML document.

                      - **ErrorCachingMinTTL** *(integer) --*

                        The minimum amount of time, in seconds, that you want CloudFront to cache
                        the HTTP status code specified in ``ErrorCode`` . When this time period has
                        elapsed, CloudFront queries your origin to see whether the problem that
                        caused the error has been resolved and the requested object is now
                        available.

                        If you don't want to specify a value, include an empty element,
                        ``<ErrorCachingMinTTL>`` , in the XML document.

                        For more information, see `Customizing Error Responses
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                - **Comment** *(string) --*

                  Any comments you want to include about the distribution.

                  If you don't want to specify a comment, include an empty ``Comment`` element.

                  To delete an existing comment, update the distribution configuration and include
                  an empty ``Comment`` element.

                  To add or change a comment, update the distribution configuration and specify the
                  new comment.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the distribution.

                  For more information about logging, see `Access Logs
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a distribution or if
                    you want to disable logging for an existing distribution, specify ``false`` for
                    ``Enabled`` , and specify empty ``Bucket`` and ``Prefix`` elements. If you
                    specify ``false`` for ``Enabled`` but you specify values for ``Bucket`` ,
                    ``prefix`` , and ``IncludeCookies`` , the values are automatically deleted.

                  - **IncludeCookies** *(boolean) --*

                    Specifies whether you want CloudFront to include cookies in access logs, specify
                    ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs,
                    CloudFront logs all cookies regardless of how you configure the cache behaviors
                    for this distribution. If you don't want to include cookies when you create a
                    distribution or if you want to disable include cookies for an existing
                    distribution, specify ``false`` for ``IncludeCookies`` .

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    ``filenames`` for this distribution, for example, ``myprefix/`` . If you want to
                    enable logging, but you don't want to specify a prefix, you still must include
                    an empty ``Prefix`` element in the ``Logging`` element.

                - **PriceClass** *(string) --*

                  The price class that corresponds with the maximum price that you want to pay for
                  CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to
                  requests for your objects from all CloudFront edge locations.

                  If you specify a price class other than ``PriceClass_All`` , CloudFront serves
                  your objects from the CloudFront edge location that has the lowest latency among
                  the edge locations in your price class. Viewers who are in or near regions that
                  are excluded from your specified price class may encounter slower performance.

                  For more information about price classes, see `Choosing the Price Class for a
                  CloudFront Distribution
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
                  in the *Amazon CloudFront Developer Guide* . For information about CloudFront
                  pricing, including how price classes (such as Price Class 100) map to CloudFront
                  regions, see `Amazon CloudFront Pricing
                  <http://aws.amazon.com/cloudfront/pricing/>`__ . For price class information,
                  scroll down to see the table at the bottom of the page.

                - **Enabled** *(boolean) --*

                  From this field, you can enable or disable the selected distribution.

                - **ViewerCertificate** *(dict) --*

                  A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                  request your objects, whether you're using an alternate domain name with HTTPS,
                  and if so, if you're using AWS Certificate Manager (ACM) or a third-party
                  certificate authority.

                  - **CloudFrontDefaultCertificate** *(boolean) --*

                    If you're using the CloudFront domain name for your distribution, such as
                    ``d111111abcdef8.cloudfront.net`` , specify the following value:

                    * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                  - **IAMCertificateId** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if you purchased your certificate from a
                    third-party certificate authority:

                    * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                    certificate ID* `` is the ID that IAM returned when you added the certificate to
                    the IAM certificate store.

                    If you specify ``IAMCertificateId`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **ACMCertificateArn** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if ACM provided your certificate:

                    * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                    where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                    certificate that you want to use for this distribution.

                    If you specify ``ACMCertificateArn`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **SSLSupportMethod** *(string) --*

                    If you specify a value for `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                    or for `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                    , you must also specify how you want CloudFront to serve HTTPS requests: using a
                    method that works for browsers and clients released after 2010 or one that works
                    for all clients.

                    * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                    support Server Name Indication (SNI). All modern browsers support SNI, but there
                    are a few that don't. For a current list of the browsers that support SNI, see
                    the `Wikipedia entry Server Name Indication
                    <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about
                    options to explore if you have users with browsers that don't include SNI
                    support, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                    respond to HTTPS requests from any viewer. However, there are additional monthly
                    charges. For details, including specific pricing information, see `Custom SSL
                    options for Amazon CloudFront
                    <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                    site.

                    Don't specify a value for ``SSLSupportMethod`` if you specified
                    ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                    For more information, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MinimumProtocolVersion** *(string) --*

                    Specify the security policy that you want CloudFront to use for HTTPS
                    connections. A security policy determines two settings:

                    * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

                    * The cipher that CloudFront uses to encrypt the content that it returns to
                    viewers

                    .. note::

                      On the CloudFront console, this setting is called **Security policy** .

                    We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                    browsers or devices that do not support TLSv1.1 or later.

                    When both of the following are true, you must specify ``TLSv1`` or later for the
                    security policy:

                    * You're using a custom certificate: you specified a value for
                    ``ACMCertificateArn`` or for ``IAMCertificateId``

                    * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                    If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                    automatically sets the security policy to ``TLSv1`` regardless of the value that
                    you specify for ``MinimumProtocolVersion`` .

                    For information about the relationship between the security policy that you
                    choose and the protocols and ciphers that CloudFront uses to communicate with
                    viewers, see `Supported SSL/TLS Protocols and Ciphers for Communication Between
                    Viewers and CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Certificate** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                  - **CertificateSource** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                - **Restrictions** *(dict) --*

                  A complex type that identifies ways in which you want to restrict distribution of
                  your content.

                  - **GeoRestriction** *(dict) --*

                    A complex type that controls the countries in which your content is distributed.
                    CloudFront determines the location of your users using ``MaxMind`` GeoIP
                    databases.

                    - **RestrictionType** *(string) --*

                      The method that you want to use to restrict distribution of your content by
                      country:

                      * ``none`` : No geo restriction is enabled, meaning access to content is not
                      restricted by client geo location.

                      * ``blacklist`` : The ``Location`` elements specify the countries in which you
                      don't want CloudFront to distribute your content.

                      * ``whitelist`` : The ``Location`` elements specify the countries in which you
                      want CloudFront to distribute your content.

                    - **Quantity** *(integer) --*

                      When geo restriction is ``enabled`` , this is the number of countries in your
                      ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled,
                      ``Quantity`` is ``0`` , and you can omit ``Items`` .

                    - **Items** *(list) --*

                      A complex type that contains a ``Location`` element for each country in which
                      you want CloudFront either to distribute your content (``whitelist`` ) or not
                      distribute your content (``blacklist`` ).

                      The ``Location`` element is a two-letter, uppercase country code for a country
                      that you want to include in your ``blacklist`` or ``whitelist`` . Include one
                      ``Location`` element for each country.

                      CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the
                      current list of countries and the corresponding codes, see ``ISO
                      3166-1-alpha-2`` code on the *International Organization for Standardization*
                      website. You can also refer to the country list on the CloudFront console,
                      which includes both country names and codes.

                      - *(string) --*

                - **WebACLId** *(string) --*

                  A unique identifier that specifies the AWS WAF web ACL, if any, to associate with
                  this distribution.

                  AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS
                  requests that are forwarded to CloudFront, and lets you control access to your
                  content. Based on conditions that you specify, such as the IP addresses that
                  requests originate from or the values of query strings, CloudFront responds to
                  requests either with the requested content or with an HTTP 403 status code
                  (Forbidden). You can also configure CloudFront to return a custom error page when
                  a request is blocked. For more information about AWS WAF, see the `AWS WAF
                  Developer Guide
                  <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

                - **HttpVersion** *(string) --*

                  (Optional) Specify the maximum HTTP version that you want viewers to use to
                  communicate with CloudFront. The default value for new web distributions is http2.
                  Viewers that don't support HTTP/2 automatically use an earlier HTTP version.

                  For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later,
                  and must support Server Name Identification (SNI).

                  In general, configuring CloudFront to communicate with viewers using HTTP/2
                  reduces latency. You can improve performance by optimizing for HTTP/2. For more
                  information, do an Internet search for "http/2 optimization."

                - **IsIPV6Enabled** *(boolean) --*

                  If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for
                  your distribution, specify ``true`` . If you specify ``false`` , CloudFront
                  responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no
                  IP addresses. This allows viewers to submit a second request, for an IPv4 address
                  for your distribution.

                  In general, you should enable IPv6 if you have users on IPv6 networks who want to
                  access your content. However, if you're using signed URLs or signed cookies to
                  restrict access to your content, and if you're using a custom policy that includes
                  the ``IpAddress`` parameter to restrict the IP addresses that can access your
                  content, don't enable IPv6. If you want to restrict access to some content by IP
                  address and not restrict access to other content (or restrict access but not by IP
                  address), you can create two distributions. For more information, see `Creating a
                  Signed URL Using a Custom Policy
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you're using an Amazon Route 53 alias resource record set to route traffic to
                  your CloudFront distribution, you need to create a second alias resource record
                  set when both of the following are true:

                  * You enable IPv6 for the distribution

                  * You're using alternate domain names in the URLs for your objects

                  For more information, see `Routing Traffic to an Amazon CloudFront Web
                  Distribution by Using Your Domain Name
                  <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
                  in the *Amazon Route 53 Developer Guide* .

                  If you created a CNAME resource record set, either with Amazon Route 53 or with
                  another DNS service, you don't need to make any changes. A CNAME record will route
                  traffic to your distribution regardless of the IP address format of the viewer
                  request.

              - **AliasICPRecordals** *(list) --*

                AWS services in China customers must file for an Internet Content Provider (ICP)
                recordal if they want to serve content publicly on an alternate domain name, also
                known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                ICP recordal status for CNAMEs associated with distributions.

                For more information about ICP recordals, see `Signup, Accounts, and Credentials
                <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                in *Getting Started with AWS services in China* .

                - *(dict) --*

                  AWS services in China customers must file for an Internet Content Provider (ICP)
                  recordal if they want to serve content publicly on an alternate domain name, also
                  known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                  ICP recordal status for CNAMEs associated with distributions. The status is
                  returned in the CloudFront response; you can't configure it yourself.

                  For more information about ICP recordals, see `Signup, Accounts, and Credentials
                  <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                  in *Getting Started with AWS services in China* .

                  - **CNAME** *(string) --*

                    A domain name associated with a distribution.

                  - **ICPRecordalStatus** *(string) --*

                    The Internet Content Provider (ICP) recordal status for a CNAME. The
                    ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside
                    of China.

                    The status values returned are the following:

                    * **APPROVED** indicates that the associated CNAME has a valid ICP recordal
                    number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can
                    correspond to different ICP recordals. To be marked as APPROVED, that is, valid
                    to use with China region, a CNAME must have one ICP recordal number associated
                    with it.

                    * **SUSPENDED** indicates that the associated CNAME does not have a valid ICP
                    recordal number.

                    * **PENDING** indicates that at least one CNAME associated with the distribution
                    does not have a valid ICP recordal number.

            - **ETag** *(string) --*

              The current version of the distribution's information. For example: ``E2QWRUHAPOMQZL``
              .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_distribution_config(self, Id: str) -> ClientGetDistributionConfigResponseTypeDef:
        """
        Get the configuration information about a distribution.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetDistributionConfig>`_

        **Request Syntax**
        ::

          response = client.get_distribution_config(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The distribution's ID. If the ID is empty, an empty distribution configuration is
          returned.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'DistributionConfig': {
                    'CallerReference': 'string',
                    'Aliases': {
                        'Quantity': 123,
                        'Items': [
                            'string',
                        ]
                    },
                    'DefaultRootObject': 'string',
                    'Origins': {
                        'Quantity': 123,
                        'Items': [
                            {
                                'Id': 'string',
                                'DomainName': 'string',
                                'OriginPath': 'string',
                                'CustomHeaders': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'HeaderName': 'string',
                                            'HeaderValue': 'string'
                                        },
                                    ]
                                },
                                'S3OriginConfig': {
                                    'OriginAccessIdentity': 'string'
                                },
                                'CustomOriginConfig': {
                                    'HTTPPort': 123,
                                    'HTTPSPort': 123,
                                    'OriginProtocolPolicy': 'http-only'|'match-viewer'|'https-only',
                                    'OriginSslProtocols': {
                                        'Quantity': 123,
                                        'Items': [
                                            'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                        ]
                                    },
                                    'OriginReadTimeout': 123,
                                    'OriginKeepaliveTimeout': 123
                                }
                            },
                        ]
                    },
                    'OriginGroups': {
                        'Quantity': 123,
                        'Items': [
                            {
                                'Id': 'string',
                                'FailoverCriteria': {
                                    'StatusCodes': {
                                        'Quantity': 123,
                                        'Items': [
                                            123,
                                        ]
                                    }
                                },
                                'Members': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'OriginId': 'string'
                                        },
                                    ]
                                }
                            },
                        ]
                    },
                    'DefaultCacheBehavior': {
                        'TargetOriginId': 'string',
                        'ForwardedValues': {
                            'QueryString': True|False,
                            'Cookies': {
                                'Forward': 'none'|'whitelist'|'all',
                                'WhitelistedNames': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'Headers': {
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'QueryStringCacheKeys': {
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            }
                        },
                        'TrustedSigners': {
                            'Enabled': True|False,
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                        'MinTTL': 123,
                        'AllowedMethods': {
                            'Quantity': 123,
                            'Items': [
                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                            ],
                            'CachedMethods': {
                                'Quantity': 123,
                                'Items': [
                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                ]
                            }
                        },
                        'SmoothStreaming': True|False,
                        'DefaultTTL': 123,
                        'MaxTTL': 123,
                        'Compress': True|False,
                        'LambdaFunctionAssociations': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'LambdaFunctionARN': 'string',
                                    'EventType':
                                    'viewer-request'|'viewer-response'
                                    |'origin-request'|'origin-response',
                                    'IncludeBody': True|False
                                },
                            ]
                        },
                        'FieldLevelEncryptionId': 'string'
                    },
                    'CacheBehaviors': {
                        'Quantity': 123,
                        'Items': [
                            {
                                'PathPattern': 'string',
                                'TargetOriginId': 'string',
                                'ForwardedValues': {
                                    'QueryString': True|False,
                                    'Cookies': {
                                        'Forward': 'none'|'whitelist'|'all',
                                        'WhitelistedNames': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'Headers': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'QueryStringCacheKeys': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'TrustedSigners': {
                                    'Enabled': True|False,
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'ViewerProtocolPolicy':
                                'allow-all'|'https-only'
                                |'redirect-to-https',
                                'MinTTL': 123,
                                'AllowedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ],
                                    'CachedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ]
                                    }
                                },
                                'SmoothStreaming': True|False,
                                'DefaultTTL': 123,
                                'MaxTTL': 123,
                                'Compress': True|False,
                                'LambdaFunctionAssociations': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'LambdaFunctionARN': 'string',
                                            'EventType':
                                            'viewer-request'
                                            |'viewer-response'
                                            |'origin-request'
                                            |'origin-response',
                                            'IncludeBody': True|False
                                        },
                                    ]
                                },
                                'FieldLevelEncryptionId': 'string'
                            },
                        ]
                    },
                    'CustomErrorResponses': {
                        'Quantity': 123,
                        'Items': [
                            {
                                'ErrorCode': 123,
                                'ResponsePagePath': 'string',
                                'ResponseCode': 'string',
                                'ErrorCachingMinTTL': 123
                            },
                        ]
                    },
                    'Comment': 'string',
                    'Logging': {
                        'Enabled': True|False,
                        'IncludeCookies': True|False,
                        'Bucket': 'string',
                        'Prefix': 'string'
                    },
                    'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                    'Enabled': True|False,
                    'ViewerCertificate': {
                        'CloudFrontDefaultCertificate': True|False,
                        'IAMCertificateId': 'string',
                        'ACMCertificateArn': 'string',
                        'SSLSupportMethod': 'sni-only'|'vip',
                        'MinimumProtocolVersion':
                        'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'|'TLSv1.2_2018',
                        'Certificate': 'string',
                        'CertificateSource': 'cloudfront'|'iam'|'acm'
                    },
                    'Restrictions': {
                        'GeoRestriction': {
                            'RestrictionType': 'blacklist'|'whitelist'|'none',
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        }
                    },
                    'WebACLId': 'string',
                    'HttpVersion': 'http1.1'|'http2',
                    'IsIPV6Enabled': True|False
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **DistributionConfig** *(dict) --*

              The distribution's configuration information.

              - **CallerReference** *(string) --*

                A unique value (for example, a date-time stamp) that ensures that the request can't
                be replayed.

                If the value of ``CallerReference`` is new (regardless of the content of the
                ``DistributionConfig`` object), CloudFront creates a new distribution.

                If ``CallerReference`` is a value that you already sent in a previous request to
                create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

              - **Aliases** *(dict) --*

                A complex type that contains information about CNAMEs (alternate domain names), if
                any, for this distribution.

                - **Quantity** *(integer) --*

                  The number of CNAME aliases, if any, that you want to associate with this
                  distribution.

                - **Items** *(list) --*

                  A complex type that contains the CNAME aliases, if any, that you want to associate
                  with this distribution.

                  - *(string) --*

              - **DefaultRootObject** *(string) --*

                The object that you want CloudFront to request from your origin (for example,
                ``index.html`` ) when a viewer requests the root URL for your distribution
                (``http://www.example.com`` ) instead of an object in your distribution
                (``http://www.example.com/product-description.html`` ). Specifying a default root
                object avoids exposing the contents of your distribution.

                Specify only the object name, for example, ``index.html`` . Don't add a ``/`` before
                the object name.

                If you don't want to specify a default root object when you create a distribution,
                include an empty ``DefaultRootObject`` element.

                To delete the default root object from an existing distribution, update the
                distribution configuration and include an empty ``DefaultRootObject`` element.

                To replace the default root object, update the distribution configuration and
                specify the new object.

                For more information about the default root object, see `Creating a Default Root
                Object
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **Origins** *(dict) --*

                A complex type that contains information about origins for this distribution.

                - **Quantity** *(integer) --*

                  The number of origins or origin groups for this distribution.

                - **Items** *(list) --*

                  A complex type that contains origins or origin groups for this distribution.

                  - *(dict) --*

                    A complex type that describes the Amazon S3 bucket, HTTP server (for example, a
                    web server), Amazon MediaStore, or other server from which CloudFront gets your
                    files. This can also be an origin group, if you've created an origin group. You
                    must specify at least one origin or origin group.

                    For the current limit on the number of origins or origin groups that you can
                    specify for a distribution, see `Amazon CloudFront Limits
                    <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                    in the *AWS General Reference* .

                    - **Id** *(string) --*

                      A unique identifier for the origin or origin group. The value of ``Id`` must
                      be unique within the distribution.

                      When you specify the value of ``TargetOriginId`` for the default cache
                      behavior or for another cache behavior, you indicate the origin to which you
                      want the cache behavior to route requests by specifying the value of the
                      ``Id`` element for that origin. When a request matches the path pattern for
                      that cache behavior, CloudFront routes the request to the specified origin.
                      For more information, see `Cache Behavior Settings
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **DomainName** *(string) --*

                       **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you
                       want CloudFront to get objects for this origin, for example,
                       ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be configured
                       as a website endpoint, enter the Amazon S3 static website hosting endpoint
                       for the bucket.

                      For more information about specifying this value for different types of
                      origins, see `Origin Domain Name
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                      in the *Amazon CloudFront Developer Guide* .

                      Constraints for Amazon S3 origins:

                      * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                      specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                      * The bucket name must be between 3 and 63 characters long (inclusive).

                      * The bucket name must contain only lowercase characters, numbers, periods,
                      underscores, and dashes.

                      * The bucket name must not contain adjacent periods.

                       **Custom Origins** : The DNS domain name for the HTTP server from which you
                       want CloudFront to get objects for this origin, for example,
                       ``www.example.com`` .

                      Constraints for custom origins:

                      * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9,
                      dot (.), hyphen (-), or underscore (_) characters.

                      * The name cannot exceed 128 characters.

                    - **OriginPath** *(string) --*

                      An optional element that causes CloudFront to request your content from a
                      directory in your Amazon S3 bucket or your custom origin. When you include the
                      ``OriginPath`` element, specify the directory name, beginning with a ``/`` .
                      CloudFront appends the directory name to the value of ``DomainName`` , for
                      example, ``example.com/production`` . Do not include a ``/`` at the end of the
                      directory name.

                      For example, suppose you've specified the following values for your
                      distribution:

                      * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                      * ``OriginPath`` : ``/production``

                      * ``CNAME`` : ``example.com``

                      When a user enters ``example.com/index.html`` in a browser, CloudFront sends a
                      request to Amazon S3 for ``myawsbucket/production/index.html`` .

                      When a user enters ``example.com/acme/index.html`` in a browser, CloudFront
                      sends a request to Amazon S3 for ``myawsbucket/production/acme/index.html`` .

                    - **CustomHeaders** *(dict) --*

                      A complex type that contains names and values for the custom headers that you
                      want.

                      - **Quantity** *(integer) --*

                        The number of custom headers, if any, for this distribution.

                      - **Items** *(list) --*

                         **Optional** : A list that contains one ``OriginCustomHeader`` element for
                         each custom header that you want CloudFront to forward to the origin. If
                         Quantity is ``0`` , omit ``Items`` .

                        - *(dict) --*

                          A complex type that contains ``HeaderName`` and ``HeaderValue`` elements,
                          if any, for this distribution.

                          - **HeaderName** *(string) --*

                            The name of a header that you want CloudFront to forward to your origin.
                            For more information, see `Forwarding Custom Headers to Your Origin (Web
                            Distributions Only)
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                          - **HeaderValue** *(string) --*

                            The value for the header that you specified in the ``HeaderName`` field.

                    - **S3OriginConfig** *(dict) --*

                      A complex type that contains information about the Amazon S3 origin. If the
                      origin is a custom origin, use the ``CustomOriginConfig`` element instead.

                      - **OriginAccessIdentity** *(string) --*

                        The CloudFront origin access identity to associate with the origin. Use an
                        origin access identity to configure the origin so that viewers can *only*
                        access objects in an Amazon S3 bucket through CloudFront. The format of the
                        value is:

                        origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                        where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                        returned in the ``ID`` element when you created the origin access identity.

                        If you want viewers to be able to access objects using either the CloudFront
                        URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                        To delete the origin access identity from an existing distribution, update
                        the distribution configuration and include an empty ``OriginAccessIdentity``
                        element.

                        To replace the origin access identity, update the distribution configuration
                        and specify the new origin access identity.

                        For more information about the origin access identity, see `Serving Private
                        Content through CloudFront
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                    - **CustomOriginConfig** *(dict) --*

                      A complex type that contains information about a custom origin. If the origin
                      is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                      - **HTTPPort** *(integer) --*

                        The HTTP port the custom origin listens on.

                      - **HTTPSPort** *(integer) --*

                        The HTTPS port the custom origin listens on.

                      - **OriginProtocolPolicy** *(string) --*

                        The origin protocol policy to apply to your origin.

                      - **OriginSslProtocols** *(dict) --*

                        The SSL/TLS protocols that you want CloudFront to use when communicating
                        with your origin over HTTPS.

                        - **Quantity** *(integer) --*

                          The number of SSL/TLS protocols that you want to allow CloudFront to use
                          when establishing an HTTPS connection with this origin.

                        - **Items** *(list) --*

                          A list that contains allowed SSL/TLS protocols for this distribution.

                          - *(string) --*

                      - **OriginReadTimeout** *(integer) --*

                        You can create a custom origin read timeout. All timeout units are in
                        seconds. The default origin read timeout is 30 seconds, but you can
                        configure custom timeout lengths using the CloudFront API. The minimum
                        timeout length is 4 seconds; the maximum is 60 seconds.

                        If you need to increase the maximum time limit, contact the `AWS Support
                        Center <https://console.aws.amazon.com/support/home#/>`__ .

                      - **OriginKeepaliveTimeout** *(integer) --*

                        You can create a custom keep-alive timeout. All timeout units are in
                        seconds. The default keep-alive timeout is 5 seconds, but you can configure
                        custom timeout lengths using the CloudFront API. The minimum timeout length
                        is 1 second; the maximum is 60 seconds.

                        If you need to increase the maximum time limit, contact the `AWS Support
                        Center <https://console.aws.amazon.com/support/home#/>`__ .

              - **OriginGroups** *(dict) --*

                A complex type that contains information about origin groups for this distribution.

                - **Quantity** *(integer) --*

                  The number of origin groups.

                - **Items** *(list) --*

                  The items (origin groups) in a distribution.

                  - *(dict) --*

                    An origin group includes two origins (a primary origin and a second origin to
                    failover to) and a failover criteria that you specify. You create an origin
                    group to support origin failover in CloudFront. When you create or update a
                    distribution, you can specifiy the origin group instead of a single origin, and
                    CloudFront will failover from the primary origin to the second origin under the
                    failover conditions that you've chosen.

                    - **Id** *(string) --*

                      The origin group's ID.

                    - **FailoverCriteria** *(dict) --*

                      A complex type that contains information about the failover criteria for an
                      origin group.

                      - **StatusCodes** *(dict) --*

                        The status codes that, when returned from the primary origin, will trigger
                        CloudFront to failover to the second origin.

                        - **Quantity** *(integer) --*

                          The number of status codes.

                        - **Items** *(list) --*

                          The items (status codes) for an origin group.

                          - *(integer) --*

                    - **Members** *(dict) --*

                      A complex type that contains information about the origins in an origin group.

                      - **Quantity** *(integer) --*

                        The number of origins in an origin group.

                      - **Items** *(list) --*

                        Items (origins) in an origin group.

                        - *(dict) --*

                          An origin in an origin group.

                          - **OriginId** *(string) --*

                            The ID for an origin in an origin group.

              - **DefaultCacheBehavior** *(dict) --*

                A complex type that describes the default cache behavior if you don't specify a
                ``CacheBehavior`` element or if files don't match any of the values of
                ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default
                cache behavior.

                - **TargetOriginId** *(string) --*

                  The value of ``ID`` for the origin that you want CloudFront to route requests to
                  when a request matches the path pattern either for a cache behavior or for the
                  default cache behavior in your distribution.

                - **ForwardedValues** *(dict) --*

                  A complex type that specifies how CloudFront handles query strings and cookies.

                  - **QueryString** *(boolean) --*

                    Indicates whether you want CloudFront to forward query strings to the origin
                    that is associated with this cache behavior and cache based on the query string
                    parameters. CloudFront behavior depends on the value of ``QueryString`` and on
                    the values that you specify for ``QueryStringCacheKeys`` , if any:

                    If you specify true for ``QueryString`` and you don't specify any values for
                    ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                    the origin and caches based on all query string parameters. Depending on how
                    many query string parameters and values you have, this can adversely affect
                    performance because CloudFront must forward more requests to the origin.

                    If you specify true for ``QueryString`` and you specify one or more values for
                    ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                    the origin, but it only caches based on the query string parameters that you
                    specify.

                    If you specify false for ``QueryString`` , CloudFront doesn't forward any query
                    string parameters to the origin, and doesn't cache based on query string
                    parameters.

                    For more information, see `Configuring CloudFront to Cache Based on Query String
                    Parameters
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Cookies** *(dict) --*

                    A complex type that specifies whether you want CloudFront to forward cookies to
                    the origin and, if so, which ones. For more information about forwarding cookies
                    to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Forward** *(string) --*

                      Specifies which cookies to forward to the origin for this cache behavior: all,
                      none, or the list of cookies specified in the ``WhitelistedNames`` complex
                      type.

                      Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                      requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                    - **WhitelistedNames** *(dict) --*

                      Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                      complex type that specifies how many different cookies you want CloudFront to
                      forward to the origin for this cache behavior and, if you want to forward
                      selected cookies, the names of those cookies.

                      If you specify ``all`` or none for the value of ``Forward`` , omit
                      ``WhitelistedNames`` . If you change the value of ``Forward`` from
                      ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                      element and its child elements, CloudFront deletes them automatically.

                      For the current limit on the number of cookie names that you can whitelist for
                      each cache behavior, see `CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Quantity** *(integer) --*

                        The number of different cookies that you want CloudFront to forward to the
                        origin for this cache behavior.

                      - **Items** *(list) --*

                        A complex type that contains one ``Name`` element for each cookie that you
                        want CloudFront to forward to the origin for this cache behavior.

                        - *(string) --*

                  - **Headers** *(dict) --*

                    A complex type that specifies the ``Headers`` , if any, that you want CloudFront
                    to forward to the origin for this cache behavior (whitelisted headers). For the
                    headers that you specify, CloudFront also caches separate versions of a
                    specified object that is based on the header values in viewer requests.

                    For more information, see `Caching Content Based on Request Headers
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Quantity** *(integer) --*

                      The number of different headers that you want CloudFront to base caching on
                      for this cache behavior. You can configure each cache behavior in a web
                      distribution to do one of the following:

                      * **Forward all headers to your origin** : Specify ``1`` for ``Quantity`` and
                      ``*`` for ``Name`` .

                      .. warning::

                         CloudFront doesn't cache the objects that are associated with this cache
                         behavior. Instead, CloudFront sends every request to the origin.

                      * **Forward a whitelist of headers you specify** : Specify the number of
                      headers that you want CloudFront to base caching on. Then specify the header
                      names in ``Name`` elements. CloudFront caches your objects based on the values
                      in the specified headers.

                      * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                      omit ``Items`` . In this configuration, CloudFront doesn't cache based on the
                      values in the request headers.

                      Regardless of which option you choose, CloudFront forwards headers to your
                      origin based on whether the origin is an S3 bucket or a custom origin. See the
                      following documentation:

                      * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or Updates
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                      * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                    - **Items** *(list) --*

                      A list that contains one ``Name`` element for each header that you want
                      CloudFront to use for caching in this cache behavior. If ``Quantity`` is ``0``
                      , omit ``Items`` .

                      - *(string) --*

                  - **QueryStringCacheKeys** *(dict) --*

                    A complex type that contains information about the query string parameters that
                    you want CloudFront to use for caching for this cache behavior.

                    - **Quantity** *(integer) --*

                      The number of ``whitelisted`` query string parameters for a cache behavior.

                    - **Items** *(list) --*

                      A list that contains the query string parameters that you want CloudFront to
                      use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you can
                      omit ``Items`` .

                      - *(string) --*

                - **TrustedSigners** *(dict) --*

                  A complex type that specifies the AWS accounts, if any, that you want to allow to
                  create signed URLs for private content.

                  If you want to require signed URLs in requests for objects in the target origin
                  that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                  ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                  For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you don't want to require signed URLs in requests for objects that match
                  ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                  Omit ``Items`` .

                  To add, change, or remove one or more trusted signers, change ``Enabled`` to
                  ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                  specify all of the trusted signers that you want to include in the updated
                  distribution.

                  - **Enabled** *(boolean) --*

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --*

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **ViewerProtocolPolicy** *(string) --*

                  The protocol that viewers can use to access the files in the origin specified by
                  ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                  You can specify the following options:

                  * ``allow-all`` : Viewers can use HTTP or HTTPS.

                  * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront returns
                  an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS
                  URL. The viewer then resubmits the request using the new URL.

                  * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                  status code of 403 (Forbidden).

                  For more information about requiring the HTTPS protocol, see `Using an HTTPS
                  Connection to Access Your Objects
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  .. note::

                    The only way to guarantee that viewers retrieve an object that was fetched from
                    the origin using HTTPS is never to use any other protocol to fetch the object.
                    If you have recently changed from HTTP to HTTPS, we recommend that you clear
                    your objects' cache because cached objects are protocol agnostic. That means
                    that an edge location will return an object from the cache regardless of whether
                    the current request protocol matches the protocol used previously. For more
                    information, see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **MinTTL** *(integer) --*

                  The minimum amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. For more information, see `Managing How Long Content
                  Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                  headers to your origin (under ``Headers`` , if you specify ``1`` for ``Quantity``
                  and ``*`` for ``Name`` ).

                - **AllowedMethods** *(dict) --*

                  A complex type that controls which HTTP methods CloudFront processes and forwards
                  to your Amazon S3 bucket or your custom origin. There are three choices:

                  * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                  * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                  * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                  requests.

                  If you pick the third choice, you may need to restrict access to your Amazon S3
                  bucket or to your custom origin so users can't perform operations that you don't
                  want them to. For example, you might not want users to have permissions to delete
                  objects from your origin.

                  - **Quantity** *(integer) --*

                    The number of HTTP methods that you want CloudFront to forward to your origin.
                    Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                    ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                    PATCH, POST`` , and ``DELETE`` requests).

                  - **Items** *(list) --*

                    A complex type that contains the HTTP methods that you want CloudFront to
                    process and forward to your origin.

                    - *(string) --*

                  - **CachedMethods** *(dict) --*

                    A complex type that controls whether CloudFront caches the response to requests
                    using the specified HTTP methods. There are two choices:

                    * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                    * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    If you pick the second choice for your Amazon S3 Origin, you may need to forward
                    Access-Control-Request-Method, Access-Control-Request-Headers, and Origin
                    headers for the responses to be cached correctly.

                    - **Quantity** *(integer) --*

                      The number of HTTP methods for which you want CloudFront to cache responses.
                      Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                      requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                      ``OPTIONS`` requests).

                    - **Items** *(list) --*

                      A complex type that contains the HTTP methods that you want CloudFront to
                      cache responses to.

                      - *(string) --*

                - **SmoothStreaming** *(boolean) --*

                  Indicates whether you want to distribute media files in the Microsoft Smooth
                  Streaming format using the origin that is associated with this cache behavior. If
                  so, specify ``true`` ; if not, specify ``false`` . If you specify ``true`` for
                  ``SmoothStreaming`` , you can still distribute other content using this cache
                  behavior if the content matches the value of ``PathPattern`` .

                - **DefaultTTL** *(integer) --*

                  The default amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. The value that you specify applies only when your origin
                  does not add HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                  s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                  Long Content Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **MaxTTL** *(integer) --*

                  The maximum amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. The value that you specify applies only when your origin
                  adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` ,
                  and ``Expires`` to objects. For more information, see `Managing How Long Content
                  Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Compress** *(boolean) --*

                  Whether you want CloudFront to automatically compress certain files for this cache
                  behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                  information, see `Serving Compressed Files
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **LambdaFunctionAssociations** *(dict) --*

                  A complex type that contains zero or more Lambda function associations for a cache
                  behavior.

                  - **Quantity** *(integer) --*

                    The number of Lambda function associations for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains ``LambdaFunctionAssociation`` items
                     for this cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that contains a Lambda function association.

                      - **LambdaFunctionARN** *(string) --*

                        The ARN of the Lambda function. You must specify the ARN of a function
                        version; you can't specify a Lambda alias or $LATEST.

                      - **EventType** *(string) --*

                        Specifies the event type that triggers a Lambda function invocation. You can
                        specify the following values:

                        * ``viewer-request`` : The function executes when CloudFront receives a
                        request from a viewer and before it checks to see whether the requested
                        object is in the edge cache.

                        * ``origin-request`` : The function executes only when CloudFront forwards a
                        request to your origin. When the requested object is in the edge cache, the
                        function doesn't execute.

                        * ``origin-response`` : The function executes after CloudFront receives a
                        response from the origin and before it caches the object in the response.
                        When the requested object is in the edge cache, the function doesn't
                        execute.

                        * ``viewer-response`` : The function executes before CloudFront returns the
                        requested object to the viewer. The function executes regardless of whether
                        the object was already in the edge cache. If the origin returns an HTTP
                        status code other than HTTP 200 (OK), the function doesn't execute.

                      - **IncludeBody** *(boolean) --*

                        A flag that allows a Lambda function to have read access to the body
                        content. For more information, see `Accessing the Request Body by Choosing
                        the Include Body Option
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                        in the Amazon CloudFront Developer Guide.

                - **FieldLevelEncryptionId** *(string) --*

                  The value of ``ID`` for the field-level encryption configuration that you want
                  CloudFront to use for encrypting specific fields of data for a cache behavior or
                  for the default cache behavior in your distribution.

              - **CacheBehaviors** *(dict) --*

                A complex type that contains zero or more ``CacheBehavior`` elements.

                - **Quantity** *(integer) --*

                  The number of cache behaviors for this distribution.

                - **Items** *(list) --*

                  Optional: A complex type that contains cache behaviors for this distribution. If
                  ``Quantity`` is ``0`` , you can omit ``Items`` .

                  - *(dict) --*

                    A complex type that describes how CloudFront processes requests.

                    You must create at least as many cache behaviors (including the default cache
                    behavior) as you have origins if you want CloudFront to distribute objects from
                    all of the origins. Each cache behavior specifies the one origin from which you
                    want CloudFront to get objects. If you have two origins and only the default
                    cache behavior, the default cache behavior will cause CloudFront to get objects
                    from one of the origins, but the other origin is never used.

                    For the current limit on the number of cache behaviors that you can add to a
                    distribution, see `Amazon CloudFront Limits
                    <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                    in the *AWS General Reference* .

                    If you don't want to specify any cache behaviors, include only an empty
                    ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element, or
                    CloudFront returns a ``MalformedXML`` error.

                    To delete all cache behaviors in an existing distribution, update the
                    distribution configuration and include only an empty ``CacheBehaviors`` element.

                    To add, change, or remove one or more cache behaviors, update the distribution
                    configuration and specify all of the cache behaviors that you want to include in
                    the updated distribution.

                    For more information about cache behaviors, see `Cache Behaviors
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **PathPattern** *(string) --*

                      The pattern (for example, ``images/*.jpg`` ) that specifies which requests to
                      apply the behavior to. When CloudFront receives a viewer request, the
                      requested path is compared with path patterns in the order in which cache
                      behaviors are listed in the distribution.

                      .. note::

                        You can optionally include a slash (``/`` ) at the beginning of the path
                        pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same
                        with or without the leading ``/`` .

                      The path pattern for the default cache behavior is ``*`` and cannot be
                      changed. If the request for an object does not match the path pattern for any
                      cache behaviors, CloudFront applies the behavior in the default cache
                      behavior.

                      For more information, see `Path Pattern
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **TargetOriginId** *(string) --*

                      The value of ``ID`` for the origin that you want CloudFront to route requests
                      to when a request matches the path pattern either for a cache behavior or for
                      the default cache behavior in your distribution.

                    - **ForwardedValues** *(dict) --*

                      A complex type that specifies how CloudFront handles query strings and
                      cookies.

                      - **QueryString** *(boolean) --*

                        Indicates whether you want CloudFront to forward query strings to the origin
                        that is associated with this cache behavior and cache based on the query
                        string parameters. CloudFront behavior depends on the value of
                        ``QueryString`` and on the values that you specify for
                        ``QueryStringCacheKeys`` , if any:

                        If you specify true for ``QueryString`` and you don't specify any values for
                        ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters
                        to the origin and caches based on all query string parameters. Depending on
                        how many query string parameters and values you have, this can adversely
                        affect performance because CloudFront must forward more requests to the
                        origin.

                        If you specify true for ``QueryString`` and you specify one or more values
                        for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                        parameters to the origin, but it only caches based on the query string
                        parameters that you specify.

                        If you specify false for ``QueryString`` , CloudFront doesn't forward any
                        query string parameters to the origin, and doesn't cache based on query
                        string parameters.

                        For more information, see `Configuring CloudFront to Cache Based on Query
                        String Parameters
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Cookies** *(dict) --*

                        A complex type that specifies whether you want CloudFront to forward cookies
                        to the origin and, if so, which ones. For more information about forwarding
                        cookies to the origin, see `How CloudFront Forwards, Caches, and Logs
                        Cookies
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **Forward** *(string) --*

                          Specifies which cookies to forward to the origin for this cache behavior:
                          all, none, or the list of cookies specified in the ``WhitelistedNames``
                          complex type.

                          Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                          requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                        - **WhitelistedNames** *(dict) --*

                          Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                          complex type that specifies how many different cookies you want CloudFront
                          to forward to the origin for this cache behavior and, if you want to
                          forward selected cookies, the names of those cookies.

                          If you specify ``all`` or none for the value of ``Forward`` , omit
                          ``WhitelistedNames`` . If you change the value of ``Forward`` from
                          ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                          element and its child elements, CloudFront deletes them automatically.

                          For the current limit on the number of cookie names that you can whitelist
                          for each cache behavior, see `CloudFront Limits
                          <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                          in the *AWS General Reference* .

                          - **Quantity** *(integer) --*

                            The number of different cookies that you want CloudFront to forward to
                            the origin for this cache behavior.

                          - **Items** *(list) --*

                            A complex type that contains one ``Name`` element for each cookie that
                            you want CloudFront to forward to the origin for this cache behavior.

                            - *(string) --*

                      - **Headers** *(dict) --*

                        A complex type that specifies the ``Headers`` , if any, that you want
                        CloudFront to forward to the origin for this cache behavior (whitelisted
                        headers). For the headers that you specify, CloudFront also caches separate
                        versions of a specified object that is based on the header values in viewer
                        requests.

                        For more information, see `Caching Content Based on Request Headers
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **Quantity** *(integer) --*

                          The number of different headers that you want CloudFront to base caching
                          on for this cache behavior. You can configure each cache behavior in a web
                          distribution to do one of the following:

                          * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                          and ``*`` for ``Name`` .

                          .. warning::

                             CloudFront doesn't cache the objects that are associated with this
                             cache behavior. Instead, CloudFront sends every request to the origin.

                          * **Forward a whitelist of headers you specify** : Specify the number of
                          headers that you want CloudFront to base caching on. Then specify the
                          header names in ``Name`` elements. CloudFront caches your objects based on
                          the values in the specified headers.

                          * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                          and omit ``Items`` . In this configuration, CloudFront doesn't cache based
                          on the values in the request headers.

                          Regardless of which option you choose, CloudFront forwards headers to your
                          origin based on whether the origin is an S3 bucket or a custom origin. See
                          the following documentation:

                          * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                          Updates
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                          * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                        - **Items** *(list) --*

                          A list that contains one ``Name`` element for each header that you want
                          CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                          ``0`` , omit ``Items`` .

                          - *(string) --*

                      - **QueryStringCacheKeys** *(dict) --*

                        A complex type that contains information about the query string parameters
                        that you want CloudFront to use for caching for this cache behavior.

                        - **Quantity** *(integer) --*

                          The number of ``whitelisted`` query string parameters for a cache
                          behavior.

                        - **Items** *(list) --*

                          A list that contains the query string parameters that you want CloudFront
                          to use as a basis for caching for a cache behavior. If ``Quantity`` is 0,
                          you can omit ``Items`` .

                          - *(string) --*

                    - **TrustedSigners** *(dict) --*

                      A complex type that specifies the AWS accounts, if any, that you want to allow
                      to create signed URLs for private content.

                      If you want to require signed URLs in requests for objects in the target
                      origin that match the ``PathPattern`` for this cache behavior, specify
                      ``true`` for ``Enabled`` , and specify the applicable values for ``Quantity``
                      and ``Items`` . For more information, see `Serving Private Content through
                      CloudFront
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      If you don't want to require signed URLs in requests for objects that match
                      ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity``
                      . Omit ``Items`` .

                      To add, change, or remove one or more trusted signers, change ``Enabled`` to
                      ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                      and specify all of the trusted signers that you want to include in the updated
                      distribution.

                      - **Enabled** *(boolean) --*

                        Specifies whether you want to require viewers to use signed URLs to access
                        the files specified by ``PathPattern`` and ``TargetOriginId`` .

                      - **Quantity** *(integer) --*

                        The number of trusted signers for this cache behavior.

                      - **Items** *(list) --*

                         **Optional** : A complex type that contains trusted signers for this cache
                         behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                        - *(string) --*

                    - **ViewerProtocolPolicy** *(string) --*

                      The protocol that viewers can use to access the files in the origin specified
                      by ``TargetOriginId`` when a request matches the path pattern in
                      ``PathPattern`` . You can specify the following options:

                      * ``allow-all`` : Viewers can use HTTP or HTTPS.

                      * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                      returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                      with the HTTPS URL. The viewer then resubmits the request using the new URL.

                      * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                      HTTP status code of 403 (Forbidden).

                      For more information about requiring the HTTPS protocol, see `Using an HTTPS
                      Connection to Access Your Objects
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      .. note::

                        The only way to guarantee that viewers retrieve an object that was fetched
                        from the origin using HTTPS is never to use any other protocol to fetch the
                        object. If you have recently changed from HTTP to HTTPS, we recommend that
                        you clear your objects' cache because cached objects are protocol agnostic.
                        That means that an edge location will return an object from the cache
                        regardless of whether the current request protocol matches the protocol used
                        previously. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                    - **MinTTL** *(integer) --*

                      The minimum amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. For more information, see `Managing How Long
                      Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                      all headers to your origin (under ``Headers`` , if you specify ``1`` for
                      ``Quantity`` and ``*`` for ``Name`` ).

                    - **AllowedMethods** *(dict) --*

                      A complex type that controls which HTTP methods CloudFront processes and
                      forwards to your Amazon S3 bucket or your custom origin. There are three
                      choices:

                      * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                      * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                      * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                      ``DELETE`` requests.

                      If you pick the third choice, you may need to restrict access to your Amazon
                      S3 bucket or to your custom origin so users can't perform operations that you
                      don't want them to. For example, you might not want users to have permissions
                      to delete objects from your origin.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods that you want CloudFront to forward to your
                        origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                        ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                        OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        process and forward to your origin.

                        - *(string) --*

                      - **CachedMethods** *(dict) --*

                        A complex type that controls whether CloudFront caches the response to
                        requests using the specified HTTP methods. There are two choices:

                        * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                        * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                        requests.

                        If you pick the second choice for your Amazon S3 Origin, you may need to
                        forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                        Origin headers for the responses to be cached correctly.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods for which you want CloudFront to cache
                          responses. Valid values are ``2`` (for caching responses to ``GET`` and
                          ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` , ``HEAD``
                          , and ``OPTIONS`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          cache responses to.

                          - *(string) --*

                    - **SmoothStreaming** *(boolean) --*

                      Indicates whether you want to distribute media files in the Microsoft Smooth
                      Streaming format using the origin that is associated with this cache behavior.
                      If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                      for ``SmoothStreaming`` , you can still distribute other content using this
                      cache behavior if the content matches the value of ``PathPattern`` .

                    - **DefaultTTL** *(integer) --*

                      The default amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. The value that you specify applies only when your
                      origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                      ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                      see `Managing How Long Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **MaxTTL** *(integer) --*

                      The maximum amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. The value that you specify applies only when your
                      origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                      s-maxage`` , and ``Expires`` to objects. For more information, see `Managing
                      How Long Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Compress** *(boolean) --*

                      Whether you want CloudFront to automatically compress certain files for this
                      cache behavior. If so, specify true; if not, specify false. For more
                      information, see `Serving Compressed Files
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **LambdaFunctionAssociations** *(dict) --*

                      A complex type that contains zero or more Lambda function associations for a
                      cache behavior.

                      - **Quantity** *(integer) --*

                        The number of Lambda function associations for this cache behavior.

                      - **Items** *(list) --*

                         **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                         items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                         ``Items`` .

                        - *(dict) --*

                          A complex type that contains a Lambda function association.

                          - **LambdaFunctionARN** *(string) --*

                            The ARN of the Lambda function. You must specify the ARN of a function
                            version; you can't specify a Lambda alias or $LATEST.

                          - **EventType** *(string) --*

                            Specifies the event type that triggers a Lambda function invocation. You
                            can specify the following values:

                            * ``viewer-request`` : The function executes when CloudFront receives a
                            request from a viewer and before it checks to see whether the requested
                            object is in the edge cache.

                            * ``origin-request`` : The function executes only when CloudFront
                            forwards a request to your origin. When the requested object is in the
                            edge cache, the function doesn't execute.

                            * ``origin-response`` : The function executes after CloudFront receives
                            a response from the origin and before it caches the object in the
                            response. When the requested object is in the edge cache, the function
                            doesn't execute.

                            * ``viewer-response`` : The function executes before CloudFront returns
                            the requested object to the viewer. The function executes regardless of
                            whether the object was already in the edge cache. If the origin returns
                            an HTTP status code other than HTTP 200 (OK), the function doesn't
                            execute.

                          - **IncludeBody** *(boolean) --*

                            A flag that allows a Lambda function to have read access to the body
                            content. For more information, see `Accessing the Request Body by
                            Choosing the Include Body Option
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                            in the Amazon CloudFront Developer Guide.

                    - **FieldLevelEncryptionId** *(string) --*

                      The value of ``ID`` for the field-level encryption configuration that you want
                      CloudFront to use for encrypting specific fields of data for a cache behavior
                      or for the default cache behavior in your distribution.

              - **CustomErrorResponses** *(dict) --*

                A complex type that controls the following:

                * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom
                error messages before returning the response to the viewer.

                * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                For more information about custom error pages, see `Customizing Error Responses
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Quantity** *(integer) --*

                  The number of HTTP status codes for which you want to specify a custom error page
                  and/or a caching duration. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                - **Items** *(list) --*

                  A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                  status code for which you want to specify a custom error page and/or a caching
                  duration.

                  - *(dict) --*

                    A complex type that controls:

                    * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                    custom error messages before returning the response to the viewer.

                    * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                    For more information about custom error pages, see `Customizing Error Responses
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **ErrorCode** *(integer) --*

                      The HTTP status code for which you want to specify a custom error page and/or
                      a caching duration.

                    - **ResponsePagePath** *(string) --*

                      The path to the custom error page that you want CloudFront to return to a
                      viewer when your origin returns the HTTP status code specified by
                      ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you want
                      to store your objects and your custom error pages in different locations, your
                      distribution must include a cache behavior for which the following is true:

                      * The value of ``PathPattern`` matches the path to your custom error messages.
                      For example, suppose you saved custom error pages for 4xx errors in an Amazon
                      S3 bucket in a directory named ``/4xx-errors`` . Your distribution must
                      include a cache behavior for which the path pattern routes requests for your
                      custom error pages to that location, for example, ``/4xx-errors/*`` .

                      * The value of ``TargetOriginId`` specifies the value of the ``ID`` element
                      for the origin that contains your custom error pages.

                      If you specify a value for ``ResponsePagePath`` , you must also specify a
                      value for ``ResponseCode`` . If you don't want to specify a value, include an
                      empty element, ``<ResponsePagePath>`` , in the XML document.

                      We recommend that you store custom error pages in an Amazon S3 bucket. If you
                      store custom error pages on an HTTP server and the server starts to return 5xx
                      errors, CloudFront can't get the files that you want to return to viewers
                      because the origin server is unavailable.

                    - **ResponseCode** *(string) --*

                      The HTTP status code that you want CloudFront to return to the viewer along
                      with the custom error page. There are a variety of reasons that you might want
                      CloudFront to return a status code different from the status code that your
                      origin returned to CloudFront, for example:

                      * Some Internet devices (some firewalls and corporate proxies, for example)
                      intercept HTTP 4xx and 5xx and prevent the response from being returned to the
                      viewer. If you substitute ``200`` , the response typically won't be
                      intercepted.

                      * If you don't care about distinguishing among different client errors or
                      server errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for
                      all 4xx or 5xx errors.

                      * You might want to return a ``200`` status code (OK) and static website so
                      your customers don't know that your website is down.

                      If you specify a value for ``ResponseCode`` , you must also specify a value
                      for ``ResponsePagePath`` . If you don't want to specify a value, include an
                      empty element, ``<ResponseCode>`` , in the XML document.

                    - **ErrorCachingMinTTL** *(integer) --*

                      The minimum amount of time, in seconds, that you want CloudFront to cache the
                      HTTP status code specified in ``ErrorCode`` . When this time period has
                      elapsed, CloudFront queries your origin to see whether the problem that caused
                      the error has been resolved and the requested object is now available.

                      If you don't want to specify a value, include an empty element,
                      ``<ErrorCachingMinTTL>`` , in the XML document.

                      For more information, see `Customizing Error Responses
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                      in the *Amazon CloudFront Developer Guide* .

              - **Comment** *(string) --*

                Any comments you want to include about the distribution.

                If you don't want to specify a comment, include an empty ``Comment`` element.

                To delete an existing comment, update the distribution configuration and include an
                empty ``Comment`` element.

                To add or change a comment, update the distribution configuration and specify the
                new comment.

              - **Logging** *(dict) --*

                A complex type that controls whether access logs are written for the distribution.

                For more information about logging, see `Access Logs
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Enabled** *(boolean) --*

                  Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket.
                  If you don't want to enable logging when you create a distribution or if you want
                  to disable logging for an existing distribution, specify ``false`` for ``Enabled``
                  , and specify empty ``Bucket`` and ``Prefix`` elements. If you specify ``false``
                  for ``Enabled`` but you specify values for ``Bucket`` , ``prefix`` , and
                  ``IncludeCookies`` , the values are automatically deleted.

                - **IncludeCookies** *(boolean) --*

                  Specifies whether you want CloudFront to include cookies in access logs, specify
                  ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs,
                  CloudFront logs all cookies regardless of how you configure the cache behaviors
                  for this distribution. If you don't want to include cookies when you create a
                  distribution or if you want to disable include cookies for an existing
                  distribution, specify ``false`` for ``IncludeCookies`` .

                - **Bucket** *(string) --*

                  The Amazon S3 bucket to store the access logs in, for example,
                  ``myawslogbucket.s3.amazonaws.com`` .

                - **Prefix** *(string) --*

                  An optional string that you want CloudFront to prefix to the access log
                  ``filenames`` for this distribution, for example, ``myprefix/`` . If you want to
                  enable logging, but you don't want to specify a prefix, you still must include an
                  empty ``Prefix`` element in the ``Logging`` element.

              - **PriceClass** *(string) --*

                The price class that corresponds with the maximum price that you want to pay for
                CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to
                requests for your objects from all CloudFront edge locations.

                If you specify a price class other than ``PriceClass_All`` , CloudFront serves your
                objects from the CloudFront edge location that has the lowest latency among the edge
                locations in your price class. Viewers who are in or near regions that are excluded
                from your specified price class may encounter slower performance.

                For more information about price classes, see `Choosing the Price Class for a
                CloudFront Distribution
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
                in the *Amazon CloudFront Developer Guide* . For information about CloudFront
                pricing, including how price classes (such as Price Class 100) map to CloudFront
                regions, see `Amazon CloudFront Pricing
                <http://aws.amazon.com/cloudfront/pricing/>`__ . For price class information, scroll
                down to see the table at the bottom of the page.

              - **Enabled** *(boolean) --*

                From this field, you can enable or disable the selected distribution.

              - **ViewerCertificate** *(dict) --*

                A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                request your objects, whether you're using an alternate domain name with HTTPS, and
                if so, if you're using AWS Certificate Manager (ACM) or a third-party certificate
                authority.

                - **CloudFrontDefaultCertificate** *(boolean) --*

                  If you're using the CloudFront domain name for your distribution, such as
                  ``d111111abcdef8.cloudfront.net`` , specify the following value:

                  * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                - **IAMCertificateId** *(string) --*

                  If you want viewers to use HTTPS to request your objects and you're using an
                  alternate domain name, you must choose the type of certificate that you want to
                  use. Specify the following value if you purchased your certificate from a
                  third-party certificate authority:

                  * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                  certificate ID* `` is the ID that IAM returned when you added the certificate to
                  the IAM certificate store.

                  If you specify ``IAMCertificateId`` , you must also specify a value for
                  ``SSLSupportMethod`` .

                - **ACMCertificateArn** *(string) --*

                  If you want viewers to use HTTPS to request your objects and you're using an
                  alternate domain name, you must choose the type of certificate that you want to
                  use. Specify the following value if ACM provided your certificate:

                  * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                  where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                  certificate that you want to use for this distribution.

                  If you specify ``ACMCertificateArn`` , you must also specify a value for
                  ``SSLSupportMethod`` .

                - **SSLSupportMethod** *(string) --*

                  If you specify a value for `ACMCertificateArn
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                  or for `IAMCertificateId
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                  , you must also specify how you want CloudFront to serve HTTPS requests: using a
                  method that works for browsers and clients released after 2010 or one that works
                  for all clients.

                  * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                  support Server Name Indication (SNI). All modern browsers support SNI, but there
                  are a few that don't. For a current list of the browsers that support SNI, see the
                  `Wikipedia entry Server Name Indication
                  <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about options
                  to explore if you have users with browsers that don't include SNI support, see
                  `Choosing How CloudFront Serves HTTPS Requests
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                  respond to HTTPS requests from any viewer. However, there are additional monthly
                  charges. For details, including specific pricing information, see `Custom SSL
                  options for Amazon CloudFront
                  <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                  site.

                  Don't specify a value for ``SSLSupportMethod`` if you specified
                  ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                  For more information, see `Choosing How CloudFront Serves HTTPS Requests
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **MinimumProtocolVersion** *(string) --*

                  Specify the security policy that you want CloudFront to use for HTTPS connections.
                  A security policy determines two settings:

                  * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

                  * The cipher that CloudFront uses to encrypt the content that it returns to
                  viewers

                  .. note::

                    On the CloudFront console, this setting is called **Security policy** .

                  We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                  browsers or devices that do not support TLSv1.1 or later.

                  When both of the following are true, you must specify ``TLSv1`` or later for the
                  security policy:

                  * You're using a custom certificate: you specified a value for
                  ``ACMCertificateArn`` or for ``IAMCertificateId``

                  * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                  If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                  automatically sets the security policy to ``TLSv1`` regardless of the value that
                  you specify for ``MinimumProtocolVersion`` .

                  For information about the relationship between the security policy that you choose
                  and the protocols and ciphers that CloudFront uses to communicate with viewers,
                  see `Supported SSL/TLS Protocols and Ciphers for Communication Between Viewers and
                  CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Certificate** *(string) --*

                  This field is no longer used. Use one of the following fields instead:

                  * `ACMCertificateArn
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                  * `IAMCertificateId
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                  * `CloudFrontDefaultCertificate
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                - **CertificateSource** *(string) --*

                  This field is no longer used. Use one of the following fields instead:

                  * `ACMCertificateArn
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                  * `IAMCertificateId
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                  * `CloudFrontDefaultCertificate
                  <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

              - **Restrictions** *(dict) --*

                A complex type that identifies ways in which you want to restrict distribution of
                your content.

                - **GeoRestriction** *(dict) --*

                  A complex type that controls the countries in which your content is distributed.
                  CloudFront determines the location of your users using ``MaxMind`` GeoIP
                  databases.

                  - **RestrictionType** *(string) --*

                    The method that you want to use to restrict distribution of your content by
                    country:

                    * ``none`` : No geo restriction is enabled, meaning access to content is not
                    restricted by client geo location.

                    * ``blacklist`` : The ``Location`` elements specify the countries in which you
                    don't want CloudFront to distribute your content.

                    * ``whitelist`` : The ``Location`` elements specify the countries in which you
                    want CloudFront to distribute your content.

                  - **Quantity** *(integer) --*

                    When geo restriction is ``enabled`` , this is the number of countries in your
                    ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled, ``Quantity``
                    is ``0`` , and you can omit ``Items`` .

                  - **Items** *(list) --*

                    A complex type that contains a ``Location`` element for each country in which
                    you want CloudFront either to distribute your content (``whitelist`` ) or not
                    distribute your content (``blacklist`` ).

                    The ``Location`` element is a two-letter, uppercase country code for a country
                    that you want to include in your ``blacklist`` or ``whitelist`` . Include one
                    ``Location`` element for each country.

                    CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current
                    list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code
                    on the *International Organization for Standardization* website. You can also
                    refer to the country list on the CloudFront console, which includes both country
                    names and codes.

                    - *(string) --*

              - **WebACLId** *(string) --*

                A unique identifier that specifies the AWS WAF web ACL, if any, to associate with
                this distribution.

                AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS
                requests that are forwarded to CloudFront, and lets you control access to your
                content. Based on conditions that you specify, such as the IP addresses that
                requests originate from or the values of query strings, CloudFront responds to
                requests either with the requested content or with an HTTP 403 status code
                (Forbidden). You can also configure CloudFront to return a custom error page when a
                request is blocked. For more information about AWS WAF, see the `AWS WAF Developer
                Guide <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__
                .

              - **HttpVersion** *(string) --*

                (Optional) Specify the maximum HTTP version that you want viewers to use to
                communicate with CloudFront. The default value for new web distributions is http2.
                Viewers that don't support HTTP/2 automatically use an earlier HTTP version.

                For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and
                must support Server Name Identification (SNI).

                In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces
                latency. You can improve performance by optimizing for HTTP/2. For more information,
                do an Internet search for "http/2 optimization."

              - **IsIPV6Enabled** *(boolean) --*

                If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your
                distribution, specify ``true`` . If you specify ``false`` , CloudFront responds to
                IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP addresses.
                This allows viewers to submit a second request, for an IPv4 address for your
                distribution.

                In general, you should enable IPv6 if you have users on IPv6 networks who want to
                access your content. However, if you're using signed URLs or signed cookies to
                restrict access to your content, and if you're using a custom policy that includes
                the ``IpAddress`` parameter to restrict the IP addresses that can access your
                content, don't enable IPv6. If you want to restrict access to some content by IP
                address and not restrict access to other content (or restrict access but not by IP
                address), you can create two distributions. For more information, see `Creating a
                Signed URL Using a Custom Policy
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
                in the *Amazon CloudFront Developer Guide* .

                If you're using an Amazon Route 53 alias resource record set to route traffic to
                your CloudFront distribution, you need to create a second alias resource record set
                when both of the following are true:

                * You enable IPv6 for the distribution

                * You're using alternate domain names in the URLs for your objects

                For more information, see `Routing Traffic to an Amazon CloudFront Web Distribution
                by Using Your Domain Name
                <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
                in the *Amazon Route 53 Developer Guide* .

                If you created a CNAME resource record set, either with Amazon Route 53 or with
                another DNS service, you don't need to make any changes. A CNAME record will route
                traffic to your distribution regardless of the IP address format of the viewer
                request.

            - **ETag** *(string) --*

              The current version of the configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_field_level_encryption(self, Id: str) -> ClientGetFieldLevelEncryptionResponseTypeDef:
        """
        Get the field-level encryption configuration information.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetFieldLevelEncryption>`_

        **Request Syntax**
        ::

          response = client.get_field_level_encryption(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Request the ID for the field-level encryption configuration information.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryption': {
                    'Id': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'FieldLevelEncryptionConfig': {
                        'CallerReference': 'string',
                        'Comment': 'string',
                        'QueryArgProfileConfig': {
                            'ForwardWhenQueryArgProfileIsUnknown': True|False,
                            'QueryArgProfiles': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'QueryArg': 'string',
                                        'ProfileId': 'string'
                                    },
                                ]
                            }
                        },
                        'ContentTypeProfileConfig': {
                            'ForwardWhenContentTypeIsUnknown': True|False,
                            'ContentTypeProfiles': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Format': 'URLEncoded',
                                        'ProfileId': 'string',
                                        'ContentType': 'string'
                                    },
                                ]
                            }
                        }
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryption** *(dict) --*

              Return the field-level encryption configuration information.

              - **Id** *(string) --*

                The configuration ID for a field-level encryption configuration which includes a set
                of profiles that specify certain selected data fields to be encrypted by specific
                public keys.

              - **LastModifiedTime** *(datetime) --*

                The last time the field-level encryption configuration was changed.

              - **FieldLevelEncryptionConfig** *(dict) --*

                A complex data type that includes the profile configurations specified for
                field-level encryption.

                - **CallerReference** *(string) --*

                  A unique number that ensures the request can't be replayed.

                - **Comment** *(string) --*

                  An optional comment about the configuration.

                - **QueryArgProfileConfig** *(dict) --*

                  A complex data type that specifies when to forward content if a profile isn't
                  found and the profile that can be provided as a query argument in a request.

                  - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --*

                    Flag to set if you want a request to be forwarded to the origin even if the
                    profile specified by the field-level encryption query argument, fle-profile, is
                    unknown.

                  - **QueryArgProfiles** *(dict) --*

                    Profiles specified for query argument-profile mapping for field-level
                    encryption.

                    - **Quantity** *(integer) --*

                      Number of profiles for query argument-profile mapping for field-level
                      encryption.

                    - **Items** *(list) --*

                      Number of items for query argument-profile mapping for field-level encryption.

                      - *(dict) --*

                        Query argument-profile mapping for field-level encryption.

                        - **QueryArg** *(string) --*

                          Query argument for field-level encryption query argument-profile mapping.

                        - **ProfileId** *(string) --*

                          ID of profile to use for field-level encryption query argument-profile
                          mapping

                - **ContentTypeProfileConfig** *(dict) --*

                  A complex data type that specifies when to forward content if a content type isn't
                  recognized and profiles to use as by default in a request if a query argument
                  doesn't specify a profile to use.

                  - **ForwardWhenContentTypeIsUnknown** *(boolean) --*

                    The setting in a field-level encryption content type-profile mapping that
                    specifies what to do when an unknown content type is provided for the profile.
                    If true, content is forwarded without being encrypted when the content type is
                    unknown. If false (the default), an error is returned when the content type is
                    unknown.

                  - **ContentTypeProfiles** *(dict) --*

                    The configuration for a field-level encryption content type-profile.

                    - **Quantity** *(integer) --*

                      The number of field-level encryption content type-profile mappings.

                    - **Items** *(list) --*

                      Items in a field-level encryption content type-profile mapping.

                      - *(dict) --*

                        A field-level encryption content type profile.

                        - **Format** *(string) --*

                          The format for a field-level encryption content type-profile mapping.

                        - **ProfileId** *(string) --*

                          The profile ID for a field-level encryption content type-profile mapping.

                        - **ContentType** *(string) --*

                          The content type for a field-level encryption content type-profile
                          mapping.

            - **ETag** *(string) --*

              The current version of the field level encryption configuration. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_field_level_encryption_config(
        self, Id: str
    ) -> ClientGetFieldLevelEncryptionConfigResponseTypeDef:
        """
        Get the field-level encryption configuration information.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetFieldLevelEncryptionConfig>`_

        **Request Syntax**
        ::

          response = client.get_field_level_encryption_config(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Request the ID for the field-level encryption configuration information.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionConfig': {
                    'CallerReference': 'string',
                    'Comment': 'string',
                    'QueryArgProfileConfig': {
                        'ForwardWhenQueryArgProfileIsUnknown': True|False,
                        'QueryArgProfiles': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'QueryArg': 'string',
                                    'ProfileId': 'string'
                                },
                            ]
                        }
                    },
                    'ContentTypeProfileConfig': {
                        'ForwardWhenContentTypeIsUnknown': True|False,
                        'ContentTypeProfiles': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Format': 'URLEncoded',
                                    'ProfileId': 'string',
                                    'ContentType': 'string'
                                },
                            ]
                        }
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionConfig** *(dict) --*

              Return the field-level encryption configuration information.

              - **CallerReference** *(string) --*

                A unique number that ensures the request can't be replayed.

              - **Comment** *(string) --*

                An optional comment about the configuration.

              - **QueryArgProfileConfig** *(dict) --*

                A complex data type that specifies when to forward content if a profile isn't found
                and the profile that can be provided as a query argument in a request.

                - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --*

                  Flag to set if you want a request to be forwarded to the origin even if the
                  profile specified by the field-level encryption query argument, fle-profile, is
                  unknown.

                - **QueryArgProfiles** *(dict) --*

                  Profiles specified for query argument-profile mapping for field-level encryption.

                  - **Quantity** *(integer) --*

                    Number of profiles for query argument-profile mapping for field-level
                    encryption.

                  - **Items** *(list) --*

                    Number of items for query argument-profile mapping for field-level encryption.

                    - *(dict) --*

                      Query argument-profile mapping for field-level encryption.

                      - **QueryArg** *(string) --*

                        Query argument for field-level encryption query argument-profile mapping.

                      - **ProfileId** *(string) --*

                        ID of profile to use for field-level encryption query argument-profile
                        mapping

              - **ContentTypeProfileConfig** *(dict) --*

                A complex data type that specifies when to forward content if a content type isn't
                recognized and profiles to use as by default in a request if a query argument
                doesn't specify a profile to use.

                - **ForwardWhenContentTypeIsUnknown** *(boolean) --*

                  The setting in a field-level encryption content type-profile mapping that
                  specifies what to do when an unknown content type is provided for the profile. If
                  true, content is forwarded without being encrypted when the content type is
                  unknown. If false (the default), an error is returned when the content type is
                  unknown.

                - **ContentTypeProfiles** *(dict) --*

                  The configuration for a field-level encryption content type-profile.

                  - **Quantity** *(integer) --*

                    The number of field-level encryption content type-profile mappings.

                  - **Items** *(list) --*

                    Items in a field-level encryption content type-profile mapping.

                    - *(dict) --*

                      A field-level encryption content type profile.

                      - **Format** *(string) --*

                        The format for a field-level encryption content type-profile mapping.

                      - **ProfileId** *(string) --*

                        The profile ID for a field-level encryption content type-profile mapping.

                      - **ContentType** *(string) --*

                        The content type for a field-level encryption content type-profile mapping.

            - **ETag** *(string) --*

              The current version of the field level encryption configuration. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_field_level_encryption_profile(
        self, Id: str
    ) -> ClientGetFieldLevelEncryptionProfileResponseTypeDef:
        """
        Get the field-level encryption profile information.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetFieldLevelEncryptionProfile>`_

        **Request Syntax**
        ::

          response = client.get_field_level_encryption_profile(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Get the ID for the field-level encryption profile information.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionProfile': {
                    'Id': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'FieldLevelEncryptionProfileConfig': {
                        'Name': 'string',
                        'CallerReference': 'string',
                        'Comment': 'string',
                        'EncryptionEntities': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PublicKeyId': 'string',
                                    'ProviderId': 'string',
                                    'FieldPatterns': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                            ]
                        }
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionProfile** *(dict) --*

              Return the field-level encryption profile information.

              - **Id** *(string) --*

                The ID for a field-level encryption profile configuration which includes a set of
                profiles that specify certain selected data fields to be encrypted by specific
                public keys.

              - **LastModifiedTime** *(datetime) --*

                The last time the field-level encryption profile was updated.

              - **FieldLevelEncryptionProfileConfig** *(dict) --*

                A complex data type that includes the profile name and the encryption entities for
                the field-level encryption profile.

                - **Name** *(string) --*

                  Profile name for the field-level encryption profile.

                - **CallerReference** *(string) --*

                  A unique number that ensures that the request can't be replayed.

                - **Comment** *(string) --*

                  An optional comment for the field-level encryption profile.

                - **EncryptionEntities** *(dict) --*

                  A complex data type of encryption entities for the field-level encryption profile
                  that include the public key ID, provider, and field patterns for specifying which
                  fields to encrypt with this key.

                  - **Quantity** *(integer) --*

                    Number of field pattern items in a field-level encryption content type-profile
                    mapping.

                  - **Items** *(list) --*

                    An array of field patterns in a field-level encryption content type-profile
                    mapping.

                    - *(dict) --*

                      Complex data type for field-level encryption profiles that includes the
                      encryption key and field pattern specifications.

                      - **PublicKeyId** *(string) --*

                        The public key associated with a set of field-level encryption patterns, to
                        be used when encrypting the fields that match the patterns.

                      - **ProviderId** *(string) --*

                        The provider associated with the public key being used for encryption. This
                        value must also be provided with the private key for applications to be able
                        to decrypt data.

                      - **FieldPatterns** *(dict) --*

                        Field patterns in a field-level encryption content type profile specify the
                        fields that you want to be encrypted. You can provide the full field name,
                        or any beginning characters followed by a wildcard (*). You can't overlap
                        field patterns. For example, you can't have both ABC* and AB*. Note that
                        field patterns are case-sensitive.

                        - **Quantity** *(integer) --*

                          The number of field-level encryption field patterns.

                        - **Items** *(list) --*

                          An array of the field-level encryption field patterns.

                          - *(string) --*

            - **ETag** *(string) --*

              The current version of the field level encryption profile. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_field_level_encryption_profile_config(
        self, Id: str
    ) -> ClientGetFieldLevelEncryptionProfileConfigResponseTypeDef:
        """
        Get the field-level encryption profile configuration information.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetFieldLevelEncryptionProfileConfig>`_

        **Request Syntax**
        ::

          response = client.get_field_level_encryption_profile_config(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Get the ID for the field-level encryption profile configuration information.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionProfileConfig': {
                    'Name': 'string',
                    'CallerReference': 'string',
                    'Comment': 'string',
                    'EncryptionEntities': {
                        'Quantity': 123,
                        'Items': [
                            {
                                'PublicKeyId': 'string',
                                'ProviderId': 'string',
                                'FieldPatterns': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionProfileConfig** *(dict) --*

              Return the field-level encryption profile configuration information.

              - **Name** *(string) --*

                Profile name for the field-level encryption profile.

              - **CallerReference** *(string) --*

                A unique number that ensures that the request can't be replayed.

              - **Comment** *(string) --*

                An optional comment for the field-level encryption profile.

              - **EncryptionEntities** *(dict) --*

                A complex data type of encryption entities for the field-level encryption profile
                that include the public key ID, provider, and field patterns for specifying which
                fields to encrypt with this key.

                - **Quantity** *(integer) --*

                  Number of field pattern items in a field-level encryption content type-profile
                  mapping.

                - **Items** *(list) --*

                  An array of field patterns in a field-level encryption content type-profile
                  mapping.

                  - *(dict) --*

                    Complex data type for field-level encryption profiles that includes the
                    encryption key and field pattern specifications.

                    - **PublicKeyId** *(string) --*

                      The public key associated with a set of field-level encryption patterns, to be
                      used when encrypting the fields that match the patterns.

                    - **ProviderId** *(string) --*

                      The provider associated with the public key being used for encryption. This
                      value must also be provided with the private key for applications to be able
                      to decrypt data.

                    - **FieldPatterns** *(dict) --*

                      Field patterns in a field-level encryption content type profile specify the
                      fields that you want to be encrypted. You can provide the full field name, or
                      any beginning characters followed by a wildcard (*). You can't overlap field
                      patterns. For example, you can't have both ABC* and AB*. Note that field
                      patterns are case-sensitive.

                      - **Quantity** *(integer) --*

                        The number of field-level encryption field patterns.

                      - **Items** *(list) --*

                        An array of the field-level encryption field patterns.

                        - *(string) --*

            - **ETag** *(string) --*

              The current version of the field-level encryption profile configuration result. For
              example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_invalidation(
        self, DistributionId: str, Id: str
    ) -> ClientGetInvalidationResponseTypeDef:
        """
        Get the information about an invalidation.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetInvalidation>`_

        **Request Syntax**
        ::

          response = client.get_invalidation(
              DistributionId='string',
              Id='string'
          )
        :type DistributionId: string
        :param DistributionId: **[REQUIRED]**

          The distribution's ID.

        :type Id: string
        :param Id: **[REQUIRED]**

          The identifier for the invalidation request, for example, ``IDFDVBD632BHDS5`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Invalidation': {
                    'Id': 'string',
                    'Status': 'string',
                    'CreateTime': datetime(2015, 1, 1),
                    'InvalidationBatch': {
                        'Paths': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'CallerReference': 'string'
                    }
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Invalidation** *(dict) --*

              The invalidation's information. For more information, see `Invalidation Complex Type
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/InvalidationDatatype.html>`__
              .

              - **Id** *(string) --*

                The identifier for the invalidation request. For example: ``IDFDVBD632BHDS5`` .

              - **Status** *(string) --*

                The status of the invalidation request. When the invalidation batch is finished, the
                status is ``Completed`` .

              - **CreateTime** *(datetime) --*

                The date and time the invalidation request was first made.

              - **InvalidationBatch** *(dict) --*

                The current invalidation information for the batch request.

                - **Paths** *(dict) --*

                  A complex type that contains information about the objects that you want to
                  invalidate. For more information, see `Specifying the Objects to Invalidate
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --*

                    The number of invalidation paths specified for the objects that you want to
                    invalidate.

                  - **Items** *(list) --*

                    A complex type that contains a list of the paths that you want to invalidate.

                    - *(string) --*

                - **CallerReference** *(string) --*

                  A value that you specify to uniquely identify an invalidation request. CloudFront
                  uses the value to prevent you from accidentally resubmitting an identical request.
                  Whenever you create a new invalidation request, you must specify a new value for
                  ``CallerReference`` and change other values in the request as applicable. One way
                  to ensure that the value of ``CallerReference`` is unique is to use a
                  ``timestamp`` , for example, ``20120301090000`` .

                  If you make a second invalidation request with the same value for
                  ``CallerReference`` , and if the rest of the request is the same, CloudFront
                  doesn't create a new invalidation request. Instead, CloudFront returns information
                  about the invalidation request that you previously created with the same
                  ``CallerReference`` .

                  If ``CallerReference`` is a value you already sent in a previous invalidation
                  batch request but the content of any ``Path`` is different from the original
                  request, CloudFront returns an ``InvalidationBatchAlreadyExists`` error.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_public_key(self, Id: str) -> ClientGetPublicKeyResponseTypeDef:
        """
        Get the public key information.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetPublicKey>`_

        **Request Syntax**
        ::

          response = client.get_public_key(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Request the ID for the public key.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'PublicKey': {
                    'Id': 'string',
                    'CreatedTime': datetime(2015, 1, 1),
                    'PublicKeyConfig': {
                        'CallerReference': 'string',
                        'Name': 'string',
                        'EncodedKey': 'string',
                        'Comment': 'string'
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **PublicKey** *(dict) --*

              Return the public key.

              - **Id** *(string) --*

                A unique ID assigned to a public key you've added to CloudFront.

              - **CreatedTime** *(datetime) --*

                A time you added a public key to CloudFront.

              - **PublicKeyConfig** *(dict) --*

                A complex data type for a public key you add to CloudFront to use with features like
                field-level encryption.

                - **CallerReference** *(string) --*

                  A unique number that ensures that the request can't be replayed.

                - **Name** *(string) --*

                  The name for a public key you add to CloudFront to use with features like
                  field-level encryption.

                - **EncodedKey** *(string) --*

                  The encoded public key that you want to add to CloudFront to use with features
                  like field-level encryption.

                - **Comment** *(string) --*

                  An optional comment about a public key.

            - **ETag** *(string) --*

              The current version of the public key. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_public_key_config(self, Id: str) -> ClientGetPublicKeyConfigResponseTypeDef:
        """
        Return public key configuration informaation

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetPublicKeyConfig>`_

        **Request Syntax**
        ::

          response = client.get_public_key_config(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          Request the ID for the public key configuration.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'PublicKeyConfig': {
                    'CallerReference': 'string',
                    'Name': 'string',
                    'EncodedKey': 'string',
                    'Comment': 'string'
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **PublicKeyConfig** *(dict) --*

              Return the result for the public key configuration.

              - **CallerReference** *(string) --*

                A unique number that ensures that the request can't be replayed.

              - **Name** *(string) --*

                The name for a public key you add to CloudFront to use with features like
                field-level encryption.

              - **EncodedKey** *(string) --*

                The encoded public key that you want to add to CloudFront to use with features like
                field-level encryption.

              - **Comment** *(string) --*

                An optional comment about a public key.

            - **ETag** *(string) --*

              The current version of the public key configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_streaming_distribution(self, Id: str) -> ClientGetStreamingDistributionResponseTypeDef:
        """
        Gets information about a specified RTMP distribution, including the distribution
        configuration.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetStreamingDistribution>`_

        **Request Syntax**
        ::

          response = client.get_streaming_distribution(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The streaming distribution's ID.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'StreamingDistribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'StreamingDistributionConfig': {
                        'CallerReference': 'string',
                        'S3Origin': {
                            'DomainName': 'string',
                            'OriginAccessIdentity': 'string'
                        },
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'TrustedSigners': {
                            'Enabled': True|False,
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **StreamingDistribution** *(dict) --*

              The streaming distribution's information.

              - **Id** *(string) --*

                The identifier for the RTMP distribution. For example: ``EGTXBD79EXAMPLE`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                The current status of the RTMP distribution. When the status is ``Deployed`` , the
                distribution's information is propagated to all CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time that the distribution was last modified.

              - **DomainName** *(string) --*

                The domain name that corresponds to the streaming distribution, for example,
                ``s5c39gqb8ow64r.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                A complex type that lists the AWS accounts, if any, that you included in the
                ``TrustedSigners`` complex type for this distribution. These are the accounts that
                you want to allow to create signed URLs for private content.

                The ``Signer`` complex type lists the AWS account number of the trusted signer or
                ``self`` if the signer is the AWS account that created the distribution. The
                ``Signer`` element also includes the IDs of any active CloudFront key pairs that are
                associated with the trusted signer's AWS account. If no ``KeyPairId`` element
                appears for a ``Signer`` , that signer can't create signed URLs.

                For more information, see `Serving Private Content through CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **StreamingDistributionConfig** *(dict) --*

                The current configuration information for the RTMP distribution.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **S3Origin** *(dict) --*

                  A complex type that contains information about the Amazon S3 bucket from which you
                  want CloudFront to get your media files for distribution.

                  - **DomainName** *(string) --*

                    The DNS name of the Amazon S3 origin.

                  - **OriginAccessIdentity** *(string) --*

                    The CloudFront origin access identity to associate with the distribution. Use an
                    origin access identity to configure the distribution so that end users can only
                    access objects in an Amazon S3 bucket through CloudFront.

                    If you want end users to be able to access objects using either the CloudFront
                    URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                    To delete the origin access identity from an existing distribution, update the
                    distribution configuration and include an empty ``OriginAccessIdentity``
                    element.

                    To replace the origin access identity, update the distribution configuration and
                    specify the new origin access identity.

                    For more information, see `Using an Origin Access Identity to Restrict Access to
                    Your Amazon S3 Content
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this streaming distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **Comment** *(string) --*

                  Any comments you want to include about the streaming distribution.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the streaming
                  distribution.

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a streaming
                    distribution or if you want to disable logging for an existing streaming
                    distribution, specify ``false`` for ``Enabled`` , and specify ``empty Bucket``
                    and ``Prefix`` elements. If you specify ``false`` for ``Enabled`` but you
                    specify values for ``Bucket`` and ``Prefix`` , the values are automatically
                    deleted.

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    filenames for this streaming distribution, for example, ``myprefix/`` . If you
                    want to enable logging, but you don't want to specify a prefix, you still must
                    include an empty ``Prefix`` element in the ``Logging`` element.

                - **TrustedSigners** *(dict) --*

                  A complex type that specifies any AWS accounts that you want to permit to create
                  signed URLs for private content. If you want the distribution to use signed URLs,
                  include this element; if you want the distribution to use public URLs, remove this
                  element. For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --*

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **PriceClass** *(string) --*

                  A complex type that contains information about price class for this streaming
                  distribution.

                - **Enabled** *(boolean) --*

                  Whether the streaming distribution is enabled to accept user requests for content.

            - **ETag** *(string) --*

              The current version of the streaming distribution's information. For example:
              ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_streaming_distribution_config(
        self, Id: str
    ) -> ClientGetStreamingDistributionConfigResponseTypeDef:
        """
        Get the configuration information about a streaming distribution.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/GetStreamingDistributionConfig>`_

        **Request Syntax**
        ::

          response = client.get_streaming_distribution_config(
              Id='string'
          )
        :type Id: string
        :param Id: **[REQUIRED]**

          The streaming distribution's ID.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'StreamingDistributionConfig': {
                    'CallerReference': 'string',
                    'S3Origin': {
                        'DomainName': 'string',
                        'OriginAccessIdentity': 'string'
                    },
                    'Aliases': {
                        'Quantity': 123,
                        'Items': [
                            'string',
                        ]
                    },
                    'Comment': 'string',
                    'Logging': {
                        'Enabled': True|False,
                        'Bucket': 'string',
                        'Prefix': 'string'
                    },
                    'TrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            'string',
                        ]
                    },
                    'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                    'Enabled': True|False
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **StreamingDistributionConfig** *(dict) --*

              The streaming distribution's configuration information.

              - **CallerReference** *(string) --*

                A unique value (for example, a date-time stamp) that ensures that the request can't
                be replayed.

                If the value of ``CallerReference`` is new (regardless of the content of the
                ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

                If ``CallerReference`` is a value that you already sent in a previous request to
                create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

              - **S3Origin** *(dict) --*

                A complex type that contains information about the Amazon S3 bucket from which you
                want CloudFront to get your media files for distribution.

                - **DomainName** *(string) --*

                  The DNS name of the Amazon S3 origin.

                - **OriginAccessIdentity** *(string) --*

                  The CloudFront origin access identity to associate with the distribution. Use an
                  origin access identity to configure the distribution so that end users can only
                  access objects in an Amazon S3 bucket through CloudFront.

                  If you want end users to be able to access objects using either the CloudFront URL
                  or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                  To delete the origin access identity from an existing distribution, update the
                  distribution configuration and include an empty ``OriginAccessIdentity`` element.

                  To replace the origin access identity, update the distribution configuration and
                  specify the new origin access identity.

                  For more information, see `Using an Origin Access Identity to Restrict Access to
                  Your Amazon S3 Content
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                  in the *Amazon CloudFront Developer Guide* .

              - **Aliases** *(dict) --*

                A complex type that contains information about CNAMEs (alternate domain names), if
                any, for this streaming distribution.

                - **Quantity** *(integer) --*

                  The number of CNAME aliases, if any, that you want to associate with this
                  distribution.

                - **Items** *(list) --*

                  A complex type that contains the CNAME aliases, if any, that you want to associate
                  with this distribution.

                  - *(string) --*

              - **Comment** *(string) --*

                Any comments you want to include about the streaming distribution.

              - **Logging** *(dict) --*

                A complex type that controls whether access logs are written for the streaming
                distribution.

                - **Enabled** *(boolean) --*

                  Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket.
                  If you don't want to enable logging when you create a streaming distribution or if
                  you want to disable logging for an existing streaming distribution, specify
                  ``false`` for ``Enabled`` , and specify ``empty Bucket`` and ``Prefix`` elements.
                  If you specify ``false`` for ``Enabled`` but you specify values for ``Bucket`` and
                  ``Prefix`` , the values are automatically deleted.

                - **Bucket** *(string) --*

                  The Amazon S3 bucket to store the access logs in, for example,
                  ``myawslogbucket.s3.amazonaws.com`` .

                - **Prefix** *(string) --*

                  An optional string that you want CloudFront to prefix to the access log filenames
                  for this streaming distribution, for example, ``myprefix/`` . If you want to
                  enable logging, but you don't want to specify a prefix, you still must include an
                  empty ``Prefix`` element in the ``Logging`` element.

              - **TrustedSigners** *(dict) --*

                A complex type that specifies any AWS accounts that you want to permit to create
                signed URLs for private content. If you want the distribution to use signed URLs,
                include this element; if you want the distribution to use public URLs, remove this
                element. For more information, see `Serving Private Content through CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Enabled** *(boolean) --*

                  Specifies whether you want to require viewers to use signed URLs to access the
                  files specified by ``PathPattern`` and ``TargetOriginId`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers for this cache behavior.

                - **Items** *(list) --*

                   **Optional** : A complex type that contains trusted signers for this cache
                   behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                  - *(string) --*

              - **PriceClass** *(string) --*

                A complex type that contains information about price class for this streaming
                distribution.

              - **Enabled** *(boolean) --*

                Whether the streaming distribution is enabled to accept user requests for content.

            - **ETag** *(string) --*

              The current version of the configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_cloud_front_origin_access_identities(
        self, Marker: str = None, MaxItems: str = None
    ) -> ClientListCloudFrontOriginAccessIdentitiesResponseTypeDef:
        """
        Lists origin access identities.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListCloudFrontOriginAccessIdentities>`_

        **Request Syntax**
        ::

          response = client.list_cloud_front_origin_access_identities(
              Marker='string',
              MaxItems='string'
          )
        :type Marker: string
        :param Marker:

          Use this when paginating results to indicate where to begin in your list of origin access
          identities. The results include identities in the list that occur after the marker. To get
          the next page of results, set the ``Marker`` to the value of the ``NextMarker`` from the
          current page's response (which is also the ID of the last identity on that page).

        :type MaxItems: string
        :param MaxItems:

          The maximum number of origin access identities you want in the response body.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'CloudFrontOriginAccessIdentityList': {
                    'Marker': 'string',
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'IsTruncated': True|False,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'S3CanonicalUserId': 'string',
                            'Comment': 'string'
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **CloudFrontOriginAccessIdentityList** *(dict) --*

              The ``CloudFrontOriginAccessIdentityList`` type.

              - **Marker** *(string) --*

                Use this when paginating results to indicate where to begin in your list of origin
                access identities. The results include identities in the list that occur after the
                marker. To get the next page of results, set the ``Marker`` to the value of the
                ``NextMarker`` from the current page's response (which is also the ID of the last
                identity on that page).

              - **NextMarker** *(string) --*

                If ``IsTruncated`` is ``true`` , this element is present and contains the value you
                can use for the ``Marker`` request parameter to continue listing your origin access
                identities where they left off.

              - **MaxItems** *(integer) --*

                The maximum number of origin access identities you want in the response body.

              - **IsTruncated** *(boolean) --*

                A flag that indicates whether more origin access identities remain to be listed. If
                your results were truncated, you can make a follow-up pagination request using the
                ``Marker`` request parameter to retrieve more items in the list.

              - **Quantity** *(integer) --*

                The number of CloudFront origin access identities that were created by the current
                AWS account.

              - **Items** *(list) --*

                A complex type that contains one ``CloudFrontOriginAccessIdentitySummary`` element
                for each origin access identity that was created by the current AWS account.

                - *(dict) --*

                  Summary of the information about a CloudFront origin access identity.

                  - **Id** *(string) --*

                    The ID for the origin access identity. For example: ``E74FTE3AJFJ256A`` .

                  - **S3CanonicalUserId** *(string) --*

                    The Amazon S3 canonical user ID for the origin access identity, which you use
                    when giving the origin access identity read permission to an object in Amazon
                    S3.

                  - **Comment** *(string) --*

                    The comment for this origin access identity, as originally specified when
                    created.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_distributions(
        self, Marker: str = None, MaxItems: str = None
    ) -> ClientListDistributionsResponseTypeDef:
        """
        List CloudFront distributions.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListDistributions>`_

        **Request Syntax**
        ::

          response = client.list_distributions(
              Marker='string',
              MaxItems='string'
          )
        :type Marker: string
        :param Marker:

          Use this when paginating results to indicate where to begin in your list of distributions.
          The results include distributions in the list that occur after the marker. To get the next
          page of results, set the ``Marker`` to the value of the ``NextMarker`` from the current
          page's response (which is also the ID of the last distribution on that page).

        :type MaxItems: string
        :param MaxItems:

          The maximum number of distributions you want in the response body.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'DistributionList': {
                    'Marker': 'string',
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'IsTruncated': True|False,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'ARN': 'string',
                            'Status': 'string',
                            'LastModifiedTime': datetime(2015, 1, 1),
                            'DomainName': 'string',
                            'Aliases': {
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'Origins': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Id': 'string',
                                        'DomainName': 'string',
                                        'OriginPath': 'string',
                                        'CustomHeaders': {
                                            'Quantity': 123,
                                            'Items': [
                                                {
                                                    'HeaderName': 'string',
                                                    'HeaderValue': 'string'
                                                },
                                            ]
                                        },
                                        'S3OriginConfig': {
                                            'OriginAccessIdentity': 'string'
                                        },
                                        'CustomOriginConfig': {
                                            'HTTPPort': 123,
                                            'HTTPSPort': 123,
                                            'OriginProtocolPolicy':
                                            'http-only'
                                            |'match-viewer'
                                            |'https-only',
                                            'OriginSslProtocols': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                                ]
                                            },
                                            'OriginReadTimeout': 123,
                                            'OriginKeepaliveTimeout': 123
                                        }
                                    },
                                ]
                            },
                            'OriginGroups': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Id': 'string',
                                        'FailoverCriteria': {
                                            'StatusCodes': {
                                                'Quantity': 123,
                                                'Items': [
                                                    123,
                                                ]
                                            }
                                        },
                                        'Members': {
                                            'Quantity': 123,
                                            'Items': [
                                                {
                                                    'OriginId': 'string'
                                                },
                                            ]
                                        }
                                    },
                                ]
                            },
                            'DefaultCacheBehavior': {
                                'TargetOriginId': 'string',
                                'ForwardedValues': {
                                    'QueryString': True|False,
                                    'Cookies': {
                                        'Forward': 'none'|'whitelist'|'all',
                                        'WhitelistedNames': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'Headers': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'QueryStringCacheKeys': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'TrustedSigners': {
                                    'Enabled': True|False,
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'ViewerProtocolPolicy':
                                'allow-all'|'https-only'
                                |'redirect-to-https',
                                'MinTTL': 123,
                                'AllowedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ],
                                    'CachedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ]
                                    }
                                },
                                'SmoothStreaming': True|False,
                                'DefaultTTL': 123,
                                'MaxTTL': 123,
                                'Compress': True|False,
                                'LambdaFunctionAssociations': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'LambdaFunctionARN': 'string',
                                            'EventType':
                                            'viewer-request'
                                            |'viewer-response'
                                            |'origin-request'
                                            |'origin-response',
                                            'IncludeBody': True|False
                                        },
                                    ]
                                },
                                'FieldLevelEncryptionId': 'string'
                            },
                            'CacheBehaviors': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'PathPattern': 'string',
                                        'TargetOriginId': 'string',
                                        'ForwardedValues': {
                                            'QueryString': True|False,
                                            'Cookies': {
                                                'Forward': 'none'|'whitelist'|'all',
                                                'WhitelistedNames': {
                                                    'Quantity': 123,
                                                    'Items': [
                                                        'string',
                                                    ]
                                                }
                                            },
                                            'Headers': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            },
                                            'QueryStringCacheKeys': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            }
                                        },
                                        'TrustedSigners': {
                                            'Enabled': True|False,
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        },
                                        'ViewerProtocolPolicy':
                                        'allow-all'|'https-only'
                                        |'redirect-to-https',
                                        'MinTTL': 123,
                                        'AllowedMethods': {
                                            'Quantity': 123,
                                            'Items': [
                                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                |'DELETE',
                                            ],
                                            'CachedMethods': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                    |'DELETE',
                                                ]
                                            }
                                        },
                                        'SmoothStreaming': True|False,
                                        'DefaultTTL': 123,
                                        'MaxTTL': 123,
                                        'Compress': True|False,
                                        'LambdaFunctionAssociations': {
                                            'Quantity': 123,
                                            'Items': [
                                                {
                                                    'LambdaFunctionARN': 'string',
                                                    'EventType':
                                                    'viewer-request'|'viewer-response'|'origin-request'
                                                    |'origin-response',
                                                    'IncludeBody': True|False
                                                },
                                            ]
                                        },
                                        'FieldLevelEncryptionId': 'string'
                                    },
                                ]
                            },
                            'CustomErrorResponses': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'ErrorCode': 123,
                                        'ResponsePagePath': 'string',
                                        'ResponseCode': 'string',
                                        'ErrorCachingMinTTL': 123
                                    },
                                ]
                            },
                            'Comment': 'string',
                            'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                            'Enabled': True|False,
                            'ViewerCertificate': {
                                'CloudFrontDefaultCertificate': True|False,
                                'IAMCertificateId': 'string',
                                'ACMCertificateArn': 'string',
                                'SSLSupportMethod': 'sni-only'|'vip',
                                'MinimumProtocolVersion':
                                'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                                |'TLSv1.2_2018',
                                'Certificate': 'string',
                                'CertificateSource': 'cloudfront'|'iam'|'acm'
                            },
                            'Restrictions': {
                                'GeoRestriction': {
                                    'RestrictionType': 'blacklist'|'whitelist'|'none',
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'WebACLId': 'string',
                            'HttpVersion': 'http1.1'|'http2',
                            'IsIPV6Enabled': True|False,
                            'AliasICPRecordals': [
                                {
                                    'CNAME': 'string',
                                    'ICPRecordalStatus': 'APPROVED'|'SUSPENDED'|'PENDING'
                                },
                            ]
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **DistributionList** *(dict) --*

              The ``DistributionList`` type.

              - **Marker** *(string) --*

                The value you provided for the ``Marker`` request parameter.

              - **NextMarker** *(string) --*

                If ``IsTruncated`` is ``true`` , this element is present and contains the value you
                can use for the ``Marker`` request parameter to continue listing your distributions
                where they left off.

              - **MaxItems** *(integer) --*

                The value you provided for the ``MaxItems`` request parameter.

              - **IsTruncated** *(boolean) --*

                A flag that indicates whether more distributions remain to be listed. If your
                results were truncated, you can make a follow-up pagination request using the
                ``Marker`` request parameter to retrieve more distributions in the list.

              - **Quantity** *(integer) --*

                The number of distributions that were created by the current AWS account.

              - **Items** *(list) --*

                A complex type that contains one ``DistributionSummary`` element for each
                distribution that was created by the current AWS account.

                - *(dict) --*

                  A summary of the information about a CloudFront distribution.

                  - **Id** *(string) --*

                    The identifier for the distribution. For example: ``EDFDVBD632BHDS5`` .

                  - **ARN** *(string) --*

                    The ARN (Amazon Resource Name) for the distribution. For example:
                    ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                    ``123456789012`` is your AWS account ID.

                  - **Status** *(string) --*

                    The current status of the distribution. When the status is ``Deployed`` , the
                    distribution's information is propagated to all CloudFront edge locations.

                  - **LastModifiedTime** *(datetime) --*

                    The date and time the distribution was last modified.

                  - **DomainName** *(string) --*

                    The domain name that corresponds to the distribution, for example,
                    ``d111111abcdef8.cloudfront.net`` .

                  - **Aliases** *(dict) --*

                    A complex type that contains information about CNAMEs (alternate domain names),
                    if any, for this distribution.

                    - **Quantity** *(integer) --*

                      The number of CNAME aliases, if any, that you want to associate with this
                      distribution.

                    - **Items** *(list) --*

                      A complex type that contains the CNAME aliases, if any, that you want to
                      associate with this distribution.

                      - *(string) --*

                  - **Origins** *(dict) --*

                    A complex type that contains information about origins for this distribution.

                    - **Quantity** *(integer) --*

                      The number of origins or origin groups for this distribution.

                    - **Items** *(list) --*

                      A complex type that contains origins or origin groups for this distribution.

                      - *(dict) --*

                        A complex type that describes the Amazon S3 bucket, HTTP server (for
                        example, a web server), Amazon MediaStore, or other server from which
                        CloudFront gets your files. This can also be an origin group, if you've
                        created an origin group. You must specify at least one origin or origin
                        group.

                        For the current limit on the number of origins or origin groups that you can
                        specify for a distribution, see `Amazon CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Id** *(string) --*

                          A unique identifier for the origin or origin group. The value of ``Id``
                          must be unique within the distribution.

                          When you specify the value of ``TargetOriginId`` for the default cache
                          behavior or for another cache behavior, you indicate the origin to which
                          you want the cache behavior to route requests by specifying the value of
                          the ``Id`` element for that origin. When a request matches the path
                          pattern for that cache behavior, CloudFront routes the request to the
                          specified origin. For more information, see `Cache Behavior Settings
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **DomainName** *(string) --*

                           **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which
                           you want CloudFront to get objects for this origin, for example,
                           ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be
                           configured as a website endpoint, enter the Amazon S3 static website
                           hosting endpoint for the bucket.

                          For more information about specifying this value for different types of
                          origins, see `Origin Domain Name
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                          in the *Amazon CloudFront Developer Guide* .

                          Constraints for Amazon S3 origins:

                          * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                          specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                          * The bucket name must be between 3 and 63 characters long (inclusive).

                          * The bucket name must contain only lowercase characters, numbers,
                          periods, underscores, and dashes.

                          * The bucket name must not contain adjacent periods.

                           **Custom Origins** : The DNS domain name for the HTTP server from which
                           you want CloudFront to get objects for this origin, for example,
                           ``www.example.com`` .

                          Constraints for custom origins:

                          * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z,
                          0-9, dot (.), hyphen (-), or underscore (_) characters.

                          * The name cannot exceed 128 characters.

                        - **OriginPath** *(string) --*

                          An optional element that causes CloudFront to request your content from a
                          directory in your Amazon S3 bucket or your custom origin. When you include
                          the ``OriginPath`` element, specify the directory name, beginning with a
                          ``/`` . CloudFront appends the directory name to the value of
                          ``DomainName`` , for example, ``example.com/production`` . Do not include
                          a ``/`` at the end of the directory name.

                          For example, suppose you've specified the following values for your
                          distribution:

                          * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                          * ``OriginPath`` : ``/production``

                          * ``CNAME`` : ``example.com``

                          When a user enters ``example.com/index.html`` in a browser, CloudFront
                          sends a request to Amazon S3 for ``myawsbucket/production/index.html`` .

                          When a user enters ``example.com/acme/index.html`` in a browser,
                          CloudFront sends a request to Amazon S3 for
                          ``myawsbucket/production/acme/index.html`` .

                        - **CustomHeaders** *(dict) --*

                          A complex type that contains names and values for the custom headers that
                          you want.

                          - **Quantity** *(integer) --*

                            The number of custom headers, if any, for this distribution.

                          - **Items** *(list) --*

                             **Optional** : A list that contains one ``OriginCustomHeader`` element
                             for each custom header that you want CloudFront to forward to the
                             origin. If Quantity is ``0`` , omit ``Items`` .

                            - *(dict) --*

                              A complex type that contains ``HeaderName`` and ``HeaderValue``
                              elements, if any, for this distribution.

                              - **HeaderName** *(string) --*

                                The name of a header that you want CloudFront to forward to your
                                origin. For more information, see `Forwarding Custom Headers to Your
                                Origin (Web Distributions Only)
                                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                                in the *Amazon CloudFront Developer Guide* .

                              - **HeaderValue** *(string) --*

                                The value for the header that you specified in the ``HeaderName``
                                field.

                        - **S3OriginConfig** *(dict) --*

                          A complex type that contains information about the Amazon S3 origin. If
                          the origin is a custom origin, use the ``CustomOriginConfig`` element
                          instead.

                          - **OriginAccessIdentity** *(string) --*

                            The CloudFront origin access identity to associate with the origin. Use
                            an origin access identity to configure the origin so that viewers can
                            *only* access objects in an Amazon S3 bucket through CloudFront. The
                            format of the value is:

                            origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                            where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                            returned in the ``ID`` element when you created the origin access
                            identity.

                            If you want viewers to be able to access objects using either the
                            CloudFront URL or the Amazon S3 URL, specify an empty
                            ``OriginAccessIdentity`` element.

                            To delete the origin access identity from an existing distribution,
                            update the distribution configuration and include an empty
                            ``OriginAccessIdentity`` element.

                            To replace the origin access identity, update the distribution
                            configuration and specify the new origin access identity.

                            For more information about the origin access identity, see `Serving
                            Private Content through CloudFront
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                        - **CustomOriginConfig** *(dict) --*

                          A complex type that contains information about a custom origin. If the
                          origin is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                          - **HTTPPort** *(integer) --*

                            The HTTP port the custom origin listens on.

                          - **HTTPSPort** *(integer) --*

                            The HTTPS port the custom origin listens on.

                          - **OriginProtocolPolicy** *(string) --*

                            The origin protocol policy to apply to your origin.

                          - **OriginSslProtocols** *(dict) --*

                            The SSL/TLS protocols that you want CloudFront to use when communicating
                            with your origin over HTTPS.

                            - **Quantity** *(integer) --*

                              The number of SSL/TLS protocols that you want to allow CloudFront to
                              use when establishing an HTTPS connection with this origin.

                            - **Items** *(list) --*

                              A list that contains allowed SSL/TLS protocols for this distribution.

                              - *(string) --*

                          - **OriginReadTimeout** *(integer) --*

                            You can create a custom origin read timeout. All timeout units are in
                            seconds. The default origin read timeout is 30 seconds, but you can
                            configure custom timeout lengths using the CloudFront API. The minimum
                            timeout length is 4 seconds; the maximum is 60 seconds.

                            If you need to increase the maximum time limit, contact the `AWS Support
                            Center <https://console.aws.amazon.com/support/home#/>`__ .

                          - **OriginKeepaliveTimeout** *(integer) --*

                            You can create a custom keep-alive timeout. All timeout units are in
                            seconds. The default keep-alive timeout is 5 seconds, but you can
                            configure custom timeout lengths using the CloudFront API. The minimum
                            timeout length is 1 second; the maximum is 60 seconds.

                            If you need to increase the maximum time limit, contact the `AWS Support
                            Center <https://console.aws.amazon.com/support/home#/>`__ .

                  - **OriginGroups** *(dict) --*

                    A complex type that contains information about origin groups for this
                    distribution.

                    - **Quantity** *(integer) --*

                      The number of origin groups.

                    - **Items** *(list) --*

                      The items (origin groups) in a distribution.

                      - *(dict) --*

                        An origin group includes two origins (a primary origin and a second origin
                        to failover to) and a failover criteria that you specify. You create an
                        origin group to support origin failover in CloudFront. When you create or
                        update a distribution, you can specifiy the origin group instead of a single
                        origin, and CloudFront will failover from the primary origin to the second
                        origin under the failover conditions that you've chosen.

                        - **Id** *(string) --*

                          The origin group's ID.

                        - **FailoverCriteria** *(dict) --*

                          A complex type that contains information about the failover criteria for
                          an origin group.

                          - **StatusCodes** *(dict) --*

                            The status codes that, when returned from the primary origin, will
                            trigger CloudFront to failover to the second origin.

                            - **Quantity** *(integer) --*

                              The number of status codes.

                            - **Items** *(list) --*

                              The items (status codes) for an origin group.

                              - *(integer) --*

                        - **Members** *(dict) --*

                          A complex type that contains information about the origins in an origin
                          group.

                          - **Quantity** *(integer) --*

                            The number of origins in an origin group.

                          - **Items** *(list) --*

                            Items (origins) in an origin group.

                            - *(dict) --*

                              An origin in an origin group.

                              - **OriginId** *(string) --*

                                The ID for an origin in an origin group.

                  - **DefaultCacheBehavior** *(dict) --*

                    A complex type that describes the default cache behavior if you don't specify a
                    ``CacheBehavior`` element or if files don't match any of the values of
                    ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one
                    default cache behavior.

                    - **TargetOriginId** *(string) --*

                      The value of ``ID`` for the origin that you want CloudFront to route requests
                      to when a request matches the path pattern either for a cache behavior or for
                      the default cache behavior in your distribution.

                    - **ForwardedValues** *(dict) --*

                      A complex type that specifies how CloudFront handles query strings and
                      cookies.

                      - **QueryString** *(boolean) --*

                        Indicates whether you want CloudFront to forward query strings to the origin
                        that is associated with this cache behavior and cache based on the query
                        string parameters. CloudFront behavior depends on the value of
                        ``QueryString`` and on the values that you specify for
                        ``QueryStringCacheKeys`` , if any:

                        If you specify true for ``QueryString`` and you don't specify any values for
                        ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters
                        to the origin and caches based on all query string parameters. Depending on
                        how many query string parameters and values you have, this can adversely
                        affect performance because CloudFront must forward more requests to the
                        origin.

                        If you specify true for ``QueryString`` and you specify one or more values
                        for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                        parameters to the origin, but it only caches based on the query string
                        parameters that you specify.

                        If you specify false for ``QueryString`` , CloudFront doesn't forward any
                        query string parameters to the origin, and doesn't cache based on query
                        string parameters.

                        For more information, see `Configuring CloudFront to Cache Based on Query
                        String Parameters
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Cookies** *(dict) --*

                        A complex type that specifies whether you want CloudFront to forward cookies
                        to the origin and, if so, which ones. For more information about forwarding
                        cookies to the origin, see `How CloudFront Forwards, Caches, and Logs
                        Cookies
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **Forward** *(string) --*

                          Specifies which cookies to forward to the origin for this cache behavior:
                          all, none, or the list of cookies specified in the ``WhitelistedNames``
                          complex type.

                          Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                          requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                        - **WhitelistedNames** *(dict) --*

                          Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                          complex type that specifies how many different cookies you want CloudFront
                          to forward to the origin for this cache behavior and, if you want to
                          forward selected cookies, the names of those cookies.

                          If you specify ``all`` or none for the value of ``Forward`` , omit
                          ``WhitelistedNames`` . If you change the value of ``Forward`` from
                          ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                          element and its child elements, CloudFront deletes them automatically.

                          For the current limit on the number of cookie names that you can whitelist
                          for each cache behavior, see `CloudFront Limits
                          <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                          in the *AWS General Reference* .

                          - **Quantity** *(integer) --*

                            The number of different cookies that you want CloudFront to forward to
                            the origin for this cache behavior.

                          - **Items** *(list) --*

                            A complex type that contains one ``Name`` element for each cookie that
                            you want CloudFront to forward to the origin for this cache behavior.

                            - *(string) --*

                      - **Headers** *(dict) --*

                        A complex type that specifies the ``Headers`` , if any, that you want
                        CloudFront to forward to the origin for this cache behavior (whitelisted
                        headers). For the headers that you specify, CloudFront also caches separate
                        versions of a specified object that is based on the header values in viewer
                        requests.

                        For more information, see `Caching Content Based on Request Headers
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **Quantity** *(integer) --*

                          The number of different headers that you want CloudFront to base caching
                          on for this cache behavior. You can configure each cache behavior in a web
                          distribution to do one of the following:

                          * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                          and ``*`` for ``Name`` .

                          .. warning::

                             CloudFront doesn't cache the objects that are associated with this
                             cache behavior. Instead, CloudFront sends every request to the origin.

                          * **Forward a whitelist of headers you specify** : Specify the number of
                          headers that you want CloudFront to base caching on. Then specify the
                          header names in ``Name`` elements. CloudFront caches your objects based on
                          the values in the specified headers.

                          * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                          and omit ``Items`` . In this configuration, CloudFront doesn't cache based
                          on the values in the request headers.

                          Regardless of which option you choose, CloudFront forwards headers to your
                          origin based on whether the origin is an S3 bucket or a custom origin. See
                          the following documentation:

                          * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                          Updates
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                          * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                        - **Items** *(list) --*

                          A list that contains one ``Name`` element for each header that you want
                          CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                          ``0`` , omit ``Items`` .

                          - *(string) --*

                      - **QueryStringCacheKeys** *(dict) --*

                        A complex type that contains information about the query string parameters
                        that you want CloudFront to use for caching for this cache behavior.

                        - **Quantity** *(integer) --*

                          The number of ``whitelisted`` query string parameters for a cache
                          behavior.

                        - **Items** *(list) --*

                          A list that contains the query string parameters that you want CloudFront
                          to use as a basis for caching for a cache behavior. If ``Quantity`` is 0,
                          you can omit ``Items`` .

                          - *(string) --*

                    - **TrustedSigners** *(dict) --*

                      A complex type that specifies the AWS accounts, if any, that you want to allow
                      to create signed URLs for private content.

                      If you want to require signed URLs in requests for objects in the target
                      origin that match the ``PathPattern`` for this cache behavior, specify
                      ``true`` for ``Enabled`` , and specify the applicable values for ``Quantity``
                      and ``Items`` . For more information, see `Serving Private Content through
                      CloudFront
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      If you don't want to require signed URLs in requests for objects that match
                      ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity``
                      . Omit ``Items`` .

                      To add, change, or remove one or more trusted signers, change ``Enabled`` to
                      ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                      and specify all of the trusted signers that you want to include in the updated
                      distribution.

                      - **Enabled** *(boolean) --*

                        Specifies whether you want to require viewers to use signed URLs to access
                        the files specified by ``PathPattern`` and ``TargetOriginId`` .

                      - **Quantity** *(integer) --*

                        The number of trusted signers for this cache behavior.

                      - **Items** *(list) --*

                         **Optional** : A complex type that contains trusted signers for this cache
                         behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                        - *(string) --*

                    - **ViewerProtocolPolicy** *(string) --*

                      The protocol that viewers can use to access the files in the origin specified
                      by ``TargetOriginId`` when a request matches the path pattern in
                      ``PathPattern`` . You can specify the following options:

                      * ``allow-all`` : Viewers can use HTTP or HTTPS.

                      * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                      returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                      with the HTTPS URL. The viewer then resubmits the request using the new URL.

                      * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                      HTTP status code of 403 (Forbidden).

                      For more information about requiring the HTTPS protocol, see `Using an HTTPS
                      Connection to Access Your Objects
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      .. note::

                        The only way to guarantee that viewers retrieve an object that was fetched
                        from the origin using HTTPS is never to use any other protocol to fetch the
                        object. If you have recently changed from HTTP to HTTPS, we recommend that
                        you clear your objects' cache because cached objects are protocol agnostic.
                        That means that an edge location will return an object from the cache
                        regardless of whether the current request protocol matches the protocol used
                        previously. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                    - **MinTTL** *(integer) --*

                      The minimum amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. For more information, see `Managing How Long
                      Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                      all headers to your origin (under ``Headers`` , if you specify ``1`` for
                      ``Quantity`` and ``*`` for ``Name`` ).

                    - **AllowedMethods** *(dict) --*

                      A complex type that controls which HTTP methods CloudFront processes and
                      forwards to your Amazon S3 bucket or your custom origin. There are three
                      choices:

                      * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                      * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                      * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                      ``DELETE`` requests.

                      If you pick the third choice, you may need to restrict access to your Amazon
                      S3 bucket or to your custom origin so users can't perform operations that you
                      don't want them to. For example, you might not want users to have permissions
                      to delete objects from your origin.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods that you want CloudFront to forward to your
                        origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                        ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                        OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        process and forward to your origin.

                        - *(string) --*

                      - **CachedMethods** *(dict) --*

                        A complex type that controls whether CloudFront caches the response to
                        requests using the specified HTTP methods. There are two choices:

                        * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                        * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                        requests.

                        If you pick the second choice for your Amazon S3 Origin, you may need to
                        forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                        Origin headers for the responses to be cached correctly.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods for which you want CloudFront to cache
                          responses. Valid values are ``2`` (for caching responses to ``GET`` and
                          ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` , ``HEAD``
                          , and ``OPTIONS`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          cache responses to.

                          - *(string) --*

                    - **SmoothStreaming** *(boolean) --*

                      Indicates whether you want to distribute media files in the Microsoft Smooth
                      Streaming format using the origin that is associated with this cache behavior.
                      If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                      for ``SmoothStreaming`` , you can still distribute other content using this
                      cache behavior if the content matches the value of ``PathPattern`` .

                    - **DefaultTTL** *(integer) --*

                      The default amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. The value that you specify applies only when your
                      origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                      ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                      see `Managing How Long Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **MaxTTL** *(integer) --*

                      The maximum amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. The value that you specify applies only when your
                      origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                      s-maxage`` , and ``Expires`` to objects. For more information, see `Managing
                      How Long Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Compress** *(boolean) --*

                      Whether you want CloudFront to automatically compress certain files for this
                      cache behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                      information, see `Serving Compressed Files
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **LambdaFunctionAssociations** *(dict) --*

                      A complex type that contains zero or more Lambda function associations for a
                      cache behavior.

                      - **Quantity** *(integer) --*

                        The number of Lambda function associations for this cache behavior.

                      - **Items** *(list) --*

                         **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                         items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                         ``Items`` .

                        - *(dict) --*

                          A complex type that contains a Lambda function association.

                          - **LambdaFunctionARN** *(string) --*

                            The ARN of the Lambda function. You must specify the ARN of a function
                            version; you can't specify a Lambda alias or $LATEST.

                          - **EventType** *(string) --*

                            Specifies the event type that triggers a Lambda function invocation. You
                            can specify the following values:

                            * ``viewer-request`` : The function executes when CloudFront receives a
                            request from a viewer and before it checks to see whether the requested
                            object is in the edge cache.

                            * ``origin-request`` : The function executes only when CloudFront
                            forwards a request to your origin. When the requested object is in the
                            edge cache, the function doesn't execute.

                            * ``origin-response`` : The function executes after CloudFront receives
                            a response from the origin and before it caches the object in the
                            response. When the requested object is in the edge cache, the function
                            doesn't execute.

                            * ``viewer-response`` : The function executes before CloudFront returns
                            the requested object to the viewer. The function executes regardless of
                            whether the object was already in the edge cache. If the origin returns
                            an HTTP status code other than HTTP 200 (OK), the function doesn't
                            execute.

                          - **IncludeBody** *(boolean) --*

                            A flag that allows a Lambda function to have read access to the body
                            content. For more information, see `Accessing the Request Body by
                            Choosing the Include Body Option
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                            in the Amazon CloudFront Developer Guide.

                    - **FieldLevelEncryptionId** *(string) --*

                      The value of ``ID`` for the field-level encryption configuration that you want
                      CloudFront to use for encrypting specific fields of data for a cache behavior
                      or for the default cache behavior in your distribution.

                  - **CacheBehaviors** *(dict) --*

                    A complex type that contains zero or more ``CacheBehavior`` elements.

                    - **Quantity** *(integer) --*

                      The number of cache behaviors for this distribution.

                    - **Items** *(list) --*

                      Optional: A complex type that contains cache behaviors for this distribution.
                      If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(dict) --*

                        A complex type that describes how CloudFront processes requests.

                        You must create at least as many cache behaviors (including the default
                        cache behavior) as you have origins if you want CloudFront to distribute
                        objects from all of the origins. Each cache behavior specifies the one
                        origin from which you want CloudFront to get objects. If you have two
                        origins and only the default cache behavior, the default cache behavior will
                        cause CloudFront to get objects from one of the origins, but the other
                        origin is never used.

                        For the current limit on the number of cache behaviors that you can add to a
                        distribution, see `Amazon CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        If you don't want to specify any cache behaviors, include only an empty
                        ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior``
                        element, or CloudFront returns a ``MalformedXML`` error.

                        To delete all cache behaviors in an existing distribution, update the
                        distribution configuration and include only an empty ``CacheBehaviors``
                        element.

                        To add, change, or remove one or more cache behaviors, update the
                        distribution configuration and specify all of the cache behaviors that you
                        want to include in the updated distribution.

                        For more information about cache behaviors, see `Cache Behaviors
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **PathPattern** *(string) --*

                          The pattern (for example, ``images/*.jpg`` ) that specifies which requests
                          to apply the behavior to. When CloudFront receives a viewer request, the
                          requested path is compared with path patterns in the order in which cache
                          behaviors are listed in the distribution.

                          .. note::

                            You can optionally include a slash (``/`` ) at the beginning of the path
                            pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the
                            same with or without the leading ``/`` .

                          The path pattern for the default cache behavior is ``*`` and cannot be
                          changed. If the request for an object does not match the path pattern for
                          any cache behaviors, CloudFront applies the behavior in the default cache
                          behavior.

                          For more information, see `Path Pattern
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **TargetOriginId** *(string) --*

                          The value of ``ID`` for the origin that you want CloudFront to route
                          requests to when a request matches the path pattern either for a cache
                          behavior or for the default cache behavior in your distribution.

                        - **ForwardedValues** *(dict) --*

                          A complex type that specifies how CloudFront handles query strings and
                          cookies.

                          - **QueryString** *(boolean) --*

                            Indicates whether you want CloudFront to forward query strings to the
                            origin that is associated with this cache behavior and cache based on
                            the query string parameters. CloudFront behavior depends on the value of
                            ``QueryString`` and on the values that you specify for
                            ``QueryStringCacheKeys`` , if any:

                            If you specify true for ``QueryString`` and you don't specify any values
                            for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                            parameters to the origin and caches based on all query string
                            parameters. Depending on how many query string parameters and values you
                            have, this can adversely affect performance because CloudFront must
                            forward more requests to the origin.

                            If you specify true for ``QueryString`` and you specify one or more
                            values for ``QueryStringCacheKeys`` , CloudFront forwards all query
                            string parameters to the origin, but it only caches based on the query
                            string parameters that you specify.

                            If you specify false for ``QueryString`` , CloudFront doesn't forward
                            any query string parameters to the origin, and doesn't cache based on
                            query string parameters.

                            For more information, see `Configuring CloudFront to Cache Based on
                            Query String Parameters
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                          - **Cookies** *(dict) --*

                            A complex type that specifies whether you want CloudFront to forward
                            cookies to the origin and, if so, which ones. For more information about
                            forwarding cookies to the origin, see `How CloudFront Forwards, Caches,
                            and Logs Cookies
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                            - **Forward** *(string) --*

                              Specifies which cookies to forward to the origin for this cache
                              behavior: all, none, or the list of cookies specified in the
                              ``WhitelistedNames`` complex type.

                              Amazon S3 doesn't process cookies. When the cache behavior is
                              forwarding requests to an Amazon S3 origin, specify none for the
                              ``Forward`` element.

                            - **WhitelistedNames** *(dict) --*

                              Required if you specify ``whitelist`` for the value of ``Forward:`` .
                              A complex type that specifies how many different cookies you want
                              CloudFront to forward to the origin for this cache behavior and, if
                              you want to forward selected cookies, the names of those cookies.

                              If you specify ``all`` or none for the value of ``Forward`` , omit
                              ``WhitelistedNames`` . If you change the value of ``Forward`` from
                              ``whitelist`` to all or none and you don't delete the
                              ``WhitelistedNames`` element and its child elements, CloudFront
                              deletes them automatically.

                              For the current limit on the number of cookie names that you can
                              whitelist for each cache behavior, see `CloudFront Limits
                              <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                              in the *AWS General Reference* .

                              - **Quantity** *(integer) --*

                                The number of different cookies that you want CloudFront to forward
                                to the origin for this cache behavior.

                              - **Items** *(list) --*

                                A complex type that contains one ``Name`` element for each cookie
                                that you want CloudFront to forward to the origin for this cache
                                behavior.

                                - *(string) --*

                          - **Headers** *(dict) --*

                            A complex type that specifies the ``Headers`` , if any, that you want
                            CloudFront to forward to the origin for this cache behavior (whitelisted
                            headers). For the headers that you specify, CloudFront also caches
                            separate versions of a specified object that is based on the header
                            values in viewer requests.

                            For more information, see `Caching Content Based on Request Headers
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                            - **Quantity** *(integer) --*

                              The number of different headers that you want CloudFront to base
                              caching on for this cache behavior. You can configure each cache
                              behavior in a web distribution to do one of the following:

                              * **Forward all headers to your origin** : Specify ``1`` for
                              ``Quantity`` and ``*`` for ``Name`` .

                              .. warning::

                                 CloudFront doesn't cache the objects that are associated with this
                                 cache behavior. Instead, CloudFront sends every request to the
                                 origin.

                              * **Forward a whitelist of headers you specify** : Specify the number
                              of headers that you want CloudFront to base caching on. Then specify
                              the header names in ``Name`` elements. CloudFront caches your objects
                              based on the values in the specified headers.

                              * **Forward only the default headers** : Specify ``0`` for
                              ``Quantity`` and omit ``Items`` . In this configuration, CloudFront
                              doesn't cache based on the values in the request headers.

                              Regardless of which option you choose, CloudFront forwards headers to
                              your origin based on whether the origin is an S3 bucket or a custom
                              origin. See the following documentation:

                              * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                              Updates
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                              * **Custom origin** : See `HTTP Request Headers and CloudFront
                              Behavior
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                            - **Items** *(list) --*

                              A list that contains one ``Name`` element for each header that you
                              want CloudFront to use for caching in this cache behavior. If
                              ``Quantity`` is ``0`` , omit ``Items`` .

                              - *(string) --*

                          - **QueryStringCacheKeys** *(dict) --*

                            A complex type that contains information about the query string
                            parameters that you want CloudFront to use for caching for this cache
                            behavior.

                            - **Quantity** *(integer) --*

                              The number of ``whitelisted`` query string parameters for a cache
                              behavior.

                            - **Items** *(list) --*

                              A list that contains the query string parameters that you want
                              CloudFront to use as a basis for caching for a cache behavior. If
                              ``Quantity`` is 0, you can omit ``Items`` .

                              - *(string) --*

                        - **TrustedSigners** *(dict) --*

                          A complex type that specifies the AWS accounts, if any, that you want to
                          allow to create signed URLs for private content.

                          If you want to require signed URLs in requests for objects in the target
                          origin that match the ``PathPattern`` for this cache behavior, specify
                          ``true`` for ``Enabled`` , and specify the applicable values for
                          ``Quantity`` and ``Items`` . For more information, see `Serving Private
                          Content through CloudFront
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          If you don't want to require signed URLs in requests for objects that
                          match ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for
                          ``Quantity`` . Omit ``Items`` .

                          To add, change, or remove one or more trusted signers, change ``Enabled``
                          to ``true`` (if it's currently ``false`` ), change ``Quantity`` as
                          applicable, and specify all of the trusted signers that you want to
                          include in the updated distribution.

                          - **Enabled** *(boolean) --*

                            Specifies whether you want to require viewers to use signed URLs to
                            access the files specified by ``PathPattern`` and ``TargetOriginId`` .

                          - **Quantity** *(integer) --*

                            The number of trusted signers for this cache behavior.

                          - **Items** *(list) --*

                             **Optional** : A complex type that contains trusted signers for this
                             cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                            - *(string) --*

                        - **ViewerProtocolPolicy** *(string) --*

                          The protocol that viewers can use to access the files in the origin
                          specified by ``TargetOriginId`` when a request matches the path pattern in
                          ``PathPattern`` . You can specify the following options:

                          * ``allow-all`` : Viewers can use HTTP or HTTPS.

                          * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                          returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                          with the HTTPS URL. The viewer then resubmits the request using the new
                          URL.

                          * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns
                          an HTTP status code of 403 (Forbidden).

                          For more information about requiring the HTTPS protocol, see `Using an
                          HTTPS Connection to Access Your Objects
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          .. note::

                            The only way to guarantee that viewers retrieve an object that was
                            fetched from the origin using HTTPS is never to use any other protocol
                            to fetch the object. If you have recently changed from HTTP to HTTPS, we
                            recommend that you clear your objects' cache because cached objects are
                            protocol agnostic. That means that an edge location will return an
                            object from the cache regardless of whether the current request protocol
                            matches the protocol used previously. For more information, see
                            `Managing How Long Content Stays in an Edge Cache (Expiration)
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                        - **MinTTL** *(integer) --*

                          The minimum amount of time that you want objects to stay in CloudFront
                          caches before CloudFront forwards another request to your origin to
                          determine whether the object has been updated. For more information, see
                          `Managing How Long Content Stays in an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          You must specify ``0`` for ``MinTTL`` if you configure CloudFront to
                          forward all headers to your origin (under ``Headers`` , if you specify
                          ``1`` for ``Quantity`` and ``*`` for ``Name`` ).

                        - **AllowedMethods** *(dict) --*

                          A complex type that controls which HTTP methods CloudFront processes and
                          forwards to your Amazon S3 bucket or your custom origin. There are three
                          choices:

                          * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                          * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                          * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                          ``DELETE`` requests.

                          If you pick the third choice, you may need to restrict access to your
                          Amazon S3 bucket or to your custom origin so users can't perform
                          operations that you don't want them to. For example, you might not want
                          users to have permissions to delete objects from your origin.

                          - **Quantity** *(integer) --*

                            The number of HTTP methods that you want CloudFront to forward to your
                            origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                            ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                            OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                          - **Items** *(list) --*

                            A complex type that contains the HTTP methods that you want CloudFront
                            to process and forward to your origin.

                            - *(string) --*

                          - **CachedMethods** *(dict) --*

                            A complex type that controls whether CloudFront caches the response to
                            requests using the specified HTTP methods. There are two choices:

                            * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                            * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                            requests.

                            If you pick the second choice for your Amazon S3 Origin, you may need to
                            forward Access-Control-Request-Method, Access-Control-Request-Headers,
                            and Origin headers for the responses to be cached correctly.

                            - **Quantity** *(integer) --*

                              The number of HTTP methods for which you want CloudFront to cache
                              responses. Valid values are ``2`` (for caching responses to ``GET``
                              and ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` ,
                              ``HEAD`` , and ``OPTIONS`` requests).

                            - **Items** *(list) --*

                              A complex type that contains the HTTP methods that you want CloudFront
                              to cache responses to.

                              - *(string) --*

                        - **SmoothStreaming** *(boolean) --*

                          Indicates whether you want to distribute media files in the Microsoft
                          Smooth Streaming format using the origin that is associated with this
                          cache behavior. If so, specify ``true`` ; if not, specify ``false`` . If
                          you specify ``true`` for ``SmoothStreaming`` , you can still distribute
                          other content using this cache behavior if the content matches the value
                          of ``PathPattern`` .

                        - **DefaultTTL** *(integer) --*

                          The default amount of time that you want objects to stay in CloudFront
                          caches before CloudFront forwards another request to your origin to
                          determine whether the object has been updated. The value that you specify
                          applies only when your origin does not add HTTP headers such as
                          ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and ``Expires``
                          to objects. For more information, see `Managing How Long Content Stays in
                          an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **MaxTTL** *(integer) --*

                          The maximum amount of time that you want objects to stay in CloudFront
                          caches before CloudFront forwards another request to your origin to
                          determine whether the object has been updated. The value that you specify
                          applies only when your origin adds HTTP headers such as ``Cache-Control
                          max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to objects. For
                          more information, see `Managing How Long Content Stays in an Edge Cache
                          (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **Compress** *(boolean) --*

                          Whether you want CloudFront to automatically compress certain files for
                          this cache behavior. If so, specify true; if not, specify false. For more
                          information, see `Serving Compressed Files
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **LambdaFunctionAssociations** *(dict) --*

                          A complex type that contains zero or more Lambda function associations for
                          a cache behavior.

                          - **Quantity** *(integer) --*

                            The number of Lambda function associations for this cache behavior.

                          - **Items** *(list) --*

                             **Optional** : A complex type that contains
                             ``LambdaFunctionAssociation`` items for this cache behavior. If
                             ``Quantity`` is ``0`` , you can omit ``Items`` .

                            - *(dict) --*

                              A complex type that contains a Lambda function association.

                              - **LambdaFunctionARN** *(string) --*

                                The ARN of the Lambda function. You must specify the ARN of a
                                function version; you can't specify a Lambda alias or $LATEST.

                              - **EventType** *(string) --*

                                Specifies the event type that triggers a Lambda function invocation.
                                You can specify the following values:

                                * ``viewer-request`` : The function executes when CloudFront
                                receives a request from a viewer and before it checks to see whether
                                the requested object is in the edge cache.

                                * ``origin-request`` : The function executes only when CloudFront
                                forwards a request to your origin. When the requested object is in
                                the edge cache, the function doesn't execute.

                                * ``origin-response`` : The function executes after CloudFront
                                receives a response from the origin and before it caches the object
                                in the response. When the requested object is in the edge cache, the
                                function doesn't execute.

                                * ``viewer-response`` : The function executes before CloudFront
                                returns the requested object to the viewer. The function executes
                                regardless of whether the object was already in the edge cache. If
                                the origin returns an HTTP status code other than HTTP 200 (OK), the
                                function doesn't execute.

                              - **IncludeBody** *(boolean) --*

                                A flag that allows a Lambda function to have read access to the body
                                content. For more information, see `Accessing the Request Body by
                                Choosing the Include Body Option
                                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                                in the Amazon CloudFront Developer Guide.

                        - **FieldLevelEncryptionId** *(string) --*

                          The value of ``ID`` for the field-level encryption configuration that you
                          want CloudFront to use for encrypting specific fields of data for a cache
                          behavior or for the default cache behavior in your distribution.

                  - **CustomErrorResponses** *(dict) --*

                    A complex type that contains zero or more ``CustomErrorResponses`` elements.

                    - **Quantity** *(integer) --*

                      The number of HTTP status codes for which you want to specify a custom error
                      page and/or a caching duration. If ``Quantity`` is ``0`` , you can omit
                      ``Items`` .

                    - **Items** *(list) --*

                      A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                      status code for which you want to specify a custom error page and/or a caching
                      duration.

                      - *(dict) --*

                        A complex type that controls:

                        * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range
                        with custom error messages before returning the response to the viewer.

                        * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                        For more information about custom error pages, see `Customizing Error
                        Responses
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **ErrorCode** *(integer) --*

                          The HTTP status code for which you want to specify a custom error page
                          and/or a caching duration.

                        - **ResponsePagePath** *(string) --*

                          The path to the custom error page that you want CloudFront to return to a
                          viewer when your origin returns the HTTP status code specified by
                          ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you
                          want to store your objects and your custom error pages in different
                          locations, your distribution must include a cache behavior for which the
                          following is true:

                          * The value of ``PathPattern`` matches the path to your custom error
                          messages. For example, suppose you saved custom error pages for 4xx errors
                          in an Amazon S3 bucket in a directory named ``/4xx-errors`` . Your
                          distribution must include a cache behavior for which the path pattern
                          routes requests for your custom error pages to that location, for example,
                          ``/4xx-errors/*`` .

                          * The value of ``TargetOriginId`` specifies the value of the ``ID``
                          element for the origin that contains your custom error pages.

                          If you specify a value for ``ResponsePagePath`` , you must also specify a
                          value for ``ResponseCode`` . If you don't want to specify a value, include
                          an empty element, ``<ResponsePagePath>`` , in the XML document.

                          We recommend that you store custom error pages in an Amazon S3 bucket. If
                          you store custom error pages on an HTTP server and the server starts to
                          return 5xx errors, CloudFront can't get the files that you want to return
                          to viewers because the origin server is unavailable.

                        - **ResponseCode** *(string) --*

                          The HTTP status code that you want CloudFront to return to the viewer
                          along with the custom error page. There are a variety of reasons that you
                          might want CloudFront to return a status code different from the status
                          code that your origin returned to CloudFront, for example:

                          * Some Internet devices (some firewalls and corporate proxies, for
                          example) intercept HTTP 4xx and 5xx and prevent the response from being
                          returned to the viewer. If you substitute ``200`` , the response typically
                          won't be intercepted.

                          * If you don't care about distinguishing among different client errors or
                          server errors, you can specify ``400`` or ``500`` as the ``ResponseCode``
                          for all 4xx or 5xx errors.

                          * You might want to return a ``200`` status code (OK) and static website
                          so your customers don't know that your website is down.

                          If you specify a value for ``ResponseCode`` , you must also specify a
                          value for ``ResponsePagePath`` . If you don't want to specify a value,
                          include an empty element, ``<ResponseCode>`` , in the XML document.

                        - **ErrorCachingMinTTL** *(integer) --*

                          The minimum amount of time, in seconds, that you want CloudFront to cache
                          the HTTP status code specified in ``ErrorCode`` . When this time period
                          has elapsed, CloudFront queries your origin to see whether the problem
                          that caused the error has been resolved and the requested object is now
                          available.

                          If you don't want to specify a value, include an empty element,
                          ``<ErrorCachingMinTTL>`` , in the XML document.

                          For more information, see `Customizing Error Responses
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                  - **Comment** *(string) --*

                    The comment originally specified when this distribution was created.

                  - **PriceClass** *(string) --*

                    A complex type that contains information about price class for this streaming
                    distribution.

                  - **Enabled** *(boolean) --*

                    Whether the distribution is enabled to accept user requests for content.

                  - **ViewerCertificate** *(dict) --*

                    A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                    request your objects, whether you're using an alternate domain name with HTTPS,
                    and if so, if you're using AWS Certificate Manager (ACM) or a third-party
                    certificate authority.

                    - **CloudFrontDefaultCertificate** *(boolean) --*

                      If you're using the CloudFront domain name for your distribution, such as
                      ``d111111abcdef8.cloudfront.net`` , specify the following value:

                      * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                    - **IAMCertificateId** *(string) --*

                      If you want viewers to use HTTPS to request your objects and you're using an
                      alternate domain name, you must choose the type of certificate that you want
                      to use. Specify the following value if you purchased your certificate from a
                      third-party certificate authority:

                      * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                      certificate ID* `` is the ID that IAM returned when you added the certificate
                      to the IAM certificate store.

                      If you specify ``IAMCertificateId`` , you must also specify a value for
                      ``SSLSupportMethod`` .

                    - **ACMCertificateArn** *(string) --*

                      If you want viewers to use HTTPS to request your objects and you're using an
                      alternate domain name, you must choose the type of certificate that you want
                      to use. Specify the following value if ACM provided your certificate:

                      * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                      where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                      certificate that you want to use for this distribution.

                      If you specify ``ACMCertificateArn`` , you must also specify a value for
                      ``SSLSupportMethod`` .

                    - **SSLSupportMethod** *(string) --*

                      If you specify a value for `ACMCertificateArn
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                      or for `IAMCertificateId
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                      , you must also specify how you want CloudFront to serve HTTPS requests: using
                      a method that works for browsers and clients released after 2010 or one that
                      works for all clients.

                      * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                      support Server Name Indication (SNI). All modern browsers support SNI, but
                      there are a few that don't. For a current list of the browsers that support
                      SNI, see the `Wikipedia entry Server Name Indication
                      <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about
                      options to explore if you have users with browsers that don't include SNI
                      support, see `Choosing How CloudFront Serves HTTPS Requests
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                      respond to HTTPS requests from any viewer. However, there are additional
                      monthly charges. For details, including specific pricing information, see
                      `Custom SSL options for Amazon CloudFront
                      <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                      site.

                      Don't specify a value for ``SSLSupportMethod`` if you specified
                      ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                      For more information, see `Choosing How CloudFront Serves HTTPS Requests
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **MinimumProtocolVersion** *(string) --*

                      Specify the security policy that you want CloudFront to use for HTTPS
                      connections. A security policy determines two settings:

                      * The minimum SSL/TLS protocol that CloudFront uses to communicate with
                      viewers

                      * The cipher that CloudFront uses to encrypt the content that it returns to
                      viewers

                      .. note::

                        On the CloudFront console, this setting is called **Security policy** .

                      We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                      browsers or devices that do not support TLSv1.1 or later.

                      When both of the following are true, you must specify ``TLSv1`` or later for
                      the security policy:

                      * You're using a custom certificate: you specified a value for
                      ``ACMCertificateArn`` or for ``IAMCertificateId``

                      * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                      If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                      automatically sets the security policy to ``TLSv1`` regardless of the value
                      that you specify for ``MinimumProtocolVersion`` .

                      For information about the relationship between the security policy that you
                      choose and the protocols and ciphers that CloudFront uses to communicate with
                      viewers, see `Supported SSL/TLS Protocols and Ciphers for Communication
                      Between Viewers and CloudFront
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Certificate** *(string) --*

                      This field is no longer used. Use one of the following fields instead:

                      * `ACMCertificateArn
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                      * `IAMCertificateId
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                      * `CloudFrontDefaultCertificate
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                    - **CertificateSource** *(string) --*

                      This field is no longer used. Use one of the following fields instead:

                      * `ACMCertificateArn
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                      * `IAMCertificateId
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                      * `CloudFrontDefaultCertificate
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                  - **Restrictions** *(dict) --*

                    A complex type that identifies ways in which you want to restrict distribution
                    of your content.

                    - **GeoRestriction** *(dict) --*

                      A complex type that controls the countries in which your content is
                      distributed. CloudFront determines the location of your users using
                      ``MaxMind`` GeoIP databases.

                      - **RestrictionType** *(string) --*

                        The method that you want to use to restrict distribution of your content by
                        country:

                        * ``none`` : No geo restriction is enabled, meaning access to content is not
                        restricted by client geo location.

                        * ``blacklist`` : The ``Location`` elements specify the countries in which
                        you don't want CloudFront to distribute your content.

                        * ``whitelist`` : The ``Location`` elements specify the countries in which
                        you want CloudFront to distribute your content.

                      - **Quantity** *(integer) --*

                        When geo restriction is ``enabled`` , this is the number of countries in
                        your ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled,
                        ``Quantity`` is ``0`` , and you can omit ``Items`` .

                      - **Items** *(list) --*

                        A complex type that contains a ``Location`` element for each country in
                        which you want CloudFront either to distribute your content (``whitelist`` )
                        or not distribute your content (``blacklist`` ).

                        The ``Location`` element is a two-letter, uppercase country code for a
                        country that you want to include in your ``blacklist`` or ``whitelist`` .
                        Include one ``Location`` element for each country.

                        CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the
                        current list of countries and the corresponding codes, see ``ISO
                        3166-1-alpha-2`` code on the *International Organization for
                        Standardization* website. You can also refer to the country list on the
                        CloudFront console, which includes both country names and codes.

                        - *(string) --*

                  - **WebACLId** *(string) --*

                    The Web ACL Id (if any) associated with the distribution.

                  - **HttpVersion** *(string) --*

                    Specify the maximum HTTP version that you want viewers to use to communicate
                    with CloudFront. The default value for new web distributions is ``http2`` .
                    Viewers that don't support ``HTTP/2`` will automatically use an earlier version.

                  - **IsIPV6Enabled** *(boolean) --*

                    Whether CloudFront responds to IPv6 DNS requests with an IPv6 address for your
                    distribution.

                  - **AliasICPRecordals** *(list) --*

                    AWS services in China customers must file for an Internet Content Provider (ICP)
                    recordal if they want to serve content publicly on an alternate domain name,
                    also known as a CNAME, that they've added to CloudFront. AliasICPRecordal
                    provides the ICP recordal status for CNAMEs associated with distributions.

                    For more information about ICP recordals, see `Signup, Accounts, and Credentials
                    <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                    in *Getting Started with AWS services in China* .

                    - *(dict) --*

                      AWS services in China customers must file for an Internet Content Provider
                      (ICP) recordal if they want to serve content publicly on an alternate domain
                      name, also known as a CNAME, that they've added to CloudFront.
                      AliasICPRecordal provides the ICP recordal status for CNAMEs associated with
                      distributions. The status is returned in the CloudFront response; you can't
                      configure it yourself.

                      For more information about ICP recordals, see `Signup, Accounts, and
                      Credentials
                      <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                      in *Getting Started with AWS services in China* .

                      - **CNAME** *(string) --*

                        A domain name associated with a distribution.

                      - **ICPRecordalStatus** *(string) --*

                        The Internet Content Provider (ICP) recordal status for a CNAME. The
                        ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions
                        outside of China.

                        The status values returned are the following:

                        * **APPROVED** indicates that the associated CNAME has a valid ICP recordal
                        number. Multiple CNAMEs can be associated with a distribution, and CNAMEs
                        can correspond to different ICP recordals. To be marked as APPROVED, that
                        is, valid to use with China region, a CNAME must have one ICP recordal
                        number associated with it.

                        * **SUSPENDED** indicates that the associated CNAME does not have a valid
                        ICP recordal number.

                        * **PENDING** indicates that at least one CNAME associated with the
                        distribution does not have a valid ICP recordal number.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_distributions_by_web_acl_id(
        self, WebACLId: str, Marker: str = None, MaxItems: str = None
    ) -> ClientListDistributionsByWebAclIdResponseTypeDef:
        """
        List the distributions that are associated with a specified AWS WAF web ACL.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListDistributionsByWebACLId>`_

        **Request Syntax**
        ::

          response = client.list_distributions_by_web_acl_id(
              Marker='string',
              MaxItems='string',
              WebACLId='string'
          )
        :type Marker: string
        :param Marker:

          Use ``Marker`` and ``MaxItems`` to control pagination of results. If you have more than
          ``MaxItems`` distributions that satisfy the request, the response includes a
          ``NextMarker`` element. To get the next page of results, submit another request. For the
          value of ``Marker`` , specify the value of ``NextMarker`` from the last response. (For the
          first request, omit ``Marker`` .)

        :type MaxItems: string
        :param MaxItems:

          The maximum number of distributions that you want CloudFront to return in the response
          body. The maximum and default values are both 100.

        :type WebACLId: string
        :param WebACLId: **[REQUIRED]**

          The ID of the AWS WAF web ACL that you want to list the associated distributions. If you
          specify "null" for the ID, the request returns a list of the distributions that aren't
          associated with a web ACL.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'DistributionList': {
                    'Marker': 'string',
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'IsTruncated': True|False,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'ARN': 'string',
                            'Status': 'string',
                            'LastModifiedTime': datetime(2015, 1, 1),
                            'DomainName': 'string',
                            'Aliases': {
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'Origins': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Id': 'string',
                                        'DomainName': 'string',
                                        'OriginPath': 'string',
                                        'CustomHeaders': {
                                            'Quantity': 123,
                                            'Items': [
                                                {
                                                    'HeaderName': 'string',
                                                    'HeaderValue': 'string'
                                                },
                                            ]
                                        },
                                        'S3OriginConfig': {
                                            'OriginAccessIdentity': 'string'
                                        },
                                        'CustomOriginConfig': {
                                            'HTTPPort': 123,
                                            'HTTPSPort': 123,
                                            'OriginProtocolPolicy':
                                            'http-only'
                                            |'match-viewer'
                                            |'https-only',
                                            'OriginSslProtocols': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                                ]
                                            },
                                            'OriginReadTimeout': 123,
                                            'OriginKeepaliveTimeout': 123
                                        }
                                    },
                                ]
                            },
                            'OriginGroups': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Id': 'string',
                                        'FailoverCriteria': {
                                            'StatusCodes': {
                                                'Quantity': 123,
                                                'Items': [
                                                    123,
                                                ]
                                            }
                                        },
                                        'Members': {
                                            'Quantity': 123,
                                            'Items': [
                                                {
                                                    'OriginId': 'string'
                                                },
                                            ]
                                        }
                                    },
                                ]
                            },
                            'DefaultCacheBehavior': {
                                'TargetOriginId': 'string',
                                'ForwardedValues': {
                                    'QueryString': True|False,
                                    'Cookies': {
                                        'Forward': 'none'|'whitelist'|'all',
                                        'WhitelistedNames': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'Headers': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'QueryStringCacheKeys': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'TrustedSigners': {
                                    'Enabled': True|False,
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'ViewerProtocolPolicy':
                                'allow-all'|'https-only'
                                |'redirect-to-https',
                                'MinTTL': 123,
                                'AllowedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ],
                                    'CachedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ]
                                    }
                                },
                                'SmoothStreaming': True|False,
                                'DefaultTTL': 123,
                                'MaxTTL': 123,
                                'Compress': True|False,
                                'LambdaFunctionAssociations': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'LambdaFunctionARN': 'string',
                                            'EventType':
                                            'viewer-request'
                                            |'viewer-response'
                                            |'origin-request'
                                            |'origin-response',
                                            'IncludeBody': True|False
                                        },
                                    ]
                                },
                                'FieldLevelEncryptionId': 'string'
                            },
                            'CacheBehaviors': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'PathPattern': 'string',
                                        'TargetOriginId': 'string',
                                        'ForwardedValues': {
                                            'QueryString': True|False,
                                            'Cookies': {
                                                'Forward': 'none'|'whitelist'|'all',
                                                'WhitelistedNames': {
                                                    'Quantity': 123,
                                                    'Items': [
                                                        'string',
                                                    ]
                                                }
                                            },
                                            'Headers': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            },
                                            'QueryStringCacheKeys': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            }
                                        },
                                        'TrustedSigners': {
                                            'Enabled': True|False,
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        },
                                        'ViewerProtocolPolicy':
                                        'allow-all'|'https-only'
                                        |'redirect-to-https',
                                        'MinTTL': 123,
                                        'AllowedMethods': {
                                            'Quantity': 123,
                                            'Items': [
                                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                |'DELETE',
                                            ],
                                            'CachedMethods': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                    |'DELETE',
                                                ]
                                            }
                                        },
                                        'SmoothStreaming': True|False,
                                        'DefaultTTL': 123,
                                        'MaxTTL': 123,
                                        'Compress': True|False,
                                        'LambdaFunctionAssociations': {
                                            'Quantity': 123,
                                            'Items': [
                                                {
                                                    'LambdaFunctionARN': 'string',
                                                    'EventType':
                                                    'viewer-request'|'viewer-response'|'origin-request'
                                                    |'origin-response',
                                                    'IncludeBody': True|False
                                                },
                                            ]
                                        },
                                        'FieldLevelEncryptionId': 'string'
                                    },
                                ]
                            },
                            'CustomErrorResponses': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'ErrorCode': 123,
                                        'ResponsePagePath': 'string',
                                        'ResponseCode': 'string',
                                        'ErrorCachingMinTTL': 123
                                    },
                                ]
                            },
                            'Comment': 'string',
                            'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                            'Enabled': True|False,
                            'ViewerCertificate': {
                                'CloudFrontDefaultCertificate': True|False,
                                'IAMCertificateId': 'string',
                                'ACMCertificateArn': 'string',
                                'SSLSupportMethod': 'sni-only'|'vip',
                                'MinimumProtocolVersion':
                                'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                                |'TLSv1.2_2018',
                                'Certificate': 'string',
                                'CertificateSource': 'cloudfront'|'iam'|'acm'
                            },
                            'Restrictions': {
                                'GeoRestriction': {
                                    'RestrictionType': 'blacklist'|'whitelist'|'none',
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'WebACLId': 'string',
                            'HttpVersion': 'http1.1'|'http2',
                            'IsIPV6Enabled': True|False,
                            'AliasICPRecordals': [
                                {
                                    'CNAME': 'string',
                                    'ICPRecordalStatus': 'APPROVED'|'SUSPENDED'|'PENDING'
                                },
                            ]
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            The response to a request to list the distributions that are associated with a specified
            AWS WAF web ACL.

            - **DistributionList** *(dict) --*

              The ``DistributionList`` type.

              - **Marker** *(string) --*

                The value you provided for the ``Marker`` request parameter.

              - **NextMarker** *(string) --*

                If ``IsTruncated`` is ``true`` , this element is present and contains the value you
                can use for the ``Marker`` request parameter to continue listing your distributions
                where they left off.

              - **MaxItems** *(integer) --*

                The value you provided for the ``MaxItems`` request parameter.

              - **IsTruncated** *(boolean) --*

                A flag that indicates whether more distributions remain to be listed. If your
                results were truncated, you can make a follow-up pagination request using the
                ``Marker`` request parameter to retrieve more distributions in the list.

              - **Quantity** *(integer) --*

                The number of distributions that were created by the current AWS account.

              - **Items** *(list) --*

                A complex type that contains one ``DistributionSummary`` element for each
                distribution that was created by the current AWS account.

                - *(dict) --*

                  A summary of the information about a CloudFront distribution.

                  - **Id** *(string) --*

                    The identifier for the distribution. For example: ``EDFDVBD632BHDS5`` .

                  - **ARN** *(string) --*

                    The ARN (Amazon Resource Name) for the distribution. For example:
                    ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                    ``123456789012`` is your AWS account ID.

                  - **Status** *(string) --*

                    The current status of the distribution. When the status is ``Deployed`` , the
                    distribution's information is propagated to all CloudFront edge locations.

                  - **LastModifiedTime** *(datetime) --*

                    The date and time the distribution was last modified.

                  - **DomainName** *(string) --*

                    The domain name that corresponds to the distribution, for example,
                    ``d111111abcdef8.cloudfront.net`` .

                  - **Aliases** *(dict) --*

                    A complex type that contains information about CNAMEs (alternate domain names),
                    if any, for this distribution.

                    - **Quantity** *(integer) --*

                      The number of CNAME aliases, if any, that you want to associate with this
                      distribution.

                    - **Items** *(list) --*

                      A complex type that contains the CNAME aliases, if any, that you want to
                      associate with this distribution.

                      - *(string) --*

                  - **Origins** *(dict) --*

                    A complex type that contains information about origins for this distribution.

                    - **Quantity** *(integer) --*

                      The number of origins or origin groups for this distribution.

                    - **Items** *(list) --*

                      A complex type that contains origins or origin groups for this distribution.

                      - *(dict) --*

                        A complex type that describes the Amazon S3 bucket, HTTP server (for
                        example, a web server), Amazon MediaStore, or other server from which
                        CloudFront gets your files. This can also be an origin group, if you've
                        created an origin group. You must specify at least one origin or origin
                        group.

                        For the current limit on the number of origins or origin groups that you can
                        specify for a distribution, see `Amazon CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Id** *(string) --*

                          A unique identifier for the origin or origin group. The value of ``Id``
                          must be unique within the distribution.

                          When you specify the value of ``TargetOriginId`` for the default cache
                          behavior or for another cache behavior, you indicate the origin to which
                          you want the cache behavior to route requests by specifying the value of
                          the ``Id`` element for that origin. When a request matches the path
                          pattern for that cache behavior, CloudFront routes the request to the
                          specified origin. For more information, see `Cache Behavior Settings
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **DomainName** *(string) --*

                           **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which
                           you want CloudFront to get objects for this origin, for example,
                           ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be
                           configured as a website endpoint, enter the Amazon S3 static website
                           hosting endpoint for the bucket.

                          For more information about specifying this value for different types of
                          origins, see `Origin Domain Name
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                          in the *Amazon CloudFront Developer Guide* .

                          Constraints for Amazon S3 origins:

                          * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                          specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                          * The bucket name must be between 3 and 63 characters long (inclusive).

                          * The bucket name must contain only lowercase characters, numbers,
                          periods, underscores, and dashes.

                          * The bucket name must not contain adjacent periods.

                           **Custom Origins** : The DNS domain name for the HTTP server from which
                           you want CloudFront to get objects for this origin, for example,
                           ``www.example.com`` .

                          Constraints for custom origins:

                          * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z,
                          0-9, dot (.), hyphen (-), or underscore (_) characters.

                          * The name cannot exceed 128 characters.

                        - **OriginPath** *(string) --*

                          An optional element that causes CloudFront to request your content from a
                          directory in your Amazon S3 bucket or your custom origin. When you include
                          the ``OriginPath`` element, specify the directory name, beginning with a
                          ``/`` . CloudFront appends the directory name to the value of
                          ``DomainName`` , for example, ``example.com/production`` . Do not include
                          a ``/`` at the end of the directory name.

                          For example, suppose you've specified the following values for your
                          distribution:

                          * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                          * ``OriginPath`` : ``/production``

                          * ``CNAME`` : ``example.com``

                          When a user enters ``example.com/index.html`` in a browser, CloudFront
                          sends a request to Amazon S3 for ``myawsbucket/production/index.html`` .

                          When a user enters ``example.com/acme/index.html`` in a browser,
                          CloudFront sends a request to Amazon S3 for
                          ``myawsbucket/production/acme/index.html`` .

                        - **CustomHeaders** *(dict) --*

                          A complex type that contains names and values for the custom headers that
                          you want.

                          - **Quantity** *(integer) --*

                            The number of custom headers, if any, for this distribution.

                          - **Items** *(list) --*

                             **Optional** : A list that contains one ``OriginCustomHeader`` element
                             for each custom header that you want CloudFront to forward to the
                             origin. If Quantity is ``0`` , omit ``Items`` .

                            - *(dict) --*

                              A complex type that contains ``HeaderName`` and ``HeaderValue``
                              elements, if any, for this distribution.

                              - **HeaderName** *(string) --*

                                The name of a header that you want CloudFront to forward to your
                                origin. For more information, see `Forwarding Custom Headers to Your
                                Origin (Web Distributions Only)
                                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                                in the *Amazon CloudFront Developer Guide* .

                              - **HeaderValue** *(string) --*

                                The value for the header that you specified in the ``HeaderName``
                                field.

                        - **S3OriginConfig** *(dict) --*

                          A complex type that contains information about the Amazon S3 origin. If
                          the origin is a custom origin, use the ``CustomOriginConfig`` element
                          instead.

                          - **OriginAccessIdentity** *(string) --*

                            The CloudFront origin access identity to associate with the origin. Use
                            an origin access identity to configure the origin so that viewers can
                            *only* access objects in an Amazon S3 bucket through CloudFront. The
                            format of the value is:

                            origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                            where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                            returned in the ``ID`` element when you created the origin access
                            identity.

                            If you want viewers to be able to access objects using either the
                            CloudFront URL or the Amazon S3 URL, specify an empty
                            ``OriginAccessIdentity`` element.

                            To delete the origin access identity from an existing distribution,
                            update the distribution configuration and include an empty
                            ``OriginAccessIdentity`` element.

                            To replace the origin access identity, update the distribution
                            configuration and specify the new origin access identity.

                            For more information about the origin access identity, see `Serving
                            Private Content through CloudFront
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                        - **CustomOriginConfig** *(dict) --*

                          A complex type that contains information about a custom origin. If the
                          origin is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                          - **HTTPPort** *(integer) --*

                            The HTTP port the custom origin listens on.

                          - **HTTPSPort** *(integer) --*

                            The HTTPS port the custom origin listens on.

                          - **OriginProtocolPolicy** *(string) --*

                            The origin protocol policy to apply to your origin.

                          - **OriginSslProtocols** *(dict) --*

                            The SSL/TLS protocols that you want CloudFront to use when communicating
                            with your origin over HTTPS.

                            - **Quantity** *(integer) --*

                              The number of SSL/TLS protocols that you want to allow CloudFront to
                              use when establishing an HTTPS connection with this origin.

                            - **Items** *(list) --*

                              A list that contains allowed SSL/TLS protocols for this distribution.

                              - *(string) --*

                          - **OriginReadTimeout** *(integer) --*

                            You can create a custom origin read timeout. All timeout units are in
                            seconds. The default origin read timeout is 30 seconds, but you can
                            configure custom timeout lengths using the CloudFront API. The minimum
                            timeout length is 4 seconds; the maximum is 60 seconds.

                            If you need to increase the maximum time limit, contact the `AWS Support
                            Center <https://console.aws.amazon.com/support/home#/>`__ .

                          - **OriginKeepaliveTimeout** *(integer) --*

                            You can create a custom keep-alive timeout. All timeout units are in
                            seconds. The default keep-alive timeout is 5 seconds, but you can
                            configure custom timeout lengths using the CloudFront API. The minimum
                            timeout length is 1 second; the maximum is 60 seconds.

                            If you need to increase the maximum time limit, contact the `AWS Support
                            Center <https://console.aws.amazon.com/support/home#/>`__ .

                  - **OriginGroups** *(dict) --*

                    A complex type that contains information about origin groups for this
                    distribution.

                    - **Quantity** *(integer) --*

                      The number of origin groups.

                    - **Items** *(list) --*

                      The items (origin groups) in a distribution.

                      - *(dict) --*

                        An origin group includes two origins (a primary origin and a second origin
                        to failover to) and a failover criteria that you specify. You create an
                        origin group to support origin failover in CloudFront. When you create or
                        update a distribution, you can specifiy the origin group instead of a single
                        origin, and CloudFront will failover from the primary origin to the second
                        origin under the failover conditions that you've chosen.

                        - **Id** *(string) --*

                          The origin group's ID.

                        - **FailoverCriteria** *(dict) --*

                          A complex type that contains information about the failover criteria for
                          an origin group.

                          - **StatusCodes** *(dict) --*

                            The status codes that, when returned from the primary origin, will
                            trigger CloudFront to failover to the second origin.

                            - **Quantity** *(integer) --*

                              The number of status codes.

                            - **Items** *(list) --*

                              The items (status codes) for an origin group.

                              - *(integer) --*

                        - **Members** *(dict) --*

                          A complex type that contains information about the origins in an origin
                          group.

                          - **Quantity** *(integer) --*

                            The number of origins in an origin group.

                          - **Items** *(list) --*

                            Items (origins) in an origin group.

                            - *(dict) --*

                              An origin in an origin group.

                              - **OriginId** *(string) --*

                                The ID for an origin in an origin group.

                  - **DefaultCacheBehavior** *(dict) --*

                    A complex type that describes the default cache behavior if you don't specify a
                    ``CacheBehavior`` element or if files don't match any of the values of
                    ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one
                    default cache behavior.

                    - **TargetOriginId** *(string) --*

                      The value of ``ID`` for the origin that you want CloudFront to route requests
                      to when a request matches the path pattern either for a cache behavior or for
                      the default cache behavior in your distribution.

                    - **ForwardedValues** *(dict) --*

                      A complex type that specifies how CloudFront handles query strings and
                      cookies.

                      - **QueryString** *(boolean) --*

                        Indicates whether you want CloudFront to forward query strings to the origin
                        that is associated with this cache behavior and cache based on the query
                        string parameters. CloudFront behavior depends on the value of
                        ``QueryString`` and on the values that you specify for
                        ``QueryStringCacheKeys`` , if any:

                        If you specify true for ``QueryString`` and you don't specify any values for
                        ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters
                        to the origin and caches based on all query string parameters. Depending on
                        how many query string parameters and values you have, this can adversely
                        affect performance because CloudFront must forward more requests to the
                        origin.

                        If you specify true for ``QueryString`` and you specify one or more values
                        for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                        parameters to the origin, but it only caches based on the query string
                        parameters that you specify.

                        If you specify false for ``QueryString`` , CloudFront doesn't forward any
                        query string parameters to the origin, and doesn't cache based on query
                        string parameters.

                        For more information, see `Configuring CloudFront to Cache Based on Query
                        String Parameters
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Cookies** *(dict) --*

                        A complex type that specifies whether you want CloudFront to forward cookies
                        to the origin and, if so, which ones. For more information about forwarding
                        cookies to the origin, see `How CloudFront Forwards, Caches, and Logs
                        Cookies
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **Forward** *(string) --*

                          Specifies which cookies to forward to the origin for this cache behavior:
                          all, none, or the list of cookies specified in the ``WhitelistedNames``
                          complex type.

                          Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                          requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                        - **WhitelistedNames** *(dict) --*

                          Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                          complex type that specifies how many different cookies you want CloudFront
                          to forward to the origin for this cache behavior and, if you want to
                          forward selected cookies, the names of those cookies.

                          If you specify ``all`` or none for the value of ``Forward`` , omit
                          ``WhitelistedNames`` . If you change the value of ``Forward`` from
                          ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                          element and its child elements, CloudFront deletes them automatically.

                          For the current limit on the number of cookie names that you can whitelist
                          for each cache behavior, see `CloudFront Limits
                          <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                          in the *AWS General Reference* .

                          - **Quantity** *(integer) --*

                            The number of different cookies that you want CloudFront to forward to
                            the origin for this cache behavior.

                          - **Items** *(list) --*

                            A complex type that contains one ``Name`` element for each cookie that
                            you want CloudFront to forward to the origin for this cache behavior.

                            - *(string) --*

                      - **Headers** *(dict) --*

                        A complex type that specifies the ``Headers`` , if any, that you want
                        CloudFront to forward to the origin for this cache behavior (whitelisted
                        headers). For the headers that you specify, CloudFront also caches separate
                        versions of a specified object that is based on the header values in viewer
                        requests.

                        For more information, see `Caching Content Based on Request Headers
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **Quantity** *(integer) --*

                          The number of different headers that you want CloudFront to base caching
                          on for this cache behavior. You can configure each cache behavior in a web
                          distribution to do one of the following:

                          * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                          and ``*`` for ``Name`` .

                          .. warning::

                             CloudFront doesn't cache the objects that are associated with this
                             cache behavior. Instead, CloudFront sends every request to the origin.

                          * **Forward a whitelist of headers you specify** : Specify the number of
                          headers that you want CloudFront to base caching on. Then specify the
                          header names in ``Name`` elements. CloudFront caches your objects based on
                          the values in the specified headers.

                          * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                          and omit ``Items`` . In this configuration, CloudFront doesn't cache based
                          on the values in the request headers.

                          Regardless of which option you choose, CloudFront forwards headers to your
                          origin based on whether the origin is an S3 bucket or a custom origin. See
                          the following documentation:

                          * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                          Updates
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                          * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                        - **Items** *(list) --*

                          A list that contains one ``Name`` element for each header that you want
                          CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                          ``0`` , omit ``Items`` .

                          - *(string) --*

                      - **QueryStringCacheKeys** *(dict) --*

                        A complex type that contains information about the query string parameters
                        that you want CloudFront to use for caching for this cache behavior.

                        - **Quantity** *(integer) --*

                          The number of ``whitelisted`` query string parameters for a cache
                          behavior.

                        - **Items** *(list) --*

                          A list that contains the query string parameters that you want CloudFront
                          to use as a basis for caching for a cache behavior. If ``Quantity`` is 0,
                          you can omit ``Items`` .

                          - *(string) --*

                    - **TrustedSigners** *(dict) --*

                      A complex type that specifies the AWS accounts, if any, that you want to allow
                      to create signed URLs for private content.

                      If you want to require signed URLs in requests for objects in the target
                      origin that match the ``PathPattern`` for this cache behavior, specify
                      ``true`` for ``Enabled`` , and specify the applicable values for ``Quantity``
                      and ``Items`` . For more information, see `Serving Private Content through
                      CloudFront
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      If you don't want to require signed URLs in requests for objects that match
                      ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity``
                      . Omit ``Items`` .

                      To add, change, or remove one or more trusted signers, change ``Enabled`` to
                      ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                      and specify all of the trusted signers that you want to include in the updated
                      distribution.

                      - **Enabled** *(boolean) --*

                        Specifies whether you want to require viewers to use signed URLs to access
                        the files specified by ``PathPattern`` and ``TargetOriginId`` .

                      - **Quantity** *(integer) --*

                        The number of trusted signers for this cache behavior.

                      - **Items** *(list) --*

                         **Optional** : A complex type that contains trusted signers for this cache
                         behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                        - *(string) --*

                    - **ViewerProtocolPolicy** *(string) --*

                      The protocol that viewers can use to access the files in the origin specified
                      by ``TargetOriginId`` when a request matches the path pattern in
                      ``PathPattern`` . You can specify the following options:

                      * ``allow-all`` : Viewers can use HTTP or HTTPS.

                      * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                      returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                      with the HTTPS URL. The viewer then resubmits the request using the new URL.

                      * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                      HTTP status code of 403 (Forbidden).

                      For more information about requiring the HTTPS protocol, see `Using an HTTPS
                      Connection to Access Your Objects
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      .. note::

                        The only way to guarantee that viewers retrieve an object that was fetched
                        from the origin using HTTPS is never to use any other protocol to fetch the
                        object. If you have recently changed from HTTP to HTTPS, we recommend that
                        you clear your objects' cache because cached objects are protocol agnostic.
                        That means that an edge location will return an object from the cache
                        regardless of whether the current request protocol matches the protocol used
                        previously. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                    - **MinTTL** *(integer) --*

                      The minimum amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. For more information, see `Managing How Long
                      Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                      all headers to your origin (under ``Headers`` , if you specify ``1`` for
                      ``Quantity`` and ``*`` for ``Name`` ).

                    - **AllowedMethods** *(dict) --*

                      A complex type that controls which HTTP methods CloudFront processes and
                      forwards to your Amazon S3 bucket or your custom origin. There are three
                      choices:

                      * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                      * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                      * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                      ``DELETE`` requests.

                      If you pick the third choice, you may need to restrict access to your Amazon
                      S3 bucket or to your custom origin so users can't perform operations that you
                      don't want them to. For example, you might not want users to have permissions
                      to delete objects from your origin.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods that you want CloudFront to forward to your
                        origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                        ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                        OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        process and forward to your origin.

                        - *(string) --*

                      - **CachedMethods** *(dict) --*

                        A complex type that controls whether CloudFront caches the response to
                        requests using the specified HTTP methods. There are two choices:

                        * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                        * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                        requests.

                        If you pick the second choice for your Amazon S3 Origin, you may need to
                        forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                        Origin headers for the responses to be cached correctly.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods for which you want CloudFront to cache
                          responses. Valid values are ``2`` (for caching responses to ``GET`` and
                          ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` , ``HEAD``
                          , and ``OPTIONS`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          cache responses to.

                          - *(string) --*

                    - **SmoothStreaming** *(boolean) --*

                      Indicates whether you want to distribute media files in the Microsoft Smooth
                      Streaming format using the origin that is associated with this cache behavior.
                      If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                      for ``SmoothStreaming`` , you can still distribute other content using this
                      cache behavior if the content matches the value of ``PathPattern`` .

                    - **DefaultTTL** *(integer) --*

                      The default amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. The value that you specify applies only when your
                      origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                      ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                      see `Managing How Long Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **MaxTTL** *(integer) --*

                      The maximum amount of time that you want objects to stay in CloudFront caches
                      before CloudFront forwards another request to your origin to determine whether
                      the object has been updated. The value that you specify applies only when your
                      origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                      s-maxage`` , and ``Expires`` to objects. For more information, see `Managing
                      How Long Content Stays in an Edge Cache (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Compress** *(boolean) --*

                      Whether you want CloudFront to automatically compress certain files for this
                      cache behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                      information, see `Serving Compressed Files
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **LambdaFunctionAssociations** *(dict) --*

                      A complex type that contains zero or more Lambda function associations for a
                      cache behavior.

                      - **Quantity** *(integer) --*

                        The number of Lambda function associations for this cache behavior.

                      - **Items** *(list) --*

                         **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                         items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                         ``Items`` .

                        - *(dict) --*

                          A complex type that contains a Lambda function association.

                          - **LambdaFunctionARN** *(string) --*

                            The ARN of the Lambda function. You must specify the ARN of a function
                            version; you can't specify a Lambda alias or $LATEST.

                          - **EventType** *(string) --*

                            Specifies the event type that triggers a Lambda function invocation. You
                            can specify the following values:

                            * ``viewer-request`` : The function executes when CloudFront receives a
                            request from a viewer and before it checks to see whether the requested
                            object is in the edge cache.

                            * ``origin-request`` : The function executes only when CloudFront
                            forwards a request to your origin. When the requested object is in the
                            edge cache, the function doesn't execute.

                            * ``origin-response`` : The function executes after CloudFront receives
                            a response from the origin and before it caches the object in the
                            response. When the requested object is in the edge cache, the function
                            doesn't execute.

                            * ``viewer-response`` : The function executes before CloudFront returns
                            the requested object to the viewer. The function executes regardless of
                            whether the object was already in the edge cache. If the origin returns
                            an HTTP status code other than HTTP 200 (OK), the function doesn't
                            execute.

                          - **IncludeBody** *(boolean) --*

                            A flag that allows a Lambda function to have read access to the body
                            content. For more information, see `Accessing the Request Body by
                            Choosing the Include Body Option
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                            in the Amazon CloudFront Developer Guide.

                    - **FieldLevelEncryptionId** *(string) --*

                      The value of ``ID`` for the field-level encryption configuration that you want
                      CloudFront to use for encrypting specific fields of data for a cache behavior
                      or for the default cache behavior in your distribution.

                  - **CacheBehaviors** *(dict) --*

                    A complex type that contains zero or more ``CacheBehavior`` elements.

                    - **Quantity** *(integer) --*

                      The number of cache behaviors for this distribution.

                    - **Items** *(list) --*

                      Optional: A complex type that contains cache behaviors for this distribution.
                      If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(dict) --*

                        A complex type that describes how CloudFront processes requests.

                        You must create at least as many cache behaviors (including the default
                        cache behavior) as you have origins if you want CloudFront to distribute
                        objects from all of the origins. Each cache behavior specifies the one
                        origin from which you want CloudFront to get objects. If you have two
                        origins and only the default cache behavior, the default cache behavior will
                        cause CloudFront to get objects from one of the origins, but the other
                        origin is never used.

                        For the current limit on the number of cache behaviors that you can add to a
                        distribution, see `Amazon CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        If you don't want to specify any cache behaviors, include only an empty
                        ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior``
                        element, or CloudFront returns a ``MalformedXML`` error.

                        To delete all cache behaviors in an existing distribution, update the
                        distribution configuration and include only an empty ``CacheBehaviors``
                        element.

                        To add, change, or remove one or more cache behaviors, update the
                        distribution configuration and specify all of the cache behaviors that you
                        want to include in the updated distribution.

                        For more information about cache behaviors, see `Cache Behaviors
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **PathPattern** *(string) --*

                          The pattern (for example, ``images/*.jpg`` ) that specifies which requests
                          to apply the behavior to. When CloudFront receives a viewer request, the
                          requested path is compared with path patterns in the order in which cache
                          behaviors are listed in the distribution.

                          .. note::

                            You can optionally include a slash (``/`` ) at the beginning of the path
                            pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the
                            same with or without the leading ``/`` .

                          The path pattern for the default cache behavior is ``*`` and cannot be
                          changed. If the request for an object does not match the path pattern for
                          any cache behaviors, CloudFront applies the behavior in the default cache
                          behavior.

                          For more information, see `Path Pattern
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **TargetOriginId** *(string) --*

                          The value of ``ID`` for the origin that you want CloudFront to route
                          requests to when a request matches the path pattern either for a cache
                          behavior or for the default cache behavior in your distribution.

                        - **ForwardedValues** *(dict) --*

                          A complex type that specifies how CloudFront handles query strings and
                          cookies.

                          - **QueryString** *(boolean) --*

                            Indicates whether you want CloudFront to forward query strings to the
                            origin that is associated with this cache behavior and cache based on
                            the query string parameters. CloudFront behavior depends on the value of
                            ``QueryString`` and on the values that you specify for
                            ``QueryStringCacheKeys`` , if any:

                            If you specify true for ``QueryString`` and you don't specify any values
                            for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                            parameters to the origin and caches based on all query string
                            parameters. Depending on how many query string parameters and values you
                            have, this can adversely affect performance because CloudFront must
                            forward more requests to the origin.

                            If you specify true for ``QueryString`` and you specify one or more
                            values for ``QueryStringCacheKeys`` , CloudFront forwards all query
                            string parameters to the origin, but it only caches based on the query
                            string parameters that you specify.

                            If you specify false for ``QueryString`` , CloudFront doesn't forward
                            any query string parameters to the origin, and doesn't cache based on
                            query string parameters.

                            For more information, see `Configuring CloudFront to Cache Based on
                            Query String Parameters
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                          - **Cookies** *(dict) --*

                            A complex type that specifies whether you want CloudFront to forward
                            cookies to the origin and, if so, which ones. For more information about
                            forwarding cookies to the origin, see `How CloudFront Forwards, Caches,
                            and Logs Cookies
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                            - **Forward** *(string) --*

                              Specifies which cookies to forward to the origin for this cache
                              behavior: all, none, or the list of cookies specified in the
                              ``WhitelistedNames`` complex type.

                              Amazon S3 doesn't process cookies. When the cache behavior is
                              forwarding requests to an Amazon S3 origin, specify none for the
                              ``Forward`` element.

                            - **WhitelistedNames** *(dict) --*

                              Required if you specify ``whitelist`` for the value of ``Forward:`` .
                              A complex type that specifies how many different cookies you want
                              CloudFront to forward to the origin for this cache behavior and, if
                              you want to forward selected cookies, the names of those cookies.

                              If you specify ``all`` or none for the value of ``Forward`` , omit
                              ``WhitelistedNames`` . If you change the value of ``Forward`` from
                              ``whitelist`` to all or none and you don't delete the
                              ``WhitelistedNames`` element and its child elements, CloudFront
                              deletes them automatically.

                              For the current limit on the number of cookie names that you can
                              whitelist for each cache behavior, see `CloudFront Limits
                              <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                              in the *AWS General Reference* .

                              - **Quantity** *(integer) --*

                                The number of different cookies that you want CloudFront to forward
                                to the origin for this cache behavior.

                              - **Items** *(list) --*

                                A complex type that contains one ``Name`` element for each cookie
                                that you want CloudFront to forward to the origin for this cache
                                behavior.

                                - *(string) --*

                          - **Headers** *(dict) --*

                            A complex type that specifies the ``Headers`` , if any, that you want
                            CloudFront to forward to the origin for this cache behavior (whitelisted
                            headers). For the headers that you specify, CloudFront also caches
                            separate versions of a specified object that is based on the header
                            values in viewer requests.

                            For more information, see `Caching Content Based on Request Headers
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                            - **Quantity** *(integer) --*

                              The number of different headers that you want CloudFront to base
                              caching on for this cache behavior. You can configure each cache
                              behavior in a web distribution to do one of the following:

                              * **Forward all headers to your origin** : Specify ``1`` for
                              ``Quantity`` and ``*`` for ``Name`` .

                              .. warning::

                                 CloudFront doesn't cache the objects that are associated with this
                                 cache behavior. Instead, CloudFront sends every request to the
                                 origin.

                              * **Forward a whitelist of headers you specify** : Specify the number
                              of headers that you want CloudFront to base caching on. Then specify
                              the header names in ``Name`` elements. CloudFront caches your objects
                              based on the values in the specified headers.

                              * **Forward only the default headers** : Specify ``0`` for
                              ``Quantity`` and omit ``Items`` . In this configuration, CloudFront
                              doesn't cache based on the values in the request headers.

                              Regardless of which option you choose, CloudFront forwards headers to
                              your origin based on whether the origin is an S3 bucket or a custom
                              origin. See the following documentation:

                              * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                              Updates
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                              * **Custom origin** : See `HTTP Request Headers and CloudFront
                              Behavior
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                            - **Items** *(list) --*

                              A list that contains one ``Name`` element for each header that you
                              want CloudFront to use for caching in this cache behavior. If
                              ``Quantity`` is ``0`` , omit ``Items`` .

                              - *(string) --*

                          - **QueryStringCacheKeys** *(dict) --*

                            A complex type that contains information about the query string
                            parameters that you want CloudFront to use for caching for this cache
                            behavior.

                            - **Quantity** *(integer) --*

                              The number of ``whitelisted`` query string parameters for a cache
                              behavior.

                            - **Items** *(list) --*

                              A list that contains the query string parameters that you want
                              CloudFront to use as a basis for caching for a cache behavior. If
                              ``Quantity`` is 0, you can omit ``Items`` .

                              - *(string) --*

                        - **TrustedSigners** *(dict) --*

                          A complex type that specifies the AWS accounts, if any, that you want to
                          allow to create signed URLs for private content.

                          If you want to require signed URLs in requests for objects in the target
                          origin that match the ``PathPattern`` for this cache behavior, specify
                          ``true`` for ``Enabled`` , and specify the applicable values for
                          ``Quantity`` and ``Items`` . For more information, see `Serving Private
                          Content through CloudFront
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          If you don't want to require signed URLs in requests for objects that
                          match ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for
                          ``Quantity`` . Omit ``Items`` .

                          To add, change, or remove one or more trusted signers, change ``Enabled``
                          to ``true`` (if it's currently ``false`` ), change ``Quantity`` as
                          applicable, and specify all of the trusted signers that you want to
                          include in the updated distribution.

                          - **Enabled** *(boolean) --*

                            Specifies whether you want to require viewers to use signed URLs to
                            access the files specified by ``PathPattern`` and ``TargetOriginId`` .

                          - **Quantity** *(integer) --*

                            The number of trusted signers for this cache behavior.

                          - **Items** *(list) --*

                             **Optional** : A complex type that contains trusted signers for this
                             cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                            - *(string) --*

                        - **ViewerProtocolPolicy** *(string) --*

                          The protocol that viewers can use to access the files in the origin
                          specified by ``TargetOriginId`` when a request matches the path pattern in
                          ``PathPattern`` . You can specify the following options:

                          * ``allow-all`` : Viewers can use HTTP or HTTPS.

                          * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                          returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                          with the HTTPS URL. The viewer then resubmits the request using the new
                          URL.

                          * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns
                          an HTTP status code of 403 (Forbidden).

                          For more information about requiring the HTTPS protocol, see `Using an
                          HTTPS Connection to Access Your Objects
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          .. note::

                            The only way to guarantee that viewers retrieve an object that was
                            fetched from the origin using HTTPS is never to use any other protocol
                            to fetch the object. If you have recently changed from HTTP to HTTPS, we
                            recommend that you clear your objects' cache because cached objects are
                            protocol agnostic. That means that an edge location will return an
                            object from the cache regardless of whether the current request protocol
                            matches the protocol used previously. For more information, see
                            `Managing How Long Content Stays in an Edge Cache (Expiration)
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                            in the *Amazon CloudFront Developer Guide* .

                        - **MinTTL** *(integer) --*

                          The minimum amount of time that you want objects to stay in CloudFront
                          caches before CloudFront forwards another request to your origin to
                          determine whether the object has been updated. For more information, see
                          `Managing How Long Content Stays in an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          You must specify ``0`` for ``MinTTL`` if you configure CloudFront to
                          forward all headers to your origin (under ``Headers`` , if you specify
                          ``1`` for ``Quantity`` and ``*`` for ``Name`` ).

                        - **AllowedMethods** *(dict) --*

                          A complex type that controls which HTTP methods CloudFront processes and
                          forwards to your Amazon S3 bucket or your custom origin. There are three
                          choices:

                          * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                          * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                          * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                          ``DELETE`` requests.

                          If you pick the third choice, you may need to restrict access to your
                          Amazon S3 bucket or to your custom origin so users can't perform
                          operations that you don't want them to. For example, you might not want
                          users to have permissions to delete objects from your origin.

                          - **Quantity** *(integer) --*

                            The number of HTTP methods that you want CloudFront to forward to your
                            origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                            ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                            OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                          - **Items** *(list) --*

                            A complex type that contains the HTTP methods that you want CloudFront
                            to process and forward to your origin.

                            - *(string) --*

                          - **CachedMethods** *(dict) --*

                            A complex type that controls whether CloudFront caches the response to
                            requests using the specified HTTP methods. There are two choices:

                            * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                            * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                            requests.

                            If you pick the second choice for your Amazon S3 Origin, you may need to
                            forward Access-Control-Request-Method, Access-Control-Request-Headers,
                            and Origin headers for the responses to be cached correctly.

                            - **Quantity** *(integer) --*

                              The number of HTTP methods for which you want CloudFront to cache
                              responses. Valid values are ``2`` (for caching responses to ``GET``
                              and ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` ,
                              ``HEAD`` , and ``OPTIONS`` requests).

                            - **Items** *(list) --*

                              A complex type that contains the HTTP methods that you want CloudFront
                              to cache responses to.

                              - *(string) --*

                        - **SmoothStreaming** *(boolean) --*

                          Indicates whether you want to distribute media files in the Microsoft
                          Smooth Streaming format using the origin that is associated with this
                          cache behavior. If so, specify ``true`` ; if not, specify ``false`` . If
                          you specify ``true`` for ``SmoothStreaming`` , you can still distribute
                          other content using this cache behavior if the content matches the value
                          of ``PathPattern`` .

                        - **DefaultTTL** *(integer) --*

                          The default amount of time that you want objects to stay in CloudFront
                          caches before CloudFront forwards another request to your origin to
                          determine whether the object has been updated. The value that you specify
                          applies only when your origin does not add HTTP headers such as
                          ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and ``Expires``
                          to objects. For more information, see `Managing How Long Content Stays in
                          an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **MaxTTL** *(integer) --*

                          The maximum amount of time that you want objects to stay in CloudFront
                          caches before CloudFront forwards another request to your origin to
                          determine whether the object has been updated. The value that you specify
                          applies only when your origin adds HTTP headers such as ``Cache-Control
                          max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to objects. For
                          more information, see `Managing How Long Content Stays in an Edge Cache
                          (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **Compress** *(boolean) --*

                          Whether you want CloudFront to automatically compress certain files for
                          this cache behavior. If so, specify true; if not, specify false. For more
                          information, see `Serving Compressed Files
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **LambdaFunctionAssociations** *(dict) --*

                          A complex type that contains zero or more Lambda function associations for
                          a cache behavior.

                          - **Quantity** *(integer) --*

                            The number of Lambda function associations for this cache behavior.

                          - **Items** *(list) --*

                             **Optional** : A complex type that contains
                             ``LambdaFunctionAssociation`` items for this cache behavior. If
                             ``Quantity`` is ``0`` , you can omit ``Items`` .

                            - *(dict) --*

                              A complex type that contains a Lambda function association.

                              - **LambdaFunctionARN** *(string) --*

                                The ARN of the Lambda function. You must specify the ARN of a
                                function version; you can't specify a Lambda alias or $LATEST.

                              - **EventType** *(string) --*

                                Specifies the event type that triggers a Lambda function invocation.
                                You can specify the following values:

                                * ``viewer-request`` : The function executes when CloudFront
                                receives a request from a viewer and before it checks to see whether
                                the requested object is in the edge cache.

                                * ``origin-request`` : The function executes only when CloudFront
                                forwards a request to your origin. When the requested object is in
                                the edge cache, the function doesn't execute.

                                * ``origin-response`` : The function executes after CloudFront
                                receives a response from the origin and before it caches the object
                                in the response. When the requested object is in the edge cache, the
                                function doesn't execute.

                                * ``viewer-response`` : The function executes before CloudFront
                                returns the requested object to the viewer. The function executes
                                regardless of whether the object was already in the edge cache. If
                                the origin returns an HTTP status code other than HTTP 200 (OK), the
                                function doesn't execute.

                              - **IncludeBody** *(boolean) --*

                                A flag that allows a Lambda function to have read access to the body
                                content. For more information, see `Accessing the Request Body by
                                Choosing the Include Body Option
                                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                                in the Amazon CloudFront Developer Guide.

                        - **FieldLevelEncryptionId** *(string) --*

                          The value of ``ID`` for the field-level encryption configuration that you
                          want CloudFront to use for encrypting specific fields of data for a cache
                          behavior or for the default cache behavior in your distribution.

                  - **CustomErrorResponses** *(dict) --*

                    A complex type that contains zero or more ``CustomErrorResponses`` elements.

                    - **Quantity** *(integer) --*

                      The number of HTTP status codes for which you want to specify a custom error
                      page and/or a caching duration. If ``Quantity`` is ``0`` , you can omit
                      ``Items`` .

                    - **Items** *(list) --*

                      A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                      status code for which you want to specify a custom error page and/or a caching
                      duration.

                      - *(dict) --*

                        A complex type that controls:

                        * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range
                        with custom error messages before returning the response to the viewer.

                        * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                        For more information about custom error pages, see `Customizing Error
                        Responses
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        - **ErrorCode** *(integer) --*

                          The HTTP status code for which you want to specify a custom error page
                          and/or a caching duration.

                        - **ResponsePagePath** *(string) --*

                          The path to the custom error page that you want CloudFront to return to a
                          viewer when your origin returns the HTTP status code specified by
                          ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you
                          want to store your objects and your custom error pages in different
                          locations, your distribution must include a cache behavior for which the
                          following is true:

                          * The value of ``PathPattern`` matches the path to your custom error
                          messages. For example, suppose you saved custom error pages for 4xx errors
                          in an Amazon S3 bucket in a directory named ``/4xx-errors`` . Your
                          distribution must include a cache behavior for which the path pattern
                          routes requests for your custom error pages to that location, for example,
                          ``/4xx-errors/*`` .

                          * The value of ``TargetOriginId`` specifies the value of the ``ID``
                          element for the origin that contains your custom error pages.

                          If you specify a value for ``ResponsePagePath`` , you must also specify a
                          value for ``ResponseCode`` . If you don't want to specify a value, include
                          an empty element, ``<ResponsePagePath>`` , in the XML document.

                          We recommend that you store custom error pages in an Amazon S3 bucket. If
                          you store custom error pages on an HTTP server and the server starts to
                          return 5xx errors, CloudFront can't get the files that you want to return
                          to viewers because the origin server is unavailable.

                        - **ResponseCode** *(string) --*

                          The HTTP status code that you want CloudFront to return to the viewer
                          along with the custom error page. There are a variety of reasons that you
                          might want CloudFront to return a status code different from the status
                          code that your origin returned to CloudFront, for example:

                          * Some Internet devices (some firewalls and corporate proxies, for
                          example) intercept HTTP 4xx and 5xx and prevent the response from being
                          returned to the viewer. If you substitute ``200`` , the response typically
                          won't be intercepted.

                          * If you don't care about distinguishing among different client errors or
                          server errors, you can specify ``400`` or ``500`` as the ``ResponseCode``
                          for all 4xx or 5xx errors.

                          * You might want to return a ``200`` status code (OK) and static website
                          so your customers don't know that your website is down.

                          If you specify a value for ``ResponseCode`` , you must also specify a
                          value for ``ResponsePagePath`` . If you don't want to specify a value,
                          include an empty element, ``<ResponseCode>`` , in the XML document.

                        - **ErrorCachingMinTTL** *(integer) --*

                          The minimum amount of time, in seconds, that you want CloudFront to cache
                          the HTTP status code specified in ``ErrorCode`` . When this time period
                          has elapsed, CloudFront queries your origin to see whether the problem
                          that caused the error has been resolved and the requested object is now
                          available.

                          If you don't want to specify a value, include an empty element,
                          ``<ErrorCachingMinTTL>`` , in the XML document.

                          For more information, see `Customizing Error Responses
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                  - **Comment** *(string) --*

                    The comment originally specified when this distribution was created.

                  - **PriceClass** *(string) --*

                    A complex type that contains information about price class for this streaming
                    distribution.

                  - **Enabled** *(boolean) --*

                    Whether the distribution is enabled to accept user requests for content.

                  - **ViewerCertificate** *(dict) --*

                    A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                    request your objects, whether you're using an alternate domain name with HTTPS,
                    and if so, if you're using AWS Certificate Manager (ACM) or a third-party
                    certificate authority.

                    - **CloudFrontDefaultCertificate** *(boolean) --*

                      If you're using the CloudFront domain name for your distribution, such as
                      ``d111111abcdef8.cloudfront.net`` , specify the following value:

                      * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                    - **IAMCertificateId** *(string) --*

                      If you want viewers to use HTTPS to request your objects and you're using an
                      alternate domain name, you must choose the type of certificate that you want
                      to use. Specify the following value if you purchased your certificate from a
                      third-party certificate authority:

                      * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                      certificate ID* `` is the ID that IAM returned when you added the certificate
                      to the IAM certificate store.

                      If you specify ``IAMCertificateId`` , you must also specify a value for
                      ``SSLSupportMethod`` .

                    - **ACMCertificateArn** *(string) --*

                      If you want viewers to use HTTPS to request your objects and you're using an
                      alternate domain name, you must choose the type of certificate that you want
                      to use. Specify the following value if ACM provided your certificate:

                      * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                      where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                      certificate that you want to use for this distribution.

                      If you specify ``ACMCertificateArn`` , you must also specify a value for
                      ``SSLSupportMethod`` .

                    - **SSLSupportMethod** *(string) --*

                      If you specify a value for `ACMCertificateArn
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                      or for `IAMCertificateId
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                      , you must also specify how you want CloudFront to serve HTTPS requests: using
                      a method that works for browsers and clients released after 2010 or one that
                      works for all clients.

                      * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                      support Server Name Indication (SNI). All modern browsers support SNI, but
                      there are a few that don't. For a current list of the browsers that support
                      SNI, see the `Wikipedia entry Server Name Indication
                      <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about
                      options to explore if you have users with browsers that don't include SNI
                      support, see `Choosing How CloudFront Serves HTTPS Requests
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                      respond to HTTPS requests from any viewer. However, there are additional
                      monthly charges. For details, including specific pricing information, see
                      `Custom SSL options for Amazon CloudFront
                      <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                      site.

                      Don't specify a value for ``SSLSupportMethod`` if you specified
                      ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                      For more information, see `Choosing How CloudFront Serves HTTPS Requests
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **MinimumProtocolVersion** *(string) --*

                      Specify the security policy that you want CloudFront to use for HTTPS
                      connections. A security policy determines two settings:

                      * The minimum SSL/TLS protocol that CloudFront uses to communicate with
                      viewers

                      * The cipher that CloudFront uses to encrypt the content that it returns to
                      viewers

                      .. note::

                        On the CloudFront console, this setting is called **Security policy** .

                      We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                      browsers or devices that do not support TLSv1.1 or later.

                      When both of the following are true, you must specify ``TLSv1`` or later for
                      the security policy:

                      * You're using a custom certificate: you specified a value for
                      ``ACMCertificateArn`` or for ``IAMCertificateId``

                      * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                      If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                      automatically sets the security policy to ``TLSv1`` regardless of the value
                      that you specify for ``MinimumProtocolVersion`` .

                      For information about the relationship between the security policy that you
                      choose and the protocols and ciphers that CloudFront uses to communicate with
                      viewers, see `Supported SSL/TLS Protocols and Ciphers for Communication
                      Between Viewers and CloudFront
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Certificate** *(string) --*

                      This field is no longer used. Use one of the following fields instead:

                      * `ACMCertificateArn
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                      * `IAMCertificateId
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                      * `CloudFrontDefaultCertificate
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                    - **CertificateSource** *(string) --*

                      This field is no longer used. Use one of the following fields instead:

                      * `ACMCertificateArn
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                      * `IAMCertificateId
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                      * `CloudFrontDefaultCertificate
                      <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                  - **Restrictions** *(dict) --*

                    A complex type that identifies ways in which you want to restrict distribution
                    of your content.

                    - **GeoRestriction** *(dict) --*

                      A complex type that controls the countries in which your content is
                      distributed. CloudFront determines the location of your users using
                      ``MaxMind`` GeoIP databases.

                      - **RestrictionType** *(string) --*

                        The method that you want to use to restrict distribution of your content by
                        country:

                        * ``none`` : No geo restriction is enabled, meaning access to content is not
                        restricted by client geo location.

                        * ``blacklist`` : The ``Location`` elements specify the countries in which
                        you don't want CloudFront to distribute your content.

                        * ``whitelist`` : The ``Location`` elements specify the countries in which
                        you want CloudFront to distribute your content.

                      - **Quantity** *(integer) --*

                        When geo restriction is ``enabled`` , this is the number of countries in
                        your ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled,
                        ``Quantity`` is ``0`` , and you can omit ``Items`` .

                      - **Items** *(list) --*

                        A complex type that contains a ``Location`` element for each country in
                        which you want CloudFront either to distribute your content (``whitelist`` )
                        or not distribute your content (``blacklist`` ).

                        The ``Location`` element is a two-letter, uppercase country code for a
                        country that you want to include in your ``blacklist`` or ``whitelist`` .
                        Include one ``Location`` element for each country.

                        CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the
                        current list of countries and the corresponding codes, see ``ISO
                        3166-1-alpha-2`` code on the *International Organization for
                        Standardization* website. You can also refer to the country list on the
                        CloudFront console, which includes both country names and codes.

                        - *(string) --*

                  - **WebACLId** *(string) --*

                    The Web ACL Id (if any) associated with the distribution.

                  - **HttpVersion** *(string) --*

                    Specify the maximum HTTP version that you want viewers to use to communicate
                    with CloudFront. The default value for new web distributions is ``http2`` .
                    Viewers that don't support ``HTTP/2`` will automatically use an earlier version.

                  - **IsIPV6Enabled** *(boolean) --*

                    Whether CloudFront responds to IPv6 DNS requests with an IPv6 address for your
                    distribution.

                  - **AliasICPRecordals** *(list) --*

                    AWS services in China customers must file for an Internet Content Provider (ICP)
                    recordal if they want to serve content publicly on an alternate domain name,
                    also known as a CNAME, that they've added to CloudFront. AliasICPRecordal
                    provides the ICP recordal status for CNAMEs associated with distributions.

                    For more information about ICP recordals, see `Signup, Accounts, and Credentials
                    <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                    in *Getting Started with AWS services in China* .

                    - *(dict) --*

                      AWS services in China customers must file for an Internet Content Provider
                      (ICP) recordal if they want to serve content publicly on an alternate domain
                      name, also known as a CNAME, that they've added to CloudFront.
                      AliasICPRecordal provides the ICP recordal status for CNAMEs associated with
                      distributions. The status is returned in the CloudFront response; you can't
                      configure it yourself.

                      For more information about ICP recordals, see `Signup, Accounts, and
                      Credentials
                      <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                      in *Getting Started with AWS services in China* .

                      - **CNAME** *(string) --*

                        A domain name associated with a distribution.

                      - **ICPRecordalStatus** *(string) --*

                        The Internet Content Provider (ICP) recordal status for a CNAME. The
                        ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions
                        outside of China.

                        The status values returned are the following:

                        * **APPROVED** indicates that the associated CNAME has a valid ICP recordal
                        number. Multiple CNAMEs can be associated with a distribution, and CNAMEs
                        can correspond to different ICP recordals. To be marked as APPROVED, that
                        is, valid to use with China region, a CNAME must have one ICP recordal
                        number associated with it.

                        * **SUSPENDED** indicates that the associated CNAME does not have a valid
                        ICP recordal number.

                        * **PENDING** indicates that at least one CNAME associated with the
                        distribution does not have a valid ICP recordal number.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_field_level_encryption_configs(
        self, Marker: str = None, MaxItems: str = None
    ) -> ClientListFieldLevelEncryptionConfigsResponseTypeDef:
        """
        List all field-level encryption configurations that have been created in CloudFront for this
        account.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListFieldLevelEncryptionConfigs>`_

        **Request Syntax**
        ::

          response = client.list_field_level_encryption_configs(
              Marker='string',
              MaxItems='string'
          )
        :type Marker: string
        :param Marker:

          Use this when paginating results to indicate where to begin in your list of
          configurations. The results include configurations in the list that occur after the
          marker. To get the next page of results, set the ``Marker`` to the value of the
          ``NextMarker`` from the current page's response (which is also the ID of the last
          configuration on that page).

        :type MaxItems: string
        :param MaxItems:

          The maximum number of field-level encryption configurations you want in the response body.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionList': {
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'LastModifiedTime': datetime(2015, 1, 1),
                            'Comment': 'string',
                            'QueryArgProfileConfig': {
                                'ForwardWhenQueryArgProfileIsUnknown': True|False,
                                'QueryArgProfiles': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'QueryArg': 'string',
                                            'ProfileId': 'string'
                                        },
                                    ]
                                }
                            },
                            'ContentTypeProfileConfig': {
                                'ForwardWhenContentTypeIsUnknown': True|False,
                                'ContentTypeProfiles': {
                                    'Quantity': 123,
                                    'Items': [
                                        {
                                            'Format': 'URLEncoded',
                                            'ProfileId': 'string',
                                            'ContentType': 'string'
                                        },
                                    ]
                                }
                            }
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionList** *(dict) --*

              Returns a list of all field-level encryption configurations that have been created in
              CloudFront for this account.

              - **NextMarker** *(string) --*

                If there are more elements to be listed, this element is present and contains the
                value that you can use for the ``Marker`` request parameter to continue listing your
                configurations where you left off.

              - **MaxItems** *(integer) --*

                The maximum number of elements you want in the response body.

              - **Quantity** *(integer) --*

                The number of field-level encryption items.

              - **Items** *(list) --*

                An array of field-level encryption items.

                - *(dict) --*

                  A summary of a field-level encryption item.

                  - **Id** *(string) --*

                    The unique ID of a field-level encryption item.

                  - **LastModifiedTime** *(datetime) --*

                    The last time that the summary of field-level encryption items was modified.

                  - **Comment** *(string) --*

                    An optional comment about the field-level encryption item.

                  - **QueryArgProfileConfig** *(dict) --*

                    A summary of a query argument-profile mapping.

                    - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --*

                      Flag to set if you want a request to be forwarded to the origin even if the
                      profile specified by the field-level encryption query argument, fle-profile,
                      is unknown.

                    - **QueryArgProfiles** *(dict) --*

                      Profiles specified for query argument-profile mapping for field-level
                      encryption.

                      - **Quantity** *(integer) --*

                        Number of profiles for query argument-profile mapping for field-level
                        encryption.

                      - **Items** *(list) --*

                        Number of items for query argument-profile mapping for field-level
                        encryption.

                        - *(dict) --*

                          Query argument-profile mapping for field-level encryption.

                          - **QueryArg** *(string) --*

                            Query argument for field-level encryption query argument-profile
                            mapping.

                          - **ProfileId** *(string) --*

                            ID of profile to use for field-level encryption query argument-profile
                            mapping

                  - **ContentTypeProfileConfig** *(dict) --*

                    A summary of a content type-profile mapping.

                    - **ForwardWhenContentTypeIsUnknown** *(boolean) --*

                      The setting in a field-level encryption content type-profile mapping that
                      specifies what to do when an unknown content type is provided for the profile.
                      If true, content is forwarded without being encrypted when the content type is
                      unknown. If false (the default), an error is returned when the content type is
                      unknown.

                    - **ContentTypeProfiles** *(dict) --*

                      The configuration for a field-level encryption content type-profile.

                      - **Quantity** *(integer) --*

                        The number of field-level encryption content type-profile mappings.

                      - **Items** *(list) --*

                        Items in a field-level encryption content type-profile mapping.

                        - *(dict) --*

                          A field-level encryption content type profile.

                          - **Format** *(string) --*

                            The format for a field-level encryption content type-profile mapping.

                          - **ProfileId** *(string) --*

                            The profile ID for a field-level encryption content type-profile
                            mapping.

                          - **ContentType** *(string) --*

                            The content type for a field-level encryption content type-profile
                            mapping.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_field_level_encryption_profiles(
        self, Marker: str = None, MaxItems: str = None
    ) -> ClientListFieldLevelEncryptionProfilesResponseTypeDef:
        """
        Request a list of field-level encryption profiles that have been created in CloudFront for
        this account.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListFieldLevelEncryptionProfiles>`_

        **Request Syntax**
        ::

          response = client.list_field_level_encryption_profiles(
              Marker='string',
              MaxItems='string'
          )
        :type Marker: string
        :param Marker:

          Use this when paginating results to indicate where to begin in your list of profiles. The
          results include profiles in the list that occur after the marker. To get the next page of
          results, set the ``Marker`` to the value of the ``NextMarker`` from the current page's
          response (which is also the ID of the last profile on that page).

        :type MaxItems: string
        :param MaxItems:

          The maximum number of field-level encryption profiles you want in the response body.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionProfileList': {
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'LastModifiedTime': datetime(2015, 1, 1),
                            'Name': 'string',
                            'EncryptionEntities': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'PublicKeyId': 'string',
                                        'ProviderId': 'string',
                                        'FieldPatterns': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                ]
                            },
                            'Comment': 'string'
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionProfileList** *(dict) --*

              Returns a list of the field-level encryption profiles that have been created in
              CloudFront for this account.

              - **NextMarker** *(string) --*

                If there are more elements to be listed, this element is present and contains the
                value that you can use for the ``Marker`` request parameter to continue listing your
                profiles where you left off.

              - **MaxItems** *(integer) --*

                The maximum number of field-level encryption profiles you want in the response body.

              - **Quantity** *(integer) --*

                The number of field-level encryption profiles.

              - **Items** *(list) --*

                The field-level encryption profile items.

                - *(dict) --*

                  The field-level encryption profile summary.

                  - **Id** *(string) --*

                    ID for the field-level encryption profile summary.

                  - **LastModifiedTime** *(datetime) --*

                    The time when the the field-level encryption profile summary was last updated.

                  - **Name** *(string) --*

                    Name for the field-level encryption profile summary.

                  - **EncryptionEntities** *(dict) --*

                    A complex data type of encryption entities for the field-level encryption
                    profile that include the public key ID, provider, and field patterns for
                    specifying which fields to encrypt with this key.

                    - **Quantity** *(integer) --*

                      Number of field pattern items in a field-level encryption content type-profile
                      mapping.

                    - **Items** *(list) --*

                      An array of field patterns in a field-level encryption content type-profile
                      mapping.

                      - *(dict) --*

                        Complex data type for field-level encryption profiles that includes the
                        encryption key and field pattern specifications.

                        - **PublicKeyId** *(string) --*

                          The public key associated with a set of field-level encryption patterns,
                          to be used when encrypting the fields that match the patterns.

                        - **ProviderId** *(string) --*

                          The provider associated with the public key being used for encryption.
                          This value must also be provided with the private key for applications to
                          be able to decrypt data.

                        - **FieldPatterns** *(dict) --*

                          Field patterns in a field-level encryption content type profile specify
                          the fields that you want to be encrypted. You can provide the full field
                          name, or any beginning characters followed by a wildcard (*). You can't
                          overlap field patterns. For example, you can't have both ABC* and AB*.
                          Note that field patterns are case-sensitive.

                          - **Quantity** *(integer) --*

                            The number of field-level encryption field patterns.

                          - **Items** *(list) --*

                            An array of the field-level encryption field patterns.

                            - *(string) --*

                  - **Comment** *(string) --*

                    An optional comment for the field-level encryption profile summary.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_invalidations(
        self, DistributionId: str, Marker: str = None, MaxItems: str = None
    ) -> ClientListInvalidationsResponseTypeDef:
        """
        Lists invalidation batches.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListInvalidations>`_

        **Request Syntax**
        ::

          response = client.list_invalidations(
              DistributionId='string',
              Marker='string',
              MaxItems='string'
          )
        :type DistributionId: string
        :param DistributionId: **[REQUIRED]**

          The distribution's ID.

        :type Marker: string
        :param Marker:

          Use this parameter when paginating results to indicate where to begin in your list of
          invalidation batches. Because the results are returned in decreasing order from most
          recent to oldest, the most recent results are on the first page, the second page will
          contain earlier results, and so on. To get the next page of results, set ``Marker`` to the
          value of the ``NextMarker`` from the current page's response. This value is the same as
          the ID of the last invalidation batch on that page.

        :type MaxItems: string
        :param MaxItems:

          The maximum number of invalidation batches that you want in the response body.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'InvalidationList': {
                    'Marker': 'string',
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'IsTruncated': True|False,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'CreateTime': datetime(2015, 1, 1),
                            'Status': 'string'
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **InvalidationList** *(dict) --*

              Information about invalidation batches.

              - **Marker** *(string) --*

                The value that you provided for the ``Marker`` request parameter.

              - **NextMarker** *(string) --*

                If ``IsTruncated`` is ``true`` , this element is present and contains the value that
                you can use for the ``Marker`` request parameter to continue listing your
                invalidation batches where they left off.

              - **MaxItems** *(integer) --*

                The value that you provided for the ``MaxItems`` request parameter.

              - **IsTruncated** *(boolean) --*

                A flag that indicates whether more invalidation batch requests remain to be listed.
                If your results were truncated, you can make a follow-up pagination request using
                the ``Marker`` request parameter to retrieve more invalidation batches in the list.

              - **Quantity** *(integer) --*

                The number of invalidation batches that were created by the current AWS account.

              - **Items** *(list) --*

                A complex type that contains one ``InvalidationSummary`` element for each
                invalidation batch created by the current AWS account.

                - *(dict) --*

                  A summary of an invalidation request.

                  - **Id** *(string) --*

                    The unique ID for an invalidation request.

                  - **CreateTime** *(datetime) --*

                    The time that an invalidation request was created.

                  - **Status** *(string) --*

                    The status of an invalidation request.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_public_keys(
        self, Marker: str = None, MaxItems: str = None
    ) -> ClientListPublicKeysResponseTypeDef:
        """
        List all public keys that have been added to CloudFront for this account.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListPublicKeys>`_

        **Request Syntax**
        ::

          response = client.list_public_keys(
              Marker='string',
              MaxItems='string'
          )
        :type Marker: string
        :param Marker:

          Use this when paginating results to indicate where to begin in your list of public keys.
          The results include public keys in the list that occur after the marker. To get the next
          page of results, set the ``Marker`` to the value of the ``NextMarker`` from the current
          page's response (which is also the ID of the last public key on that page).

        :type MaxItems: string
        :param MaxItems:

          The maximum number of public keys you want in the response body.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'PublicKeyList': {
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'Name': 'string',
                            'CreatedTime': datetime(2015, 1, 1),
                            'EncodedKey': 'string',
                            'Comment': 'string'
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            - **PublicKeyList** *(dict) --*

              Returns a list of all public keys that have been added to CloudFront for this account.

              - **NextMarker** *(string) --*

                If there are more elements to be listed, this element is present and contains the
                value that you can use for the ``Marker`` request parameter to continue listing your
                public keys where you left off.

              - **MaxItems** *(integer) --*

                The maximum number of public keys you want in the response body.

              - **Quantity** *(integer) --*

                The number of public keys you added to CloudFront to use with features like
                field-level encryption.

              - **Items** *(list) --*

                An array of information about a public key you add to CloudFront to use with
                features like field-level encryption.

                - *(dict) --*

                  A complex data type for public key information.

                  - **Id** *(string) --*

                    ID for public key information summary.

                  - **Name** *(string) --*

                    Name for public key information summary.

                  - **CreatedTime** *(datetime) --*

                    Creation time for public key information summary.

                  - **EncodedKey** *(string) --*

                    Encoded key for public key information summary.

                  - **Comment** *(string) --*

                    Comment for public key information summary.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_streaming_distributions(
        self, Marker: str = None, MaxItems: str = None
    ) -> ClientListStreamingDistributionsResponseTypeDef:
        """
        List streaming distributions.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListStreamingDistributions>`_

        **Request Syntax**
        ::

          response = client.list_streaming_distributions(
              Marker='string',
              MaxItems='string'
          )
        :type Marker: string
        :param Marker:

          The value that you provided for the ``Marker`` request parameter.

        :type MaxItems: string
        :param MaxItems:

          The value that you provided for the ``MaxItems`` request parameter.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'StreamingDistributionList': {
                    'Marker': 'string',
                    'NextMarker': 'string',
                    'MaxItems': 123,
                    'IsTruncated': True|False,
                    'Quantity': 123,
                    'Items': [
                        {
                            'Id': 'string',
                            'ARN': 'string',
                            'Status': 'string',
                            'LastModifiedTime': datetime(2015, 1, 1),
                            'DomainName': 'string',
                            'S3Origin': {
                                'DomainName': 'string',
                                'OriginAccessIdentity': 'string'
                            },
                            'Aliases': {
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'TrustedSigners': {
                                'Enabled': True|False,
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'Comment': 'string',
                            'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                            'Enabled': True|False
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **StreamingDistributionList** *(dict) --*

              The ``StreamingDistributionList`` type.

              - **Marker** *(string) --*

                The value you provided for the ``Marker`` request parameter.

              - **NextMarker** *(string) --*

                If ``IsTruncated`` is ``true`` , this element is present and contains the value you
                can use for the ``Marker`` request parameter to continue listing your RTMP
                distributions where they left off.

              - **MaxItems** *(integer) --*

                The value you provided for the ``MaxItems`` request parameter.

              - **IsTruncated** *(boolean) --*

                A flag that indicates whether more streaming distributions remain to be listed. If
                your results were truncated, you can make a follow-up pagination request using the
                ``Marker`` request parameter to retrieve more distributions in the list.

              - **Quantity** *(integer) --*

                The number of streaming distributions that were created by the current AWS account.

              - **Items** *(list) --*

                A complex type that contains one ``StreamingDistributionSummary`` element for each
                distribution that was created by the current AWS account.

                - *(dict) --*

                  A summary of the information for a CloudFront streaming distribution.

                  - **Id** *(string) --*

                    The identifier for the distribution, for example, ``EDFDVBD632BHDS5`` .

                  - **ARN** *(string) --*

                    The ARN (Amazon Resource Name) for the streaming distribution. For example:
                    ``arn:aws:cloudfront::123456789012:streaming-distribution/EDFDVBD632BHDS5`` ,
                    where ``123456789012`` is your AWS account ID.

                  - **Status** *(string) --*

                    Indicates the current status of the distribution. When the status is
                    ``Deployed`` , the distribution's information is fully propagated throughout the
                    Amazon CloudFront system.

                  - **LastModifiedTime** *(datetime) --*

                    The date and time the distribution was last modified.

                  - **DomainName** *(string) --*

                    The domain name corresponding to the distribution, for example,
                    ``d111111abcdef8.cloudfront.net`` .

                  - **S3Origin** *(dict) --*

                    A complex type that contains information about the Amazon S3 bucket from which
                    you want CloudFront to get your media files for distribution.

                    - **DomainName** *(string) --*

                      The DNS name of the Amazon S3 origin.

                    - **OriginAccessIdentity** *(string) --*

                      The CloudFront origin access identity to associate with the distribution. Use
                      an origin access identity to configure the distribution so that end users can
                      only access objects in an Amazon S3 bucket through CloudFront.

                      If you want end users to be able to access objects using either the CloudFront
                      URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                      To delete the origin access identity from an existing distribution, update the
                      distribution configuration and include an empty ``OriginAccessIdentity``
                      element.

                      To replace the origin access identity, update the distribution configuration
                      and specify the new origin access identity.

                      For more information, see `Using an Origin Access Identity to Restrict Access
                      to Your Amazon S3 Content
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **Aliases** *(dict) --*

                    A complex type that contains information about CNAMEs (alternate domain names),
                    if any, for this streaming distribution.

                    - **Quantity** *(integer) --*

                      The number of CNAME aliases, if any, that you want to associate with this
                      distribution.

                    - **Items** *(list) --*

                      A complex type that contains the CNAME aliases, if any, that you want to
                      associate with this distribution.

                      - *(string) --*

                  - **TrustedSigners** *(dict) --*

                    A complex type that specifies the AWS accounts, if any, that you want to allow
                    to create signed URLs for private content. If you want to require signed URLs in
                    requests for objects in the target origin that match the ``PathPattern`` for
                    this cache behavior, specify ``true`` for ``Enabled`` , and specify the
                    applicable values for ``Quantity`` and ``Items`` .If you don't want to require
                    signed URLs in requests for objects that match ``PathPattern`` , specify
                    ``false`` for ``Enabled`` and ``0`` for ``Quantity`` . Omit ``Items`` . To add,
                    change, or remove one or more trusted signers, change ``Enabled`` to ``true``
                    (if it's currently ``false`` ), change ``Quantity`` as applicable, and specify
                    all of the trusted signers that you want to include in the updated distribution.

                    For more information, see `Serving Private Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Enabled** *(boolean) --*

                      Specifies whether you want to require viewers to use signed URLs to access the
                      files specified by ``PathPattern`` and ``TargetOriginId`` .

                    - **Quantity** *(integer) --*

                      The number of trusted signers for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains trusted signers for this cache
                       behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(string) --*

                  - **Comment** *(string) --*

                    The comment originally specified when this distribution was created.

                  - **PriceClass** *(string) --*

                    A complex type that contains information about price class for this streaming
                    distribution.

                  - **Enabled** *(boolean) --*

                    Whether the distribution is enabled to accept end user requests for content.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def list_tags_for_resource(self, Resource: str) -> ClientListTagsForResourceResponseTypeDef:
        """
        List tags for a CloudFront resource.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/ListTagsForResource>`_

        **Request Syntax**
        ::

          response = client.list_tags_for_resource(
              Resource='string'
          )
        :type Resource: string
        :param Resource: **[REQUIRED]**

          An ARN of a CloudFront resource.

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Tags': {
                    'Items': [
                        {
                            'Key': 'string',
                            'Value': 'string'
                        },
                    ]
                }
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Tags** *(dict) --*

              A complex type that contains zero or more ``Tag`` elements.

              - **Items** *(list) --*

                A complex type that contains ``Tag`` elements.

                - *(dict) --*

                  A complex type that contains ``Tag`` key and ``Tag`` value.

                  - **Key** *(string) --*

                    A string that contains ``Tag`` key.

                    The string length should be between 1 and 128 characters. Valid characters
                    include ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - .
                    : / = + @`` .

                  - **Value** *(string) --*

                    A string that contains an optional ``Tag`` value.

                    The string length should be between 0 and 256 characters. Valid characters
                    include ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - .
                    : / = + @`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def tag_resource(self, Resource: str, Tags: ClientTagResourceTagsTypeDef) -> None:
        """
        Add tags to a CloudFront resource.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/TagResource>`_

        **Request Syntax**
        ::

          response = client.tag_resource(
              Resource='string',
              Tags={
                  'Items': [
                      {
                          'Key': 'string',
                          'Value': 'string'
                      },
                  ]
              }
          )
        :type Resource: string
        :param Resource: **[REQUIRED]**

          An ARN of a CloudFront resource.

        :type Tags: dict
        :param Tags: **[REQUIRED]**

          A complex type that contains zero or more ``Tag`` elements.

          - **Items** *(list) --*

            A complex type that contains ``Tag`` elements.

            - *(dict) --*

              A complex type that contains ``Tag`` key and ``Tag`` value.

              - **Key** *(string) --* **[REQUIRED]**

                A string that contains ``Tag`` key.

                The string length should be between 1 and 128 characters. Valid characters include
                ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / = + @``
                .

              - **Value** *(string) --*

                A string that contains an optional ``Tag`` value.

                The string length should be between 0 and 256 characters. Valid characters include
                ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / = + @``
                .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def untag_resource(self, Resource: str, TagKeys: ClientUntagResourceTagKeysTypeDef) -> None:
        """
        Remove tags from a CloudFront resource.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UntagResource>`_

        **Request Syntax**
        ::

          response = client.untag_resource(
              Resource='string',
              TagKeys={
                  'Items': [
                      'string',
                  ]
              }
          )
        :type Resource: string
        :param Resource: **[REQUIRED]**

          An ARN of a CloudFront resource.

        :type TagKeys: dict
        :param TagKeys: **[REQUIRED]**

          A complex type that contains zero or more ``Tag`` key elements.

          - **Items** *(list) --*

            A complex type that contains ``Tag`` key elements.

            - *(string) --*

              A string that contains ``Tag`` key.

              The string length should be between 1 and 128 characters. Valid characters include
              ``a-z`` , ``A-Z`` , ``0-9`` , space, and the special characters ``_ - . : / =
                   + @`` .

        :returns: None
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def update_cloud_front_origin_access_identity(
        self,
        CloudFrontOriginAccessIdentityConfig: ClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
        Id: str,
        IfMatch: str = None,
    ) -> ClientUpdateCloudFrontOriginAccessIdentityResponseTypeDef:
        """
        Update an origin access identity.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UpdateCloudFrontOriginAccessIdentity>`_

        **Request Syntax**
        ::

          response = client.update_cloud_front_origin_access_identity(
              CloudFrontOriginAccessIdentityConfig={
                  'CallerReference': 'string',
                  'Comment': 'string'
              },
              Id='string',
              IfMatch='string'
          )
        :type CloudFrontOriginAccessIdentityConfig: dict
        :param CloudFrontOriginAccessIdentityConfig: **[REQUIRED]**

          The identity's configuration information.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique value (for example, a date-time stamp) that ensures that the request can't be
            replayed.

            If the value of ``CallerReference`` is new (regardless of the content of the
            ``CloudFrontOriginAccessIdentityConfig`` object), a new origin access identity is
            created.

            If the ``CallerReference`` is a value already sent in a previous identity request, and
            the content of the ``CloudFrontOriginAccessIdentityConfig`` is identical to the original
            request (ignoring white space), the response includes the same information returned to
            the original request.

            If the ``CallerReference`` is a value you already sent in a previous request to create
            an identity, but the content of the ``CloudFrontOriginAccessIdentityConfig`` is
            different from the original request, CloudFront returns a
            ``CloudFrontOriginAccessIdentityAlreadyExists`` error.

          - **Comment** *(string) --* **[REQUIRED]**

            Any comments you want to include about the origin access identity.

        :type Id: string
        :param Id: **[REQUIRED]**

          The identity's id.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the identity's
          configuration. For example: ``E2QWRUHAPOMQZL`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'CloudFrontOriginAccessIdentity': {
                    'Id': 'string',
                    'S3CanonicalUserId': 'string',
                    'CloudFrontOriginAccessIdentityConfig': {
                        'CallerReference': 'string',
                        'Comment': 'string'
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **CloudFrontOriginAccessIdentity** *(dict) --*

              The origin access identity's information.

              - **Id** *(string) --*

                The ID for the origin access identity, for example, ``E74FTE3AJFJ256A`` .

              - **S3CanonicalUserId** *(string) --*

                The Amazon S3 canonical user ID for the origin access identity, used when giving the
                origin access identity read permission to an object in Amazon S3.

              - **CloudFrontOriginAccessIdentityConfig** *(dict) --*

                The current configuration information for the identity.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``CloudFrontOriginAccessIdentityConfig`` object), a new origin access identity is
                  created.

                  If the ``CallerReference`` is a value already sent in a previous identity request,
                  and the content of the ``CloudFrontOriginAccessIdentityConfig`` is identical to
                  the original request (ignoring white space), the response includes the same
                  information returned to the original request.

                  If the ``CallerReference`` is a value you already sent in a previous request to
                  create an identity, but the content of the
                  ``CloudFrontOriginAccessIdentityConfig`` is different from the original request,
                  CloudFront returns a ``CloudFrontOriginAccessIdentityAlreadyExists`` error.

                - **Comment** *(string) --*

                  Any comments you want to include about the origin access identity.

            - **ETag** *(string) --*

              The current version of the configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def update_distribution(
        self,
        DistributionConfig: ClientUpdateDistributionDistributionConfigTypeDef,
        Id: str,
        IfMatch: str = None,
    ) -> ClientUpdateDistributionResponseTypeDef:
        """
        Updates the configuration for a web distribution.

        .. warning::

          When you update a distribution, there are more required fields than when you create a
          distribution. When you update your distribution by using this API action, follow the steps
          here to get the current configuration and then make your updates, to make sure that you
          include all of the required fields. To view a summary, see `Required Fields for Create
          Distribution and Update Distribution
          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview-required-fields.html>`__
          in the *Amazon CloudFront Developer Guide* .

        The update process includes getting the current distribution configuration, updating the XML
        document that is returned to make your changes, and then submitting an
        ``UpdateDistribution`` request to make the updates.

        For information about updating a distribution using the CloudFront console instead, see
        `Creating a Distribution
        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating-console.html>`__
        in the *Amazon CloudFront Developer Guide* .

         **To update a web distribution using the CloudFront API**

        * Submit a `GetDistributionConfig
        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_GetDistributionConfig.html>`__
        request to get the current configuration and an ``Etag`` header for the distribution.

        .. note::

           If you update the distribution again, you must get a new ``Etag`` header.

        * Update the XML document that was returned in the response to your
        ``GetDistributionConfig`` request to include your changes.

        .. warning::

           When you edit the XML file, be aware of the following:

            * You must strip out the ETag parameter that is returned.

            * Additional fields are required when you update a distribution. There may be fields
            included in the XML file for features that you haven't configured for your distribution.
            This is expected and required to successfully update the distribution.

            * You can't change the value of ``CallerReference`` . If you try to change this value,
            CloudFront returns an ``IllegalUpdate`` error.

            * The new configuration replaces the existing configuration; the values that you specify
            in an ``UpdateDistribution`` request are not merged into your existing configuration.
            When you add, delete, or replace values in an element that allows multiple values (for
            example, ``CNAME`` ), you must specify all of the values that you want to appear in the
            updated distribution. In addition, you must update the corresponding ``Quantity``
            element.

        * Submit an ``UpdateDistribution`` request to update the configuration for your
        distribution:

          * In the request body, include the XML document that you updated in Step 2. The request
          body must include an XML document with a ``DistributionConfig`` element.

          * Set the value of the HTTP ``If-Match`` header to the value of the ``ETag`` header that
          CloudFront returned when you submitted the ``GetDistributionConfig`` request in Step 1.

        * Review the response to the ``UpdateDistribution`` request to confirm that the
        configuration was successfully updated.

        * Optional: Submit a `GetDistribution
        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_GetDistribution.html>`__
        request to confirm that your changes have propagated. When propagation is complete, the
        value of ``Status`` is ``Deployed`` .

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UpdateDistribution>`_

        **Request Syntax**
        ::

          response = client.update_distribution(
              DistributionConfig={
                  'CallerReference': 'string',
                  'Aliases': {
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'DefaultRootObject': 'string',
                  'Origins': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'Id': 'string',
                              'DomainName': 'string',
                              'OriginPath': 'string',
                              'CustomHeaders': {
                                  'Quantity': 123,
                                  'Items': [
                                      {
                                          'HeaderName': 'string',
                                          'HeaderValue': 'string'
                                      },
                                  ]
                              },
                              'S3OriginConfig': {
                                  'OriginAccessIdentity': 'string'
                              },
                              'CustomOriginConfig': {
                                  'HTTPPort': 123,
                                  'HTTPSPort': 123,
                                  'OriginProtocolPolicy': 'http-only'|'match-viewer'|'https-only',
                                  'OriginSslProtocols': {
                                      'Quantity': 123,
                                      'Items': [
                                          'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                      ]
                                  },
                                  'OriginReadTimeout': 123,
                                  'OriginKeepaliveTimeout': 123
                              }
                          },
                      ]
                  },
                  'OriginGroups': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'Id': 'string',
                              'FailoverCriteria': {
                                  'StatusCodes': {
                                      'Quantity': 123,
                                      'Items': [
                                          123,
                                      ]
                                  }
                              },
                              'Members': {
                                  'Quantity': 123,
                                  'Items': [
                                      {
                                          'OriginId': 'string'
                                      },
                                  ]
                              }
                          },
                      ]
                  },
                  'DefaultCacheBehavior': {
                      'TargetOriginId': 'string',
                      'ForwardedValues': {
                          'QueryString': True|False,
                          'Cookies': {
                              'Forward': 'none'|'whitelist'|'all',
                              'WhitelistedNames': {
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              }
                          },
                          'Headers': {
                              'Quantity': 123,
                              'Items': [
                                  'string',
                              ]
                          },
                          'QueryStringCacheKeys': {
                              'Quantity': 123,
                              'Items': [
                                  'string',
                              ]
                          }
                      },
                      'TrustedSigners': {
                          'Enabled': True|False,
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      },
                      'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                      'MinTTL': 123,
                      'AllowedMethods': {
                          'Quantity': 123,
                          'Items': [
                              'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                          ],
                          'CachedMethods': {
                              'Quantity': 123,
                              'Items': [
                                  'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                              ]
                          }
                      },
                      'SmoothStreaming': True|False,
                      'DefaultTTL': 123,
                      'MaxTTL': 123,
                      'Compress': True|False,
                      'LambdaFunctionAssociations': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'LambdaFunctionARN': 'string',
                                  'EventType':
                                  'viewer-request'|'viewer-response'
                                  |'origin-request'|'origin-response',
                                  'IncludeBody': True|False
                              },
                          ]
                      },
                      'FieldLevelEncryptionId': 'string'
                  },
                  'CacheBehaviors': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'PathPattern': 'string',
                              'TargetOriginId': 'string',
                              'ForwardedValues': {
                                  'QueryString': True|False,
                                  'Cookies': {
                                      'Forward': 'none'|'whitelist'|'all',
                                      'WhitelistedNames': {
                                          'Quantity': 123,
                                          'Items': [
                                              'string',
                                          ]
                                      }
                                  },
                                  'Headers': {
                                      'Quantity': 123,
                                      'Items': [
                                          'string',
                                      ]
                                  },
                                  'QueryStringCacheKeys': {
                                      'Quantity': 123,
                                      'Items': [
                                          'string',
                                      ]
                                  }
                              },
                              'TrustedSigners': {
                                  'Enabled': True|False,
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              },
                              'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                              'MinTTL': 123,
                              'AllowedMethods': {
                                  'Quantity': 123,
                                  'Items': [
                                      'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                  ],
                                  'CachedMethods': {
                                      'Quantity': 123,
                                      'Items': [
                                          'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                      ]
                                  }
                              },
                              'SmoothStreaming': True|False,
                              'DefaultTTL': 123,
                              'MaxTTL': 123,
                              'Compress': True|False,
                              'LambdaFunctionAssociations': {
                                  'Quantity': 123,
                                  'Items': [
                                      {
                                          'LambdaFunctionARN': 'string',
                                          'EventType':
                                          'viewer-request'
                                          |'viewer-response'
                                          |'origin-request'
                                          |'origin-response',
                                          'IncludeBody': True|False
                                      },
                                  ]
                              },
                              'FieldLevelEncryptionId': 'string'
                          },
                      ]
                  },
                  'CustomErrorResponses': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'ErrorCode': 123,
                              'ResponsePagePath': 'string',
                              'ResponseCode': 'string',
                              'ErrorCachingMinTTL': 123
                          },
                      ]
                  },
                  'Comment': 'string',
                  'Logging': {
                      'Enabled': True|False,
                      'IncludeCookies': True|False,
                      'Bucket': 'string',
                      'Prefix': 'string'
                  },
                  'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                  'Enabled': True|False,
                  'ViewerCertificate': {
                      'CloudFrontDefaultCertificate': True|False,
                      'IAMCertificateId': 'string',
                      'ACMCertificateArn': 'string',
                      'SSLSupportMethod': 'sni-only'|'vip',
                      'MinimumProtocolVersion':
                      'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'|'TLSv1.2_2018',
                      'Certificate': 'string',
                      'CertificateSource': 'cloudfront'|'iam'|'acm'
                  },
                  'Restrictions': {
                      'GeoRestriction': {
                          'RestrictionType': 'blacklist'|'whitelist'|'none',
                          'Quantity': 123,
                          'Items': [
                              'string',
                          ]
                      }
                  },
                  'WebACLId': 'string',
                  'HttpVersion': 'http1.1'|'http2',
                  'IsIPV6Enabled': True|False
              },
              Id='string',
              IfMatch='string'
          )
        :type DistributionConfig: dict
        :param DistributionConfig: **[REQUIRED]**

          The distribution's configuration information.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique value (for example, a date-time stamp) that ensures that the request can't be
            replayed.

            If the value of ``CallerReference`` is new (regardless of the content of the
            ``DistributionConfig`` object), CloudFront creates a new distribution.

            If ``CallerReference`` is a value that you already sent in a previous request to create
            a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

          - **Aliases** *(dict) --*

            A complex type that contains information about CNAMEs (alternate domain names), if any,
            for this distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of CNAME aliases, if any, that you want to associate with this
              distribution.

            - **Items** *(list) --*

              A complex type that contains the CNAME aliases, if any, that you want to associate
              with this distribution.

              - *(string) --*

          - **DefaultRootObject** *(string) --*

            The object that you want CloudFront to request from your origin (for example,
            ``index.html`` ) when a viewer requests the root URL for your distribution
            (``http://www.example.com`` ) instead of an object in your distribution
            (``http://www.example.com/product-description.html`` ). Specifying a default root object
            avoids exposing the contents of your distribution.

            Specify only the object name, for example, ``index.html`` . Don't add a ``/`` before the
            object name.

            If you don't want to specify a default root object when you create a distribution,
            include an empty ``DefaultRootObject`` element.

            To delete the default root object from an existing distribution, update the distribution
            configuration and include an empty ``DefaultRootObject`` element.

            To replace the default root object, update the distribution configuration and specify
            the new object.

            For more information about the default root object, see `Creating a Default Root Object
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
            in the *Amazon CloudFront Developer Guide* .

          - **Origins** *(dict) --* **[REQUIRED]**

            A complex type that contains information about origins for this distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of origins or origin groups for this distribution.

            - **Items** *(list) --* **[REQUIRED]**

              A complex type that contains origins or origin groups for this distribution.

              - *(dict) --*

                A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web
                server), Amazon MediaStore, or other server from which CloudFront gets your files.
                This can also be an origin group, if you've created an origin group. You must
                specify at least one origin or origin group.

                For the current limit on the number of origins or origin groups that you can specify
                for a distribution, see `Amazon CloudFront Limits
                <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                in the *AWS General Reference* .

                - **Id** *(string) --* **[REQUIRED]**

                  A unique identifier for the origin or origin group. The value of ``Id`` must be
                  unique within the distribution.

                  When you specify the value of ``TargetOriginId`` for the default cache behavior or
                  for another cache behavior, you indicate the origin to which you want the cache
                  behavior to route requests by specifying the value of the ``Id`` element for that
                  origin. When a request matches the path pattern for that cache behavior,
                  CloudFront routes the request to the specified origin. For more information, see
                  `Cache Behavior Settings
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **DomainName** *(string) --* **[REQUIRED]**

                   **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you want
                   CloudFront to get objects for this origin, for example,
                   ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be configured as
                   a website endpoint, enter the Amazon S3 static website hosting endpoint for the
                   bucket.

                  For more information about specifying this value for different types of origins,
                  see `Origin Domain Name
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                  in the *Amazon CloudFront Developer Guide* .

                  Constraints for Amazon S3 origins:

                  * If you configured Amazon S3 Transfer Acceleration for your bucket, don't specify
                  the ``s3-accelerate`` endpoint for ``DomainName`` .

                  * The bucket name must be between 3 and 63 characters long (inclusive).

                  * The bucket name must contain only lowercase characters, numbers, periods,
                  underscores, and dashes.

                  * The bucket name must not contain adjacent periods.

                   **Custom Origins** : The DNS domain name for the HTTP server from which you want
                   CloudFront to get objects for this origin, for example, ``www.example.com`` .

                  Constraints for custom origins:

                  * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9, dot
                  (.), hyphen (-), or underscore (_) characters.

                  * The name cannot exceed 128 characters.

                - **OriginPath** *(string) --*

                  An optional element that causes CloudFront to request your content from a
                  directory in your Amazon S3 bucket or your custom origin. When you include the
                  ``OriginPath`` element, specify the directory name, beginning with a ``/`` .
                  CloudFront appends the directory name to the value of ``DomainName`` , for
                  example, ``example.com/production`` . Do not include a ``/`` at the end of the
                  directory name.

                  For example, suppose you've specified the following values for your distribution:

                  * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                  * ``OriginPath`` : ``/production``

                  * ``CNAME`` : ``example.com``

                  When a user enters ``example.com/index.html`` in a browser, CloudFront sends a
                  request to Amazon S3 for ``myawsbucket/production/index.html`` .

                  When a user enters ``example.com/acme/index.html`` in a browser, CloudFront sends
                  a request to Amazon S3 for ``myawsbucket/production/acme/index.html`` .

                - **CustomHeaders** *(dict) --*

                  A complex type that contains names and values for the custom headers that you
                  want.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of custom headers, if any, for this distribution.

                  - **Items** *(list) --*

                     **Optional** : A list that contains one ``OriginCustomHeader`` element for each
                     custom header that you want CloudFront to forward to the origin. If Quantity is
                     ``0`` , omit ``Items`` .

                    - *(dict) --*

                      A complex type that contains ``HeaderName`` and ``HeaderValue`` elements, if
                      any, for this distribution.

                      - **HeaderName** *(string) --* **[REQUIRED]**

                        The name of a header that you want CloudFront to forward to your origin. For
                        more information, see `Forwarding Custom Headers to Your Origin (Web
                        Distributions Only)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **HeaderValue** *(string) --* **[REQUIRED]**

                        The value for the header that you specified in the ``HeaderName`` field.

                - **S3OriginConfig** *(dict) --*

                  A complex type that contains information about the Amazon S3 origin. If the origin
                  is a custom origin, use the ``CustomOriginConfig`` element instead.

                  - **OriginAccessIdentity** *(string) --* **[REQUIRED]**

                    The CloudFront origin access identity to associate with the origin. Use an
                    origin access identity to configure the origin so that viewers can *only* access
                    objects in an Amazon S3 bucket through CloudFront. The format of the value is:

                    origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                    where `` *ID-of-origin-access-identity* `` is the value that CloudFront returned
                    in the ``ID`` element when you created the origin access identity.

                    If you want viewers to be able to access objects using either the CloudFront URL
                    or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                    To delete the origin access identity from an existing distribution, update the
                    distribution configuration and include an empty ``OriginAccessIdentity``
                    element.

                    To replace the origin access identity, update the distribution configuration and
                    specify the new origin access identity.

                    For more information about the origin access identity, see `Serving Private
                    Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **CustomOriginConfig** *(dict) --*

                  A complex type that contains information about a custom origin. If the origin is
                  an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                  - **HTTPPort** *(integer) --* **[REQUIRED]**

                    The HTTP port the custom origin listens on.

                  - **HTTPSPort** *(integer) --* **[REQUIRED]**

                    The HTTPS port the custom origin listens on.

                  - **OriginProtocolPolicy** *(string) --* **[REQUIRED]**

                    The origin protocol policy to apply to your origin.

                  - **OriginSslProtocols** *(dict) --*

                    The SSL/TLS protocols that you want CloudFront to use when communicating with
                    your origin over HTTPS.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of SSL/TLS protocols that you want to allow CloudFront to use when
                      establishing an HTTPS connection with this origin.

                    - **Items** *(list) --* **[REQUIRED]**

                      A list that contains allowed SSL/TLS protocols for this distribution.

                      - *(string) --*

                  - **OriginReadTimeout** *(integer) --*

                    You can create a custom origin read timeout. All timeout units are in seconds.
                    The default origin read timeout is 30 seconds, but you can configure custom
                    timeout lengths using the CloudFront API. The minimum timeout length is 4
                    seconds; the maximum is 60 seconds.

                    If you need to increase the maximum time limit, contact the `AWS Support Center
                    <https://console.aws.amazon.com/support/home#/>`__ .

                  - **OriginKeepaliveTimeout** *(integer) --*

                    You can create a custom keep-alive timeout. All timeout units are in seconds.
                    The default keep-alive timeout is 5 seconds, but you can configure custom
                    timeout lengths using the CloudFront API. The minimum timeout length is 1
                    second; the maximum is 60 seconds.

                    If you need to increase the maximum time limit, contact the `AWS Support Center
                    <https://console.aws.amazon.com/support/home#/>`__ .

          - **OriginGroups** *(dict) --*

            A complex type that contains information about origin groups for this distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of origin groups.

            - **Items** *(list) --*

              The items (origin groups) in a distribution.

              - *(dict) --*

                An origin group includes two origins (a primary origin and a second origin to
                failover to) and a failover criteria that you specify. You create an origin group to
                support origin failover in CloudFront. When you create or update a distribution, you
                can specifiy the origin group instead of a single origin, and CloudFront will
                failover from the primary origin to the second origin under the failover conditions
                that you've chosen.

                - **Id** *(string) --* **[REQUIRED]**

                  The origin group's ID.

                - **FailoverCriteria** *(dict) --* **[REQUIRED]**

                  A complex type that contains information about the failover criteria for an origin
                  group.

                  - **StatusCodes** *(dict) --* **[REQUIRED]**

                    The status codes that, when returned from the primary origin, will trigger
                    CloudFront to failover to the second origin.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of status codes.

                    - **Items** *(list) --* **[REQUIRED]**

                      The items (status codes) for an origin group.

                      - *(integer) --*

                - **Members** *(dict) --* **[REQUIRED]**

                  A complex type that contains information about the origins in an origin group.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of origins in an origin group.

                  - **Items** *(list) --* **[REQUIRED]**

                    Items (origins) in an origin group.

                    - *(dict) --*

                      An origin in an origin group.

                      - **OriginId** *(string) --* **[REQUIRED]**

                        The ID for an origin in an origin group.

          - **DefaultCacheBehavior** *(dict) --* **[REQUIRED]**

            A complex type that describes the default cache behavior if you don't specify a
            ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern``
            in ``CacheBehavior`` elements. You must create exactly one default cache behavior.

            - **TargetOriginId** *(string) --* **[REQUIRED]**

              The value of ``ID`` for the origin that you want CloudFront to route requests to when
              a request matches the path pattern either for a cache behavior or for the default
              cache behavior in your distribution.

            - **ForwardedValues** *(dict) --* **[REQUIRED]**

              A complex type that specifies how CloudFront handles query strings and cookies.

              - **QueryString** *(boolean) --* **[REQUIRED]**

                Indicates whether you want CloudFront to forward query strings to the origin that is
                associated with this cache behavior and cache based on the query string parameters.
                CloudFront behavior depends on the value of ``QueryString`` and on the values that
                you specify for ``QueryStringCacheKeys`` , if any:

                If you specify true for ``QueryString`` and you don't specify any values for
                ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to the
                origin and caches based on all query string parameters. Depending on how many query
                string parameters and values you have, this can adversely affect performance because
                CloudFront must forward more requests to the origin.

                If you specify true for ``QueryString`` and you specify one or more values for
                ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to the
                origin, but it only caches based on the query string parameters that you specify.

                If you specify false for ``QueryString`` , CloudFront doesn't forward any query
                string parameters to the origin, and doesn't cache based on query string parameters.

                For more information, see `Configuring CloudFront to Cache Based on Query String
                Parameters
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                in the *Amazon CloudFront Developer Guide* .

              - **Cookies** *(dict) --* **[REQUIRED]**

                A complex type that specifies whether you want CloudFront to forward cookies to the
                origin and, if so, which ones. For more information about forwarding cookies to the
                origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Forward** *(string) --* **[REQUIRED]**

                  Specifies which cookies to forward to the origin for this cache behavior: all,
                  none, or the list of cookies specified in the ``WhitelistedNames`` complex type.

                  Amazon S3 doesn't process cookies. When the cache behavior is forwarding requests
                  to an Amazon S3 origin, specify none for the ``Forward`` element.

                - **WhitelistedNames** *(dict) --*

                  Required if you specify ``whitelist`` for the value of ``Forward:`` . A complex
                  type that specifies how many different cookies you want CloudFront to forward to
                  the origin for this cache behavior and, if you want to forward selected cookies,
                  the names of those cookies.

                  If you specify ``all`` or none for the value of ``Forward`` , omit
                  ``WhitelistedNames`` . If you change the value of ``Forward`` from ``whitelist``
                  to all or none and you don't delete the ``WhitelistedNames`` element and its child
                  elements, CloudFront deletes them automatically.

                  For the current limit on the number of cookie names that you can whitelist for
                  each cache behavior, see `CloudFront Limits
                  <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                  in the *AWS General Reference* .

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of different cookies that you want CloudFront to forward to the
                    origin for this cache behavior.

                  - **Items** *(list) --*

                    A complex type that contains one ``Name`` element for each cookie that you want
                    CloudFront to forward to the origin for this cache behavior.

                    - *(string) --*

              - **Headers** *(dict) --*

                A complex type that specifies the ``Headers`` , if any, that you want CloudFront to
                forward to the origin for this cache behavior (whitelisted headers). For the headers
                that you specify, CloudFront also caches separate versions of a specified object
                that is based on the header values in viewer requests.

                For more information, see `Caching Content Based on Request Headers
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of different headers that you want CloudFront to base caching on for
                  this cache behavior. You can configure each cache behavior in a web distribution
                  to do one of the following:

                  * **Forward all headers to your origin** : Specify ``1`` for ``Quantity`` and
                  ``*`` for ``Name`` .

                  .. warning::

                     CloudFront doesn't cache the objects that are associated with this cache
                     behavior. Instead, CloudFront sends every request to the origin.

                  * **Forward a whitelist of headers you specify** : Specify the number of headers
                  that you want CloudFront to base caching on. Then specify the header names in
                  ``Name`` elements. CloudFront caches your objects based on the values in the
                  specified headers.

                  * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and omit
                  ``Items`` . In this configuration, CloudFront doesn't cache based on the values in
                  the request headers.

                  Regardless of which option you choose, CloudFront forwards headers to your origin
                  based on whether the origin is an S3 bucket or a custom origin. See the following
                  documentation:

                  * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or Updates
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                  * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                - **Items** *(list) --*

                  A list that contains one ``Name`` element for each header that you want CloudFront
                  to use for caching in this cache behavior. If ``Quantity`` is ``0`` , omit
                  ``Items`` .

                  - *(string) --*

              - **QueryStringCacheKeys** *(dict) --*

                A complex type that contains information about the query string parameters that you
                want CloudFront to use for caching for this cache behavior.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of ``whitelisted`` query string parameters for a cache behavior.

                - **Items** *(list) --*

                  A list that contains the query string parameters that you want CloudFront to use
                  as a basis for caching for a cache behavior. If ``Quantity`` is 0, you can omit
                  ``Items`` .

                  - *(string) --*

            - **TrustedSigners** *(dict) --* **[REQUIRED]**

              A complex type that specifies the AWS accounts, if any, that you want to allow to
              create signed URLs for private content.

              If you want to require signed URLs in requests for objects in the target origin that
              match the ``PathPattern`` for this cache behavior, specify ``true`` for ``Enabled`` ,
              and specify the applicable values for ``Quantity`` and ``Items`` . For more
              information, see `Serving Private Content through CloudFront
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
              in the *Amazon CloudFront Developer Guide* .

              If you don't want to require signed URLs in requests for objects that match
              ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` . Omit
              ``Items`` .

              To add, change, or remove one or more trusted signers, change ``Enabled`` to ``true``
              (if it's currently ``false`` ), change ``Quantity`` as applicable, and specify all of
              the trusted signers that you want to include in the updated distribution.

              - **Enabled** *(boolean) --* **[REQUIRED]**

                Specifies whether you want to require viewers to use signed URLs to access the files
                specified by ``PathPattern`` and ``TargetOriginId`` .

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of trusted signers for this cache behavior.

              - **Items** *(list) --*

                 **Optional** : A complex type that contains trusted signers for this cache
                 behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                - *(string) --*

            - **ViewerProtocolPolicy** *(string) --* **[REQUIRED]**

              The protocol that viewers can use to access the files in the origin specified by
              ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` . You
              can specify the following options:

              * ``allow-all`` : Viewers can use HTTP or HTTPS.

              * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront returns an
              HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL.
              The viewer then resubmits the request using the new URL.

              * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
              status code of 403 (Forbidden).

              For more information about requiring the HTTPS protocol, see `Using an HTTPS
              Connection to Access Your Objects
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
              in the *Amazon CloudFront Developer Guide* .

              .. note::

                The only way to guarantee that viewers retrieve an object that was fetched from the
                origin using HTTPS is never to use any other protocol to fetch the object. If you
                have recently changed from HTTP to HTTPS, we recommend that you clear your objects'
                cache because cached objects are protocol agnostic. That means that an edge location
                will return an object from the cache regardless of whether the current request
                protocol matches the protocol used previously. For more information, see `Managing
                How Long Content Stays in an Edge Cache (Expiration)
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                in the *Amazon CloudFront Developer Guide* .

            - **MinTTL** *(integer) --* **[REQUIRED]**

              The minimum amount of time that you want objects to stay in CloudFront caches before
              CloudFront forwards another request to your origin to determine whether the object has
              been updated. For more information, see `Managing How Long Content Stays in an Edge
              Cache (Expiration)
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
              in the *Amazon CloudFront Developer Guide* .

              You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
              headers to your origin (under ``Headers`` , if you specify ``1`` for ``Quantity`` and
              ``*`` for ``Name`` ).

            - **AllowedMethods** *(dict) --*

              A complex type that controls which HTTP methods CloudFront processes and forwards to
              your Amazon S3 bucket or your custom origin. There are three choices:

              * CloudFront forwards only ``GET`` and ``HEAD`` requests.

              * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

              * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
              requests.

              If you pick the third choice, you may need to restrict access to your Amazon S3 bucket
              or to your custom origin so users can't perform operations that you don't want them
              to. For example, you might not want users to have permissions to delete objects from
              your origin.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of HTTP methods that you want CloudFront to forward to your origin. Valid
                values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` , ``HEAD`` , and
                ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                ``DELETE`` requests).

              - **Items** *(list) --* **[REQUIRED]**

                A complex type that contains the HTTP methods that you want CloudFront to process
                and forward to your origin.

                - *(string) --*

              - **CachedMethods** *(dict) --*

                A complex type that controls whether CloudFront caches the response to requests
                using the specified HTTP methods. There are two choices:

                * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                If you pick the second choice for your Amazon S3 Origin, you may need to forward
                Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers
                for the responses to be cached correctly.

                - **Quantity** *(integer) --* **[REQUIRED]**

                  The number of HTTP methods for which you want CloudFront to cache responses. Valid
                  values are ``2`` (for caching responses to ``GET`` and ``HEAD`` requests) and
                  ``3`` (for caching responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests).

                - **Items** *(list) --* **[REQUIRED]**

                  A complex type that contains the HTTP methods that you want CloudFront to cache
                  responses to.

                  - *(string) --*

            - **SmoothStreaming** *(boolean) --*

              Indicates whether you want to distribute media files in the Microsoft Smooth Streaming
              format using the origin that is associated with this cache behavior. If so, specify
              ``true`` ; if not, specify ``false`` . If you specify ``true`` for ``SmoothStreaming``
              , you can still distribute other content using this cache behavior if the content
              matches the value of ``PathPattern`` .

            - **DefaultTTL** *(integer) --*

              The default amount of time that you want objects to stay in CloudFront caches before
              CloudFront forwards another request to your origin to determine whether the object has
              been updated. The value that you specify applies only when your origin does not add
              HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and
              ``Expires`` to objects. For more information, see `Managing How Long Content Stays in
              an Edge Cache (Expiration)
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **MaxTTL** *(integer) --*

              The maximum amount of time that you want objects to stay in CloudFront caches before
              CloudFront forwards another request to your origin to determine whether the object has
              been updated. The value that you specify applies only when your origin adds HTTP
              headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and
              ``Expires`` to objects. For more information, see `Managing How Long Content Stays in
              an Edge Cache (Expiration)
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **Compress** *(boolean) --*

              Whether you want CloudFront to automatically compress certain files for this cache
              behavior. If so, specify ``true`` ; if not, specify ``false`` . For more information,
              see `Serving Compressed Files
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **LambdaFunctionAssociations** *(dict) --*

              A complex type that contains zero or more Lambda function associations for a cache
              behavior.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of Lambda function associations for this cache behavior.

              - **Items** *(list) --*

                 **Optional** : A complex type that contains ``LambdaFunctionAssociation`` items for
                 this cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                - *(dict) --*

                  A complex type that contains a Lambda function association.

                  - **LambdaFunctionARN** *(string) --* **[REQUIRED]**

                    The ARN of the Lambda function. You must specify the ARN of a function version;
                    you can't specify a Lambda alias or $LATEST.

                  - **EventType** *(string) --* **[REQUIRED]**

                    Specifies the event type that triggers a Lambda function invocation. You can
                    specify the following values:

                    * ``viewer-request`` : The function executes when CloudFront receives a request
                    from a viewer and before it checks to see whether the requested object is in the
                    edge cache.

                    * ``origin-request`` : The function executes only when CloudFront forwards a
                    request to your origin. When the requested object is in the edge cache, the
                    function doesn't execute.

                    * ``origin-response`` : The function executes after CloudFront receives a
                    response from the origin and before it caches the object in the response. When
                    the requested object is in the edge cache, the function doesn't execute.

                    * ``viewer-response`` : The function executes before CloudFront returns the
                    requested object to the viewer. The function executes regardless of whether the
                    object was already in the edge cache. If the origin returns an HTTP status code
                    other than HTTP 200 (OK), the function doesn't execute.

                  - **IncludeBody** *(boolean) --*

                    A flag that allows a Lambda function to have read access to the body content.
                    For more information, see `Accessing the Request Body by Choosing the Include
                    Body Option
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                    in the Amazon CloudFront Developer Guide.

            - **FieldLevelEncryptionId** *(string) --*

              The value of ``ID`` for the field-level encryption configuration that you want
              CloudFront to use for encrypting specific fields of data for a cache behavior or for
              the default cache behavior in your distribution.

          - **CacheBehaviors** *(dict) --*

            A complex type that contains zero or more ``CacheBehavior`` elements.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of cache behaviors for this distribution.

            - **Items** *(list) --*

              Optional: A complex type that contains cache behaviors for this distribution. If
              ``Quantity`` is ``0`` , you can omit ``Items`` .

              - *(dict) --*

                A complex type that describes how CloudFront processes requests.

                You must create at least as many cache behaviors (including the default cache
                behavior) as you have origins if you want CloudFront to distribute objects from all
                of the origins. Each cache behavior specifies the one origin from which you want
                CloudFront to get objects. If you have two origins and only the default cache
                behavior, the default cache behavior will cause CloudFront to get objects from one
                of the origins, but the other origin is never used.

                For the current limit on the number of cache behaviors that you can add to a
                distribution, see `Amazon CloudFront Limits
                <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                in the *AWS General Reference* .

                If you don't want to specify any cache behaviors, include only an empty
                ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element, or
                CloudFront returns a ``MalformedXML`` error.

                To delete all cache behaviors in an existing distribution, update the distribution
                configuration and include only an empty ``CacheBehaviors`` element.

                To add, change, or remove one or more cache behaviors, update the distribution
                configuration and specify all of the cache behaviors that you want to include in the
                updated distribution.

                For more information about cache behaviors, see `Cache Behaviors
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                in the *Amazon CloudFront Developer Guide* .

                - **PathPattern** *(string) --* **[REQUIRED]**

                  The pattern (for example, ``images/*.jpg`` ) that specifies which requests to
                  apply the behavior to. When CloudFront receives a viewer request, the requested
                  path is compared with path patterns in the order in which cache behaviors are
                  listed in the distribution.

                  .. note::

                    You can optionally include a slash (``/`` ) at the beginning of the path
                    pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same with
                    or without the leading ``/`` .

                  The path pattern for the default cache behavior is ``*`` and cannot be changed. If
                  the request for an object does not match the path pattern for any cache behaviors,
                  CloudFront applies the behavior in the default cache behavior.

                  For more information, see `Path Pattern
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **TargetOriginId** *(string) --* **[REQUIRED]**

                  The value of ``ID`` for the origin that you want CloudFront to route requests to
                  when a request matches the path pattern either for a cache behavior or for the
                  default cache behavior in your distribution.

                - **ForwardedValues** *(dict) --* **[REQUIRED]**

                  A complex type that specifies how CloudFront handles query strings and cookies.

                  - **QueryString** *(boolean) --* **[REQUIRED]**

                    Indicates whether you want CloudFront to forward query strings to the origin
                    that is associated with this cache behavior and cache based on the query string
                    parameters. CloudFront behavior depends on the value of ``QueryString`` and on
                    the values that you specify for ``QueryStringCacheKeys`` , if any:

                    If you specify true for ``QueryString`` and you don't specify any values for
                    ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                    the origin and caches based on all query string parameters. Depending on how
                    many query string parameters and values you have, this can adversely affect
                    performance because CloudFront must forward more requests to the origin.

                    If you specify true for ``QueryString`` and you specify one or more values for
                    ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                    the origin, but it only caches based on the query string parameters that you
                    specify.

                    If you specify false for ``QueryString`` , CloudFront doesn't forward any query
                    string parameters to the origin, and doesn't cache based on query string
                    parameters.

                    For more information, see `Configuring CloudFront to Cache Based on Query String
                    Parameters
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Cookies** *(dict) --* **[REQUIRED]**

                    A complex type that specifies whether you want CloudFront to forward cookies to
                    the origin and, if so, which ones. For more information about forwarding cookies
                    to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Forward** *(string) --* **[REQUIRED]**

                      Specifies which cookies to forward to the origin for this cache behavior: all,
                      none, or the list of cookies specified in the ``WhitelistedNames`` complex
                      type.

                      Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                      requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                    - **WhitelistedNames** *(dict) --*

                      Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                      complex type that specifies how many different cookies you want CloudFront to
                      forward to the origin for this cache behavior and, if you want to forward
                      selected cookies, the names of those cookies.

                      If you specify ``all`` or none for the value of ``Forward`` , omit
                      ``WhitelistedNames`` . If you change the value of ``Forward`` from
                      ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                      element and its child elements, CloudFront deletes them automatically.

                      For the current limit on the number of cookie names that you can whitelist for
                      each cache behavior, see `CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Quantity** *(integer) --* **[REQUIRED]**

                        The number of different cookies that you want CloudFront to forward to the
                        origin for this cache behavior.

                      - **Items** *(list) --*

                        A complex type that contains one ``Name`` element for each cookie that you
                        want CloudFront to forward to the origin for this cache behavior.

                        - *(string) --*

                  - **Headers** *(dict) --*

                    A complex type that specifies the ``Headers`` , if any, that you want CloudFront
                    to forward to the origin for this cache behavior (whitelisted headers). For the
                    headers that you specify, CloudFront also caches separate versions of a
                    specified object that is based on the header values in viewer requests.

                    For more information, see `Caching Content Based on Request Headers
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of different headers that you want CloudFront to base caching on
                      for this cache behavior. You can configure each cache behavior in a web
                      distribution to do one of the following:

                      * **Forward all headers to your origin** : Specify ``1`` for ``Quantity`` and
                      ``*`` for ``Name`` .

                      .. warning::

                         CloudFront doesn't cache the objects that are associated with this cache
                         behavior. Instead, CloudFront sends every request to the origin.

                      * **Forward a whitelist of headers you specify** : Specify the number of
                      headers that you want CloudFront to base caching on. Then specify the header
                      names in ``Name`` elements. CloudFront caches your objects based on the values
                      in the specified headers.

                      * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                      omit ``Items`` . In this configuration, CloudFront doesn't cache based on the
                      values in the request headers.

                      Regardless of which option you choose, CloudFront forwards headers to your
                      origin based on whether the origin is an S3 bucket or a custom origin. See the
                      following documentation:

                      * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or Updates
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                      * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                    - **Items** *(list) --*

                      A list that contains one ``Name`` element for each header that you want
                      CloudFront to use for caching in this cache behavior. If ``Quantity`` is ``0``
                      , omit ``Items`` .

                      - *(string) --*

                  - **QueryStringCacheKeys** *(dict) --*

                    A complex type that contains information about the query string parameters that
                    you want CloudFront to use for caching for this cache behavior.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of ``whitelisted`` query string parameters for a cache behavior.

                    - **Items** *(list) --*

                      A list that contains the query string parameters that you want CloudFront to
                      use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you can
                      omit ``Items`` .

                      - *(string) --*

                - **TrustedSigners** *(dict) --* **[REQUIRED]**

                  A complex type that specifies the AWS accounts, if any, that you want to allow to
                  create signed URLs for private content.

                  If you want to require signed URLs in requests for objects in the target origin
                  that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                  ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                  For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you don't want to require signed URLs in requests for objects that match
                  ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                  Omit ``Items`` .

                  To add, change, or remove one or more trusted signers, change ``Enabled`` to
                  ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                  specify all of the trusted signers that you want to include in the updated
                  distribution.

                  - **Enabled** *(boolean) --* **[REQUIRED]**

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **ViewerProtocolPolicy** *(string) --* **[REQUIRED]**

                  The protocol that viewers can use to access the files in the origin specified by
                  ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                  You can specify the following options:

                  * ``allow-all`` : Viewers can use HTTP or HTTPS.

                  * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront returns
                  an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS
                  URL. The viewer then resubmits the request using the new URL.

                  * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                  status code of 403 (Forbidden).

                  For more information about requiring the HTTPS protocol, see `Using an HTTPS
                  Connection to Access Your Objects
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  .. note::

                    The only way to guarantee that viewers retrieve an object that was fetched from
                    the origin using HTTPS is never to use any other protocol to fetch the object.
                    If you have recently changed from HTTP to HTTPS, we recommend that you clear
                    your objects' cache because cached objects are protocol agnostic. That means
                    that an edge location will return an object from the cache regardless of whether
                    the current request protocol matches the protocol used previously. For more
                    information, see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **MinTTL** *(integer) --* **[REQUIRED]**

                  The minimum amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. For more information, see `Managing How Long Content
                  Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                  headers to your origin (under ``Headers`` , if you specify ``1`` for ``Quantity``
                  and ``*`` for ``Name`` ).

                - **AllowedMethods** *(dict) --*

                  A complex type that controls which HTTP methods CloudFront processes and forwards
                  to your Amazon S3 bucket or your custom origin. There are three choices:

                  * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                  * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                  * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                  requests.

                  If you pick the third choice, you may need to restrict access to your Amazon S3
                  bucket or to your custom origin so users can't perform operations that you don't
                  want them to. For example, you might not want users to have permissions to delete
                  objects from your origin.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of HTTP methods that you want CloudFront to forward to your origin.
                    Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                    ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                    PATCH, POST`` , and ``DELETE`` requests).

                  - **Items** *(list) --* **[REQUIRED]**

                    A complex type that contains the HTTP methods that you want CloudFront to
                    process and forward to your origin.

                    - *(string) --*

                  - **CachedMethods** *(dict) --*

                    A complex type that controls whether CloudFront caches the response to requests
                    using the specified HTTP methods. There are two choices:

                    * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                    * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    If you pick the second choice for your Amazon S3 Origin, you may need to forward
                    Access-Control-Request-Method, Access-Control-Request-Headers, and Origin
                    headers for the responses to be cached correctly.

                    - **Quantity** *(integer) --* **[REQUIRED]**

                      The number of HTTP methods for which you want CloudFront to cache responses.
                      Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                      requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                      ``OPTIONS`` requests).

                    - **Items** *(list) --* **[REQUIRED]**

                      A complex type that contains the HTTP methods that you want CloudFront to
                      cache responses to.

                      - *(string) --*

                - **SmoothStreaming** *(boolean) --*

                  Indicates whether you want to distribute media files in the Microsoft Smooth
                  Streaming format using the origin that is associated with this cache behavior. If
                  so, specify ``true`` ; if not, specify ``false`` . If you specify ``true`` for
                  ``SmoothStreaming`` , you can still distribute other content using this cache
                  behavior if the content matches the value of ``PathPattern`` .

                - **DefaultTTL** *(integer) --*

                  The default amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. The value that you specify applies only when your origin
                  does not add HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                  s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                  Long Content Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **MaxTTL** *(integer) --*

                  The maximum amount of time that you want objects to stay in CloudFront caches
                  before CloudFront forwards another request to your origin to determine whether the
                  object has been updated. The value that you specify applies only when your origin
                  adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control s-maxage`` ,
                  and ``Expires`` to objects. For more information, see `Managing How Long Content
                  Stays in an Edge Cache (Expiration)
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Compress** *(boolean) --*

                  Whether you want CloudFront to automatically compress certain files for this cache
                  behavior. If so, specify true; if not, specify false. For more information, see
                  `Serving Compressed Files
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **LambdaFunctionAssociations** *(dict) --*

                  A complex type that contains zero or more Lambda function associations for a cache
                  behavior.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of Lambda function associations for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains ``LambdaFunctionAssociation`` items
                     for this cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that contains a Lambda function association.

                      - **LambdaFunctionARN** *(string) --* **[REQUIRED]**

                        The ARN of the Lambda function. You must specify the ARN of a function
                        version; you can't specify a Lambda alias or $LATEST.

                      - **EventType** *(string) --* **[REQUIRED]**

                        Specifies the event type that triggers a Lambda function invocation. You can
                        specify the following values:

                        * ``viewer-request`` : The function executes when CloudFront receives a
                        request from a viewer and before it checks to see whether the requested
                        object is in the edge cache.

                        * ``origin-request`` : The function executes only when CloudFront forwards a
                        request to your origin. When the requested object is in the edge cache, the
                        function doesn't execute.

                        * ``origin-response`` : The function executes after CloudFront receives a
                        response from the origin and before it caches the object in the response.
                        When the requested object is in the edge cache, the function doesn't
                        execute.

                        * ``viewer-response`` : The function executes before CloudFront returns the
                        requested object to the viewer. The function executes regardless of whether
                        the object was already in the edge cache. If the origin returns an HTTP
                        status code other than HTTP 200 (OK), the function doesn't execute.

                      - **IncludeBody** *(boolean) --*

                        A flag that allows a Lambda function to have read access to the body
                        content. For more information, see `Accessing the Request Body by Choosing
                        the Include Body Option
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                        in the Amazon CloudFront Developer Guide.

                - **FieldLevelEncryptionId** *(string) --*

                  The value of ``ID`` for the field-level encryption configuration that you want
                  CloudFront to use for encrypting specific fields of data for a cache behavior or
                  for the default cache behavior in your distribution.

          - **CustomErrorResponses** *(dict) --*

            A complex type that controls the following:

            * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom
            error messages before returning the response to the viewer.

            * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

            For more information about custom error pages, see `Customizing Error Responses
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of HTTP status codes for which you want to specify a custom error page
              and/or a caching duration. If ``Quantity`` is ``0`` , you can omit ``Items`` .

            - **Items** *(list) --*

              A complex type that contains a ``CustomErrorResponse`` element for each HTTP status
              code for which you want to specify a custom error page and/or a caching duration.

              - *(dict) --*

                A complex type that controls:

                * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom
                error messages before returning the response to the viewer.

                * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                For more information about custom error pages, see `Customizing Error Responses
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **ErrorCode** *(integer) --* **[REQUIRED]**

                  The HTTP status code for which you want to specify a custom error page and/or a
                  caching duration.

                - **ResponsePagePath** *(string) --*

                  The path to the custom error page that you want CloudFront to return to a viewer
                  when your origin returns the HTTP status code specified by ``ErrorCode`` , for
                  example, ``/4xx-errors/403-forbidden.html`` . If you want to store your objects
                  and your custom error pages in different locations, your distribution must include
                  a cache behavior for which the following is true:

                  * The value of ``PathPattern`` matches the path to your custom error messages. For
                  example, suppose you saved custom error pages for 4xx errors in an Amazon S3
                  bucket in a directory named ``/4xx-errors`` . Your distribution must include a
                  cache behavior for which the path pattern routes requests for your custom error
                  pages to that location, for example, ``/4xx-errors/*`` .

                  * The value of ``TargetOriginId`` specifies the value of the ``ID`` element for
                  the origin that contains your custom error pages.

                  If you specify a value for ``ResponsePagePath`` , you must also specify a value
                  for ``ResponseCode`` . If you don't want to specify a value, include an empty
                  element, ``<ResponsePagePath>`` , in the XML document.

                  We recommend that you store custom error pages in an Amazon S3 bucket. If you
                  store custom error pages on an HTTP server and the server starts to return 5xx
                  errors, CloudFront can't get the files that you want to return to viewers because
                  the origin server is unavailable.

                - **ResponseCode** *(string) --*

                  The HTTP status code that you want CloudFront to return to the viewer along with
                  the custom error page. There are a variety of reasons that you might want
                  CloudFront to return a status code different from the status code that your origin
                  returned to CloudFront, for example:

                  * Some Internet devices (some firewalls and corporate proxies, for example)
                  intercept HTTP 4xx and 5xx and prevent the response from being returned to the
                  viewer. If you substitute ``200`` , the response typically won't be intercepted.

                  * If you don't care about distinguishing among different client errors or server
                  errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for all 4xx or
                  5xx errors.

                  * You might want to return a ``200`` status code (OK) and static website so your
                  customers don't know that your website is down.

                  If you specify a value for ``ResponseCode`` , you must also specify a value for
                  ``ResponsePagePath`` . If you don't want to specify a value, include an empty
                  element, ``<ResponseCode>`` , in the XML document.

                - **ErrorCachingMinTTL** *(integer) --*

                  The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP
                  status code specified in ``ErrorCode`` . When this time period has elapsed,
                  CloudFront queries your origin to see whether the problem that caused the error
                  has been resolved and the requested object is now available.

                  If you don't want to specify a value, include an empty element,
                  ``<ErrorCachingMinTTL>`` , in the XML document.

                  For more information, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

          - **Comment** *(string) --* **[REQUIRED]**

            Any comments you want to include about the distribution.

            If you don't want to specify a comment, include an empty ``Comment`` element.

            To delete an existing comment, update the distribution configuration and include an
            empty ``Comment`` element.

            To add or change a comment, update the distribution configuration and specify the new
            comment.

          - **Logging** *(dict) --*

            A complex type that controls whether access logs are written for the distribution.

            For more information about logging, see `Access Logs
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If
              you don't want to enable logging when you create a distribution or if you want to
              disable logging for an existing distribution, specify ``false`` for ``Enabled`` , and
              specify empty ``Bucket`` and ``Prefix`` elements. If you specify ``false`` for
              ``Enabled`` but you specify values for ``Bucket`` , ``prefix`` , and
              ``IncludeCookies`` , the values are automatically deleted.

            - **IncludeCookies** *(boolean) --* **[REQUIRED]**

              Specifies whether you want CloudFront to include cookies in access logs, specify
              ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs, CloudFront
              logs all cookies regardless of how you configure the cache behaviors for this
              distribution. If you don't want to include cookies when you create a distribution or
              if you want to disable include cookies for an existing distribution, specify ``false``
              for ``IncludeCookies`` .

            - **Bucket** *(string) --* **[REQUIRED]**

              The Amazon S3 bucket to store the access logs in, for example,
              ``myawslogbucket.s3.amazonaws.com`` .

            - **Prefix** *(string) --* **[REQUIRED]**

              An optional string that you want CloudFront to prefix to the access log ``filenames``
              for this distribution, for example, ``myprefix/`` . If you want to enable logging, but
              you don't want to specify a prefix, you still must include an empty ``Prefix`` element
              in the ``Logging`` element.

          - **PriceClass** *(string) --*

            The price class that corresponds with the maximum price that you want to pay for
            CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to requests
            for your objects from all CloudFront edge locations.

            If you specify a price class other than ``PriceClass_All`` , CloudFront serves your
            objects from the CloudFront edge location that has the lowest latency among the edge
            locations in your price class. Viewers who are in or near regions that are excluded from
            your specified price class may encounter slower performance.

            For more information about price classes, see `Choosing the Price Class for a CloudFront
            Distribution
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
            in the *Amazon CloudFront Developer Guide* . For information about CloudFront pricing,
            including how price classes (such as Price Class 100) map to CloudFront regions, see
            `Amazon CloudFront Pricing <http://aws.amazon.com/cloudfront/pricing/>`__ . For price
            class information, scroll down to see the table at the bottom of the page.

          - **Enabled** *(boolean) --* **[REQUIRED]**

            From this field, you can enable or disable the selected distribution.

          - **ViewerCertificate** *(dict) --*

            A complex type that specifies whether you want viewers to use HTTP or HTTPS to request
            your objects, whether you're using an alternate domain name with HTTPS, and if so, if
            you're using AWS Certificate Manager (ACM) or a third-party certificate authority.

            - **CloudFrontDefaultCertificate** *(boolean) --*

              If you're using the CloudFront domain name for your distribution, such as
              ``d111111abcdef8.cloudfront.net`` , specify the following value:

              * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

            - **IAMCertificateId** *(string) --*

              If you want viewers to use HTTPS to request your objects and you're using an alternate
              domain name, you must choose the type of certificate that you want to use. Specify the
              following value if you purchased your certificate from a third-party certificate
              authority:

              * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
              certificate ID* `` is the ID that IAM returned when you added the certificate to the
              IAM certificate store.

              If you specify ``IAMCertificateId`` , you must also specify a value for
              ``SSLSupportMethod`` .

            - **ACMCertificateArn** *(string) --*

              If you want viewers to use HTTPS to request your objects and you're using an alternate
              domain name, you must choose the type of certificate that you want to use. Specify the
              following value if ACM provided your certificate:

              * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>`` where
              `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS certificate
              that you want to use for this distribution.

              If you specify ``ACMCertificateArn`` , you must also specify a value for
              ``SSLSupportMethod`` .

            - **SSLSupportMethod** *(string) --*

              If you specify a value for `ACMCertificateArn
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
              or for `IAMCertificateId
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
              , you must also specify how you want CloudFront to serve HTTPS requests: using a
              method that works for browsers and clients released after 2010 or one that works for
              all clients.

              * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that support
              Server Name Indication (SNI). All modern browsers support SNI, but there are a few
              that don't. For a current list of the browsers that support SNI, see the `Wikipedia
              entry Server Name Indication <http://en.wikipedia.org/wiki/Server_Name_Indication>`__
              . To learn about options to explore if you have users with browsers that don't include
              SNI support, see `Choosing How CloudFront Serves HTTPS Requests
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
              in the *Amazon CloudFront Developer Guide* .

              * ``vip`` : CloudFront uses dedicated IP addresses for your content and can respond to
              HTTPS requests from any viewer. However, there are additional monthly charges. For
              details, including specific pricing information, see `Custom SSL options for Amazon
              CloudFront <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS
              marketing site.

              Don't specify a value for ``SSLSupportMethod`` if you specified
              ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

              For more information, see `Choosing How CloudFront Serves HTTPS Requests
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
              in the *Amazon CloudFront Developer Guide* .

            - **MinimumProtocolVersion** *(string) --*

              Specify the security policy that you want CloudFront to use for HTTPS connections. A
              security policy determines two settings:

              * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

              * The cipher that CloudFront uses to encrypt the content that it returns to viewers

              .. note::

                On the CloudFront console, this setting is called **Security policy** .

              We recommend that you specify ``TLSv1.1_2016`` unless your users are using browsers or
              devices that do not support TLSv1.1 or later.

              When both of the following are true, you must specify ``TLSv1`` or later for the
              security policy:

              * You're using a custom certificate: you specified a value for ``ACMCertificateArn``
              or for ``IAMCertificateId``

              * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

              If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
              automatically sets the security policy to ``TLSv1`` regardless of the value that you
              specify for ``MinimumProtocolVersion`` .

              For information about the relationship between the security policy that you choose and
              the protocols and ciphers that CloudFront uses to communicate with viewers, see
              `Supported SSL/TLS Protocols and Ciphers for Communication Between Viewers and
              CloudFront
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
              in the *Amazon CloudFront Developer Guide* .

            - **Certificate** *(string) --*

              This field is no longer used. Use one of the following fields instead:

              * `ACMCertificateArn
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

              * `IAMCertificateId
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

              * `CloudFrontDefaultCertificate
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

            - **CertificateSource** *(string) --*

              This field is no longer used. Use one of the following fields instead:

              * `ACMCertificateArn
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

              * `IAMCertificateId
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

              * `CloudFrontDefaultCertificate
              <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

          - **Restrictions** *(dict) --*

            A complex type that identifies ways in which you want to restrict distribution of your
            content.

            - **GeoRestriction** *(dict) --* **[REQUIRED]**

              A complex type that controls the countries in which your content is distributed.
              CloudFront determines the location of your users using ``MaxMind`` GeoIP databases.

              - **RestrictionType** *(string) --* **[REQUIRED]**

                The method that you want to use to restrict distribution of your content by country:

                * ``none`` : No geo restriction is enabled, meaning access to content is not
                restricted by client geo location.

                * ``blacklist`` : The ``Location`` elements specify the countries in which you don't
                want CloudFront to distribute your content.

                * ``whitelist`` : The ``Location`` elements specify the countries in which you want
                CloudFront to distribute your content.

              - **Quantity** *(integer) --* **[REQUIRED]**

                When geo restriction is ``enabled`` , this is the number of countries in your
                ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled, ``Quantity`` is
                ``0`` , and you can omit ``Items`` .

              - **Items** *(list) --*

                A complex type that contains a ``Location`` element for each country in which you
                want CloudFront either to distribute your content (``whitelist`` ) or not distribute
                your content (``blacklist`` ).

                The ``Location`` element is a two-letter, uppercase country code for a country that
                you want to include in your ``blacklist`` or ``whitelist`` . Include one
                ``Location`` element for each country.

                CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list
                of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the
                *International Organization for Standardization* website. You can also refer to the
                country list on the CloudFront console, which includes both country names and codes.

                - *(string) --*

          - **WebACLId** *(string) --*

            A unique identifier that specifies the AWS WAF web ACL, if any, to associate with this
            distribution.

            AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests
            that are forwarded to CloudFront, and lets you control access to your content. Based on
            conditions that you specify, such as the IP addresses that requests originate from or
            the values of query strings, CloudFront responds to requests either with the requested
            content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront
            to return a custom error page when a request is blocked. For more information about AWS
            WAF, see the `AWS WAF Developer Guide
            <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

          - **HttpVersion** *(string) --*

            (Optional) Specify the maximum HTTP version that you want viewers to use to communicate
            with CloudFront. The default value for new web distributions is http2. Viewers that
            don't support HTTP/2 automatically use an earlier HTTP version.

            For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and
            must support Server Name Identification (SNI).

            In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces
            latency. You can improve performance by optimizing for HTTP/2. For more information, do
            an Internet search for "http/2 optimization."

          - **IsIPV6Enabled** *(boolean) --*

            If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your
            distribution, specify ``true`` . If you specify ``false`` , CloudFront responds to IPv6
            DNS requests with the DNS response code ``NOERROR`` and with no IP addresses. This
            allows viewers to submit a second request, for an IPv4 address for your distribution.

            In general, you should enable IPv6 if you have users on IPv6 networks who want to access
            your content. However, if you're using signed URLs or signed cookies to restrict access
            to your content, and if you're using a custom policy that includes the ``IpAddress``
            parameter to restrict the IP addresses that can access your content, don't enable IPv6.
            If you want to restrict access to some content by IP address and not restrict access to
            other content (or restrict access but not by IP address), you can create two
            distributions. For more information, see `Creating a Signed URL Using a Custom Policy
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
            in the *Amazon CloudFront Developer Guide* .

            If you're using an Amazon Route 53 alias resource record set to route traffic to your
            CloudFront distribution, you need to create a second alias resource record set when both
            of the following are true:

            * You enable IPv6 for the distribution

            * You're using alternate domain names in the URLs for your objects

            For more information, see `Routing Traffic to an Amazon CloudFront Web Distribution by
            Using Your Domain Name
            <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
            in the *Amazon Route 53 Developer Guide* .

            If you created a CNAME resource record set, either with Amazon Route 53 or with another
            DNS service, you don't need to make any changes. A CNAME record will route traffic to
            your distribution regardless of the IP address format of the viewer request.

        :type Id: string
        :param Id: **[REQUIRED]**

          The distribution's id.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the distribution's
          configuration. For example: ``E2QWRUHAPOMQZL`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'Distribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'InProgressInvalidationBatches': 123,
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'DistributionConfig': {
                        'CallerReference': 'string',
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'DefaultRootObject': 'string',
                        'Origins': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'DomainName': 'string',
                                    'OriginPath': 'string',
                                    'CustomHeaders': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'HeaderName': 'string',
                                                'HeaderValue': 'string'
                                            },
                                        ]
                                    },
                                    'S3OriginConfig': {
                                        'OriginAccessIdentity': 'string'
                                    },
                                    'CustomOriginConfig': {
                                        'HTTPPort': 123,
                                        'HTTPSPort': 123,
                                        'OriginProtocolPolicy':
                                        'http-only'|'match-viewer'
                                        |'https-only',
                                        'OriginSslProtocols': {
                                            'Quantity': 123,
                                            'Items': [
                                                'SSLv3'|'TLSv1'|'TLSv1.1'|'TLSv1.2',
                                            ]
                                        },
                                        'OriginReadTimeout': 123,
                                        'OriginKeepaliveTimeout': 123
                                    }
                                },
                            ]
                        },
                        'OriginGroups': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'Id': 'string',
                                    'FailoverCriteria': {
                                        'StatusCodes': {
                                            'Quantity': 123,
                                            'Items': [
                                                123,
                                            ]
                                        }
                                    },
                                    'Members': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'OriginId': 'string'
                                            },
                                        ]
                                    }
                                },
                            ]
                        },
                        'DefaultCacheBehavior': {
                            'TargetOriginId': 'string',
                            'ForwardedValues': {
                                'QueryString': True|False,
                                'Cookies': {
                                    'Forward': 'none'|'whitelist'|'all',
                                    'WhitelistedNames': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                                'Headers': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                },
                                'QueryStringCacheKeys': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                            'TrustedSigners': {
                                'Enabled': True|False,
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            },
                            'ViewerProtocolPolicy': 'allow-all'|'https-only'|'redirect-to-https',
                            'MinTTL': 123,
                            'AllowedMethods': {
                                'Quantity': 123,
                                'Items': [
                                    'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                ],
                                'CachedMethods': {
                                    'Quantity': 123,
                                    'Items': [
                                        'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                    ]
                                }
                            },
                            'SmoothStreaming': True|False,
                            'DefaultTTL': 123,
                            'MaxTTL': 123,
                            'Compress': True|False,
                            'LambdaFunctionAssociations': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'LambdaFunctionARN': 'string',
                                        'EventType':
                                        'viewer-request'
                                        |'viewer-response'
                                        |'origin-request'
                                        |'origin-response',
                                        'IncludeBody': True|False
                                    },
                                ]
                            },
                            'FieldLevelEncryptionId': 'string'
                        },
                        'CacheBehaviors': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PathPattern': 'string',
                                    'TargetOriginId': 'string',
                                    'ForwardedValues': {
                                        'QueryString': True|False,
                                        'Cookies': {
                                            'Forward': 'none'|'whitelist'|'all',
                                            'WhitelistedNames': {
                                                'Quantity': 123,
                                                'Items': [
                                                    'string',
                                                ]
                                            }
                                        },
                                        'Headers': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        },
                                        'QueryStringCacheKeys': {
                                            'Quantity': 123,
                                            'Items': [
                                                'string',
                                            ]
                                        }
                                    },
                                    'TrustedSigners': {
                                        'Enabled': True|False,
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    },
                                    'ViewerProtocolPolicy':
                                    'allow-all'|'https-only'
                                    |'redirect-to-https',
                                    'MinTTL': 123,
                                    'AllowedMethods': {
                                        'Quantity': 123,
                                        'Items': [
                                            'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'|'DELETE',
                                        ],
                                        'CachedMethods': {
                                            'Quantity': 123,
                                            'Items': [
                                                'GET'|'HEAD'|'POST'|'PUT'|'PATCH'|'OPTIONS'
                                                |'DELETE',
                                            ]
                                        }
                                    },
                                    'SmoothStreaming': True|False,
                                    'DefaultTTL': 123,
                                    'MaxTTL': 123,
                                    'Compress': True|False,
                                    'LambdaFunctionAssociations': {
                                        'Quantity': 123,
                                        'Items': [
                                            {
                                                'LambdaFunctionARN': 'string',
                                                'EventType':
                                                'viewer-request'|'viewer-response'|'origin-request'
                                                |'origin-response',
                                                'IncludeBody': True|False
                                            },
                                        ]
                                    },
                                    'FieldLevelEncryptionId': 'string'
                                },
                            ]
                        },
                        'CustomErrorResponses': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'ErrorCode': 123,
                                    'ResponsePagePath': 'string',
                                    'ResponseCode': 'string',
                                    'ErrorCachingMinTTL': 123
                                },
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'IncludeCookies': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False,
                        'ViewerCertificate': {
                            'CloudFrontDefaultCertificate': True|False,
                            'IAMCertificateId': 'string',
                            'ACMCertificateArn': 'string',
                            'SSLSupportMethod': 'sni-only'|'vip',
                            'MinimumProtocolVersion':
                            'SSLv3'|'TLSv1'|'TLSv1_2016'|'TLSv1.1_2016'
                            |'TLSv1.2_2018',
                            'Certificate': 'string',
                            'CertificateSource': 'cloudfront'|'iam'|'acm'
                        },
                        'Restrictions': {
                            'GeoRestriction': {
                                'RestrictionType': 'blacklist'|'whitelist'|'none',
                                'Quantity': 123,
                                'Items': [
                                    'string',
                                ]
                            }
                        },
                        'WebACLId': 'string',
                        'HttpVersion': 'http1.1'|'http2',
                        'IsIPV6Enabled': True|False
                    },
                    'AliasICPRecordals': [
                        {
                            'CNAME': 'string',
                            'ICPRecordalStatus': 'APPROVED'|'SUSPENDED'|'PENDING'
                        },
                    ]
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **Distribution** *(dict) --*

              The distribution's information.

              - **Id** *(string) --*

                The identifier for the distribution. For example: ``EDFDVBD632BHDS5`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                This response element indicates the current status of the distribution. When the
                status is ``Deployed`` , the distribution's information is fully propagated to all
                CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time the distribution was last modified.

              - **InProgressInvalidationBatches** *(integer) --*

                The number of invalidation batches currently in progress.

              - **DomainName** *(string) --*

                The domain name corresponding to the distribution, for example,
                ``d111111abcdef8.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                CloudFront automatically adds this element to the response only if you've set up the
                distribution to serve private content with signed URLs. The element lists the key
                pair IDs that CloudFront is aware of for each trusted signer. The ``Signer`` child
                element lists the AWS account number of the trusted signer (or an empty ``Self``
                element if the signer is you). The ``Signer`` element also includes the IDs of any
                active key pairs associated with the trusted signer's AWS account. If no
                ``KeyPairId`` element appears for a ``Signer`` , that signer can't create working
                signed URLs.

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **DistributionConfig** *(dict) --*

                The current configuration information for the distribution. Send a ``GET`` request
                to the ``/*CloudFront API version* /distribution ID/config`` resource.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``DistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **DefaultRootObject** *(string) --*

                  The object that you want CloudFront to request from your origin (for example,
                  ``index.html`` ) when a viewer requests the root URL for your distribution
                  (``http://www.example.com`` ) instead of an object in your distribution
                  (``http://www.example.com/product-description.html`` ). Specifying a default root
                  object avoids exposing the contents of your distribution.

                  Specify only the object name, for example, ``index.html`` . Don't add a ``/``
                  before the object name.

                  If you don't want to specify a default root object when you create a distribution,
                  include an empty ``DefaultRootObject`` element.

                  To delete the default root object from an existing distribution, update the
                  distribution configuration and include an empty ``DefaultRootObject`` element.

                  To replace the default root object, update the distribution configuration and
                  specify the new object.

                  For more information about the default root object, see `Creating a Default Root
                  Object
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                - **Origins** *(dict) --*

                  A complex type that contains information about origins for this distribution.

                  - **Quantity** *(integer) --*

                    The number of origins or origin groups for this distribution.

                  - **Items** *(list) --*

                    A complex type that contains origins or origin groups for this distribution.

                    - *(dict) --*

                      A complex type that describes the Amazon S3 bucket, HTTP server (for example,
                      a web server), Amazon MediaStore, or other server from which CloudFront gets
                      your files. This can also be an origin group, if you've created an origin
                      group. You must specify at least one origin or origin group.

                      For the current limit on the number of origins or origin groups that you can
                      specify for a distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      - **Id** *(string) --*

                        A unique identifier for the origin or origin group. The value of ``Id`` must
                        be unique within the distribution.

                        When you specify the value of ``TargetOriginId`` for the default cache
                        behavior or for another cache behavior, you indicate the origin to which you
                        want the cache behavior to route requests by specifying the value of the
                        ``Id`` element for that origin. When a request matches the path pattern for
                        that cache behavior, CloudFront routes the request to the specified origin.
                        For more information, see `Cache Behavior Settings
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **DomainName** *(string) --*

                         **Amazon S3 origins** : The DNS name of the Amazon S3 bucket from which you
                         want CloudFront to get objects for this origin, for example,
                         ``myawsbucket.s3.amazonaws.com`` . If you set up your bucket to be
                         configured as a website endpoint, enter the Amazon S3 static website
                         hosting endpoint for the bucket.

                        For more information about specifying this value for different types of
                        origins, see `Origin Domain Name
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName>`__
                        in the *Amazon CloudFront Developer Guide* .

                        Constraints for Amazon S3 origins:

                        * If you configured Amazon S3 Transfer Acceleration for your bucket, don't
                        specify the ``s3-accelerate`` endpoint for ``DomainName`` .

                        * The bucket name must be between 3 and 63 characters long (inclusive).

                        * The bucket name must contain only lowercase characters, numbers, periods,
                        underscores, and dashes.

                        * The bucket name must not contain adjacent periods.

                         **Custom Origins** : The DNS domain name for the HTTP server from which you
                         want CloudFront to get objects for this origin, for example,
                         ``www.example.com`` .

                        Constraints for custom origins:

                        * ``DomainName`` must be a valid DNS name that contains only a-z, A-Z, 0-9,
                        dot (.), hyphen (-), or underscore (_) characters.

                        * The name cannot exceed 128 characters.

                      - **OriginPath** *(string) --*

                        An optional element that causes CloudFront to request your content from a
                        directory in your Amazon S3 bucket or your custom origin. When you include
                        the ``OriginPath`` element, specify the directory name, beginning with a
                        ``/`` . CloudFront appends the directory name to the value of ``DomainName``
                        , for example, ``example.com/production`` . Do not include a ``/`` at the
                        end of the directory name.

                        For example, suppose you've specified the following values for your
                        distribution:

                        * ``DomainName`` : An Amazon S3 bucket named ``myawsbucket`` .

                        * ``OriginPath`` : ``/production``

                        * ``CNAME`` : ``example.com``

                        When a user enters ``example.com/index.html`` in a browser, CloudFront sends
                        a request to Amazon S3 for ``myawsbucket/production/index.html`` .

                        When a user enters ``example.com/acme/index.html`` in a browser, CloudFront
                        sends a request to Amazon S3 for ``myawsbucket/production/acme/index.html``
                        .

                      - **CustomHeaders** *(dict) --*

                        A complex type that contains names and values for the custom headers that
                        you want.

                        - **Quantity** *(integer) --*

                          The number of custom headers, if any, for this distribution.

                        - **Items** *(list) --*

                           **Optional** : A list that contains one ``OriginCustomHeader`` element
                           for each custom header that you want CloudFront to forward to the origin.
                           If Quantity is ``0`` , omit ``Items`` .

                          - *(dict) --*

                            A complex type that contains ``HeaderName`` and ``HeaderValue``
                            elements, if any, for this distribution.

                            - **HeaderName** *(string) --*

                              The name of a header that you want CloudFront to forward to your
                              origin. For more information, see `Forwarding Custom Headers to Your
                              Origin (Web Distributions Only)
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html>`__
                              in the *Amazon CloudFront Developer Guide* .

                            - **HeaderValue** *(string) --*

                              The value for the header that you specified in the ``HeaderName``
                              field.

                      - **S3OriginConfig** *(dict) --*

                        A complex type that contains information about the Amazon S3 origin. If the
                        origin is a custom origin, use the ``CustomOriginConfig`` element instead.

                        - **OriginAccessIdentity** *(string) --*

                          The CloudFront origin access identity to associate with the origin. Use an
                          origin access identity to configure the origin so that viewers can *only*
                          access objects in an Amazon S3 bucket through CloudFront. The format of
                          the value is:

                          origin-access-identity/cloudfront/*ID-of-origin-access-identity*

                          where `` *ID-of-origin-access-identity* `` is the value that CloudFront
                          returned in the ``ID`` element when you created the origin access
                          identity.

                          If you want viewers to be able to access objects using either the
                          CloudFront URL or the Amazon S3 URL, specify an empty
                          ``OriginAccessIdentity`` element.

                          To delete the origin access identity from an existing distribution, update
                          the distribution configuration and include an empty
                          ``OriginAccessIdentity`` element.

                          To replace the origin access identity, update the distribution
                          configuration and specify the new origin access identity.

                          For more information about the origin access identity, see `Serving
                          Private Content through CloudFront
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **CustomOriginConfig** *(dict) --*

                        A complex type that contains information about a custom origin. If the
                        origin is an Amazon S3 bucket, use the ``S3OriginConfig`` element instead.

                        - **HTTPPort** *(integer) --*

                          The HTTP port the custom origin listens on.

                        - **HTTPSPort** *(integer) --*

                          The HTTPS port the custom origin listens on.

                        - **OriginProtocolPolicy** *(string) --*

                          The origin protocol policy to apply to your origin.

                        - **OriginSslProtocols** *(dict) --*

                          The SSL/TLS protocols that you want CloudFront to use when communicating
                          with your origin over HTTPS.

                          - **Quantity** *(integer) --*

                            The number of SSL/TLS protocols that you want to allow CloudFront to use
                            when establishing an HTTPS connection with this origin.

                          - **Items** *(list) --*

                            A list that contains allowed SSL/TLS protocols for this distribution.

                            - *(string) --*

                        - **OriginReadTimeout** *(integer) --*

                          You can create a custom origin read timeout. All timeout units are in
                          seconds. The default origin read timeout is 30 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 4 seconds; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                        - **OriginKeepaliveTimeout** *(integer) --*

                          You can create a custom keep-alive timeout. All timeout units are in
                          seconds. The default keep-alive timeout is 5 seconds, but you can
                          configure custom timeout lengths using the CloudFront API. The minimum
                          timeout length is 1 second; the maximum is 60 seconds.

                          If you need to increase the maximum time limit, contact the `AWS Support
                          Center <https://console.aws.amazon.com/support/home#/>`__ .

                - **OriginGroups** *(dict) --*

                  A complex type that contains information about origin groups for this
                  distribution.

                  - **Quantity** *(integer) --*

                    The number of origin groups.

                  - **Items** *(list) --*

                    The items (origin groups) in a distribution.

                    - *(dict) --*

                      An origin group includes two origins (a primary origin and a second origin to
                      failover to) and a failover criteria that you specify. You create an origin
                      group to support origin failover in CloudFront. When you create or update a
                      distribution, you can specifiy the origin group instead of a single origin,
                      and CloudFront will failover from the primary origin to the second origin
                      under the failover conditions that you've chosen.

                      - **Id** *(string) --*

                        The origin group's ID.

                      - **FailoverCriteria** *(dict) --*

                        A complex type that contains information about the failover criteria for an
                        origin group.

                        - **StatusCodes** *(dict) --*

                          The status codes that, when returned from the primary origin, will trigger
                          CloudFront to failover to the second origin.

                          - **Quantity** *(integer) --*

                            The number of status codes.

                          - **Items** *(list) --*

                            The items (status codes) for an origin group.

                            - *(integer) --*

                      - **Members** *(dict) --*

                        A complex type that contains information about the origins in an origin
                        group.

                        - **Quantity** *(integer) --*

                          The number of origins in an origin group.

                        - **Items** *(list) --*

                          Items (origins) in an origin group.

                          - *(dict) --*

                            An origin in an origin group.

                            - **OriginId** *(string) --*

                              The ID for an origin in an origin group.

                - **DefaultCacheBehavior** *(dict) --*

                  A complex type that describes the default cache behavior if you don't specify a
                  ``CacheBehavior`` element or if files don't match any of the values of
                  ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default
                  cache behavior.

                  - **TargetOriginId** *(string) --*

                    The value of ``ID`` for the origin that you want CloudFront to route requests to
                    when a request matches the path pattern either for a cache behavior or for the
                    default cache behavior in your distribution.

                  - **ForwardedValues** *(dict) --*

                    A complex type that specifies how CloudFront handles query strings and cookies.

                    - **QueryString** *(boolean) --*

                      Indicates whether you want CloudFront to forward query strings to the origin
                      that is associated with this cache behavior and cache based on the query
                      string parameters. CloudFront behavior depends on the value of ``QueryString``
                      and on the values that you specify for ``QueryStringCacheKeys`` , if any:

                      If you specify true for ``QueryString`` and you don't specify any values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin and caches based on all query string parameters. Depending on how
                      many query string parameters and values you have, this can adversely affect
                      performance because CloudFront must forward more requests to the origin.

                      If you specify true for ``QueryString`` and you specify one or more values for
                      ``QueryStringCacheKeys`` , CloudFront forwards all query string parameters to
                      the origin, but it only caches based on the query string parameters that you
                      specify.

                      If you specify false for ``QueryString`` , CloudFront doesn't forward any
                      query string parameters to the origin, and doesn't cache based on query string
                      parameters.

                      For more information, see `Configuring CloudFront to Cache Based on Query
                      String Parameters
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                    - **Cookies** *(dict) --*

                      A complex type that specifies whether you want CloudFront to forward cookies
                      to the origin and, if so, which ones. For more information about forwarding
                      cookies to the origin, see `How CloudFront Forwards, Caches, and Logs Cookies
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Forward** *(string) --*

                        Specifies which cookies to forward to the origin for this cache behavior:
                        all, none, or the list of cookies specified in the ``WhitelistedNames``
                        complex type.

                        Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                        requests to an Amazon S3 origin, specify none for the ``Forward`` element.

                      - **WhitelistedNames** *(dict) --*

                        Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                        complex type that specifies how many different cookies you want CloudFront
                        to forward to the origin for this cache behavior and, if you want to forward
                        selected cookies, the names of those cookies.

                        If you specify ``all`` or none for the value of ``Forward`` , omit
                        ``WhitelistedNames`` . If you change the value of ``Forward`` from
                        ``whitelist`` to all or none and you don't delete the ``WhitelistedNames``
                        element and its child elements, CloudFront deletes them automatically.

                        For the current limit on the number of cookie names that you can whitelist
                        for each cache behavior, see `CloudFront Limits
                        <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                        in the *AWS General Reference* .

                        - **Quantity** *(integer) --*

                          The number of different cookies that you want CloudFront to forward to the
                          origin for this cache behavior.

                        - **Items** *(list) --*

                          A complex type that contains one ``Name`` element for each cookie that you
                          want CloudFront to forward to the origin for this cache behavior.

                          - *(string) --*

                    - **Headers** *(dict) --*

                      A complex type that specifies the ``Headers`` , if any, that you want
                      CloudFront to forward to the origin for this cache behavior (whitelisted
                      headers). For the headers that you specify, CloudFront also caches separate
                      versions of a specified object that is based on the header values in viewer
                      requests.

                      For more information, see `Caching Content Based on Request Headers
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **Quantity** *(integer) --*

                        The number of different headers that you want CloudFront to base caching on
                        for this cache behavior. You can configure each cache behavior in a web
                        distribution to do one of the following:

                        * **Forward all headers to your origin** : Specify ``1`` for ``Quantity``
                        and ``*`` for ``Name`` .

                        .. warning::

                           CloudFront doesn't cache the objects that are associated with this cache
                           behavior. Instead, CloudFront sends every request to the origin.

                        * **Forward a whitelist of headers you specify** : Specify the number of
                        headers that you want CloudFront to base caching on. Then specify the header
                        names in ``Name`` elements. CloudFront caches your objects based on the
                        values in the specified headers.

                        * **Forward only the default headers** : Specify ``0`` for ``Quantity`` and
                        omit ``Items`` . In this configuration, CloudFront doesn't cache based on
                        the values in the request headers.

                        Regardless of which option you choose, CloudFront forwards headers to your
                        origin based on whether the origin is an S3 bucket or a custom origin. See
                        the following documentation:

                        * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                        Updates
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                        * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                      - **Items** *(list) --*

                        A list that contains one ``Name`` element for each header that you want
                        CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                        ``0`` , omit ``Items`` .

                        - *(string) --*

                    - **QueryStringCacheKeys** *(dict) --*

                      A complex type that contains information about the query string parameters
                      that you want CloudFront to use for caching for this cache behavior.

                      - **Quantity** *(integer) --*

                        The number of ``whitelisted`` query string parameters for a cache behavior.

                      - **Items** *(list) --*

                        A list that contains the query string parameters that you want CloudFront to
                        use as a basis for caching for a cache behavior. If ``Quantity`` is 0, you
                        can omit ``Items`` .

                        - *(string) --*

                  - **TrustedSigners** *(dict) --*

                    A complex type that specifies the AWS accounts, if any, that you want to allow
                    to create signed URLs for private content.

                    If you want to require signed URLs in requests for objects in the target origin
                    that match the ``PathPattern`` for this cache behavior, specify ``true`` for
                    ``Enabled`` , and specify the applicable values for ``Quantity`` and ``Items`` .
                    For more information, see `Serving Private Content through CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    If you don't want to require signed URLs in requests for objects that match
                    ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for ``Quantity`` .
                    Omit ``Items`` .

                    To add, change, or remove one or more trusted signers, change ``Enabled`` to
                    ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable, and
                    specify all of the trusted signers that you want to include in the updated
                    distribution.

                    - **Enabled** *(boolean) --*

                      Specifies whether you want to require viewers to use signed URLs to access the
                      files specified by ``PathPattern`` and ``TargetOriginId`` .

                    - **Quantity** *(integer) --*

                      The number of trusted signers for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains trusted signers for this cache
                       behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                      - *(string) --*

                  - **ViewerProtocolPolicy** *(string) --*

                    The protocol that viewers can use to access the files in the origin specified by
                    ``TargetOriginId`` when a request matches the path pattern in ``PathPattern`` .
                    You can specify the following options:

                    * ``allow-all`` : Viewers can use HTTP or HTTPS.

                    * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                    returns an HTTP status code of 301 (Moved Permanently) to the viewer along with
                    the HTTPS URL. The viewer then resubmits the request using the new URL.

                    * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an HTTP
                    status code of 403 (Forbidden).

                    For more information about requiring the HTTPS protocol, see `Using an HTTPS
                    Connection to Access Your Objects
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    .. note::

                      The only way to guarantee that viewers retrieve an object that was fetched
                      from the origin using HTTPS is never to use any other protocol to fetch the
                      object. If you have recently changed from HTTP to HTTPS, we recommend that you
                      clear your objects' cache because cached objects are protocol agnostic. That
                      means that an edge location will return an object from the cache regardless of
                      whether the current request protocol matches the protocol used previously. For
                      more information, see `Managing How Long Content Stays in an Edge Cache
                      (Expiration)
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                  - **MinTTL** *(integer) --*

                    The minimum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. For more information, see `Managing How Long
                    Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all
                    headers to your origin (under ``Headers`` , if you specify ``1`` for
                    ``Quantity`` and ``*`` for ``Name`` ).

                  - **AllowedMethods** *(dict) --*

                    A complex type that controls which HTTP methods CloudFront processes and
                    forwards to your Amazon S3 bucket or your custom origin. There are three
                    choices:

                    * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                    * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                    * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and ``DELETE``
                    requests.

                    If you pick the third choice, you may need to restrict access to your Amazon S3
                    bucket or to your custom origin so users can't perform operations that you don't
                    want them to. For example, you might not want users to have permissions to
                    delete objects from your origin.

                    - **Quantity** *(integer) --*

                      The number of HTTP methods that you want CloudFront to forward to your origin.
                      Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for ``GET`` ,
                      ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD, OPTIONS, PUT,
                      PATCH, POST`` , and ``DELETE`` requests).

                    - **Items** *(list) --*

                      A complex type that contains the HTTP methods that you want CloudFront to
                      process and forward to your origin.

                      - *(string) --*

                    - **CachedMethods** *(dict) --*

                      A complex type that controls whether CloudFront caches the response to
                      requests using the specified HTTP methods. There are two choices:

                      * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                      * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                      requests.

                      If you pick the second choice for your Amazon S3 Origin, you may need to
                      forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                      Origin headers for the responses to be cached correctly.

                      - **Quantity** *(integer) --*

                        The number of HTTP methods for which you want CloudFront to cache responses.
                        Valid values are ``2`` (for caching responses to ``GET`` and ``HEAD``
                        requests) and ``3`` (for caching responses to ``GET`` , ``HEAD`` , and
                        ``OPTIONS`` requests).

                      - **Items** *(list) --*

                        A complex type that contains the HTTP methods that you want CloudFront to
                        cache responses to.

                        - *(string) --*

                  - **SmoothStreaming** *(boolean) --*

                    Indicates whether you want to distribute media files in the Microsoft Smooth
                    Streaming format using the origin that is associated with this cache behavior.
                    If so, specify ``true`` ; if not, specify ``false`` . If you specify ``true``
                    for ``SmoothStreaming`` , you can still distribute other content using this
                    cache behavior if the content matches the value of ``PathPattern`` .

                  - **DefaultTTL** *(integer) --*

                    The default amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin does not add HTTP headers such as ``Cache-Control max-age`` ,
                    ``Cache-Control s-maxage`` , and ``Expires`` to objects. For more information,
                    see `Managing How Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MaxTTL** *(integer) --*

                    The maximum amount of time that you want objects to stay in CloudFront caches
                    before CloudFront forwards another request to your origin to determine whether
                    the object has been updated. The value that you specify applies only when your
                    origin adds HTTP headers such as ``Cache-Control max-age`` , ``Cache-Control
                    s-maxage`` , and ``Expires`` to objects. For more information, see `Managing How
                    Long Content Stays in an Edge Cache (Expiration)
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Compress** *(boolean) --*

                    Whether you want CloudFront to automatically compress certain files for this
                    cache behavior. If so, specify ``true`` ; if not, specify ``false`` . For more
                    information, see `Serving Compressed Files
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **LambdaFunctionAssociations** *(dict) --*

                    A complex type that contains zero or more Lambda function associations for a
                    cache behavior.

                    - **Quantity** *(integer) --*

                      The number of Lambda function associations for this cache behavior.

                    - **Items** *(list) --*

                       **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                       items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                       ``Items`` .

                      - *(dict) --*

                        A complex type that contains a Lambda function association.

                        - **LambdaFunctionARN** *(string) --*

                          The ARN of the Lambda function. You must specify the ARN of a function
                          version; you can't specify a Lambda alias or $LATEST.

                        - **EventType** *(string) --*

                          Specifies the event type that triggers a Lambda function invocation. You
                          can specify the following values:

                          * ``viewer-request`` : The function executes when CloudFront receives a
                          request from a viewer and before it checks to see whether the requested
                          object is in the edge cache.

                          * ``origin-request`` : The function executes only when CloudFront forwards
                          a request to your origin. When the requested object is in the edge cache,
                          the function doesn't execute.

                          * ``origin-response`` : The function executes after CloudFront receives a
                          response from the origin and before it caches the object in the response.
                          When the requested object is in the edge cache, the function doesn't
                          execute.

                          * ``viewer-response`` : The function executes before CloudFront returns
                          the requested object to the viewer. The function executes regardless of
                          whether the object was already in the edge cache. If the origin returns an
                          HTTP status code other than HTTP 200 (OK), the function doesn't execute.

                        - **IncludeBody** *(boolean) --*

                          A flag that allows a Lambda function to have read access to the body
                          content. For more information, see `Accessing the Request Body by Choosing
                          the Include Body Option
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                          in the Amazon CloudFront Developer Guide.

                  - **FieldLevelEncryptionId** *(string) --*

                    The value of ``ID`` for the field-level encryption configuration that you want
                    CloudFront to use for encrypting specific fields of data for a cache behavior or
                    for the default cache behavior in your distribution.

                - **CacheBehaviors** *(dict) --*

                  A complex type that contains zero or more ``CacheBehavior`` elements.

                  - **Quantity** *(integer) --*

                    The number of cache behaviors for this distribution.

                  - **Items** *(list) --*

                    Optional: A complex type that contains cache behaviors for this distribution. If
                    ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(dict) --*

                      A complex type that describes how CloudFront processes requests.

                      You must create at least as many cache behaviors (including the default cache
                      behavior) as you have origins if you want CloudFront to distribute objects
                      from all of the origins. Each cache behavior specifies the one origin from
                      which you want CloudFront to get objects. If you have two origins and only the
                      default cache behavior, the default cache behavior will cause CloudFront to
                      get objects from one of the origins, but the other origin is never used.

                      For the current limit on the number of cache behaviors that you can add to a
                      distribution, see `Amazon CloudFront Limits
                      <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_cloudfront>`__
                      in the *AWS General Reference* .

                      If you don't want to specify any cache behaviors, include only an empty
                      ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element,
                      or CloudFront returns a ``MalformedXML`` error.

                      To delete all cache behaviors in an existing distribution, update the
                      distribution configuration and include only an empty ``CacheBehaviors``
                      element.

                      To add, change, or remove one or more cache behaviors, update the distribution
                      configuration and specify all of the cache behaviors that you want to include
                      in the updated distribution.

                      For more information about cache behaviors, see `Cache Behaviors
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **PathPattern** *(string) --*

                        The pattern (for example, ``images/*.jpg`` ) that specifies which requests
                        to apply the behavior to. When CloudFront receives a viewer request, the
                        requested path is compared with path patterns in the order in which cache
                        behaviors are listed in the distribution.

                        .. note::

                          You can optionally include a slash (``/`` ) at the beginning of the path
                          pattern. For example, ``/images/*.jpg`` . CloudFront behavior is the same
                          with or without the leading ``/`` .

                        The path pattern for the default cache behavior is ``*`` and cannot be
                        changed. If the request for an object does not match the path pattern for
                        any cache behaviors, CloudFront applies the behavior in the default cache
                        behavior.

                        For more information, see `Path Pattern
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **TargetOriginId** *(string) --*

                        The value of ``ID`` for the origin that you want CloudFront to route
                        requests to when a request matches the path pattern either for a cache
                        behavior or for the default cache behavior in your distribution.

                      - **ForwardedValues** *(dict) --*

                        A complex type that specifies how CloudFront handles query strings and
                        cookies.

                        - **QueryString** *(boolean) --*

                          Indicates whether you want CloudFront to forward query strings to the
                          origin that is associated with this cache behavior and cache based on the
                          query string parameters. CloudFront behavior depends on the value of
                          ``QueryString`` and on the values that you specify for
                          ``QueryStringCacheKeys`` , if any:

                          If you specify true for ``QueryString`` and you don't specify any values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin and caches based on all query string parameters.
                          Depending on how many query string parameters and values you have, this
                          can adversely affect performance because CloudFront must forward more
                          requests to the origin.

                          If you specify true for ``QueryString`` and you specify one or more values
                          for ``QueryStringCacheKeys`` , CloudFront forwards all query string
                          parameters to the origin, but it only caches based on the query string
                          parameters that you specify.

                          If you specify false for ``QueryString`` , CloudFront doesn't forward any
                          query string parameters to the origin, and doesn't cache based on query
                          string parameters.

                          For more information, see `Configuring CloudFront to Cache Based on Query
                          String Parameters
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                        - **Cookies** *(dict) --*

                          A complex type that specifies whether you want CloudFront to forward
                          cookies to the origin and, if so, which ones. For more information about
                          forwarding cookies to the origin, see `How CloudFront Forwards, Caches,
                          and Logs Cookies
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Forward** *(string) --*

                            Specifies which cookies to forward to the origin for this cache
                            behavior: all, none, or the list of cookies specified in the
                            ``WhitelistedNames`` complex type.

                            Amazon S3 doesn't process cookies. When the cache behavior is forwarding
                            requests to an Amazon S3 origin, specify none for the ``Forward``
                            element.

                          - **WhitelistedNames** *(dict) --*

                            Required if you specify ``whitelist`` for the value of ``Forward:`` . A
                            complex type that specifies how many different cookies you want
                            CloudFront to forward to the origin for this cache behavior and, if you
                            want to forward selected cookies, the names of those cookies.

                            If you specify ``all`` or none for the value of ``Forward`` , omit
                            ``WhitelistedNames`` . If you change the value of ``Forward`` from
                            ``whitelist`` to all or none and you don't delete the
                            ``WhitelistedNames`` element and its child elements, CloudFront deletes
                            them automatically.

                            For the current limit on the number of cookie names that you can
                            whitelist for each cache behavior, see `CloudFront Limits
                            <https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront>`__
                            in the *AWS General Reference* .

                            - **Quantity** *(integer) --*

                              The number of different cookies that you want CloudFront to forward to
                              the origin for this cache behavior.

                            - **Items** *(list) --*

                              A complex type that contains one ``Name`` element for each cookie that
                              you want CloudFront to forward to the origin for this cache behavior.

                              - *(string) --*

                        - **Headers** *(dict) --*

                          A complex type that specifies the ``Headers`` , if any, that you want
                          CloudFront to forward to the origin for this cache behavior (whitelisted
                          headers). For the headers that you specify, CloudFront also caches
                          separate versions of a specified object that is based on the header values
                          in viewer requests.

                          For more information, see `Caching Content Based on Request Headers
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                          - **Quantity** *(integer) --*

                            The number of different headers that you want CloudFront to base caching
                            on for this cache behavior. You can configure each cache behavior in a
                            web distribution to do one of the following:

                            * **Forward all headers to your origin** : Specify ``1`` for
                            ``Quantity`` and ``*`` for ``Name`` .

                            .. warning::

                               CloudFront doesn't cache the objects that are associated with this
                               cache behavior. Instead, CloudFront sends every request to the
                               origin.

                            * **Forward a whitelist of headers you specify** : Specify the number of
                            headers that you want CloudFront to base caching on. Then specify the
                            header names in ``Name`` elements. CloudFront caches your objects based
                            on the values in the specified headers.

                            * **Forward only the default headers** : Specify ``0`` for ``Quantity``
                            and omit ``Items`` . In this configuration, CloudFront doesn't cache
                            based on the values in the request headers.

                            Regardless of which option you choose, CloudFront forwards headers to
                            your origin based on whether the origin is an S3 bucket or a custom
                            origin. See the following documentation:

                            * **S3 bucket** : See `HTTP Request Headers That CloudFront Removes or
                            Updates
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorS3Origin.html#request-s3-removed-headers>`__

                            * **Custom origin** : See `HTTP Request Headers and CloudFront Behavior
                            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-headers-behavior>`__

                          - **Items** *(list) --*

                            A list that contains one ``Name`` element for each header that you want
                            CloudFront to use for caching in this cache behavior. If ``Quantity`` is
                            ``0`` , omit ``Items`` .

                            - *(string) --*

                        - **QueryStringCacheKeys** *(dict) --*

                          A complex type that contains information about the query string parameters
                          that you want CloudFront to use for caching for this cache behavior.

                          - **Quantity** *(integer) --*

                            The number of ``whitelisted`` query string parameters for a cache
                            behavior.

                          - **Items** *(list) --*

                            A list that contains the query string parameters that you want
                            CloudFront to use as a basis for caching for a cache behavior. If
                            ``Quantity`` is 0, you can omit ``Items`` .

                            - *(string) --*

                      - **TrustedSigners** *(dict) --*

                        A complex type that specifies the AWS accounts, if any, that you want to
                        allow to create signed URLs for private content.

                        If you want to require signed URLs in requests for objects in the target
                        origin that match the ``PathPattern`` for this cache behavior, specify
                        ``true`` for ``Enabled`` , and specify the applicable values for
                        ``Quantity`` and ``Items`` . For more information, see `Serving Private
                        Content through CloudFront
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        If you don't want to require signed URLs in requests for objects that match
                        ``PathPattern`` , specify ``false`` for ``Enabled`` and ``0`` for
                        ``Quantity`` . Omit ``Items`` .

                        To add, change, or remove one or more trusted signers, change ``Enabled`` to
                        ``true`` (if it's currently ``false`` ), change ``Quantity`` as applicable,
                        and specify all of the trusted signers that you want to include in the
                        updated distribution.

                        - **Enabled** *(boolean) --*

                          Specifies whether you want to require viewers to use signed URLs to access
                          the files specified by ``PathPattern`` and ``TargetOriginId`` .

                        - **Quantity** *(integer) --*

                          The number of trusted signers for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains trusted signers for this
                           cache behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                          - *(string) --*

                      - **ViewerProtocolPolicy** *(string) --*

                        The protocol that viewers can use to access the files in the origin
                        specified by ``TargetOriginId`` when a request matches the path pattern in
                        ``PathPattern`` . You can specify the following options:

                        * ``allow-all`` : Viewers can use HTTP or HTTPS.

                        * ``redirect-to-https`` : If a viewer submits an HTTP request, CloudFront
                        returns an HTTP status code of 301 (Moved Permanently) to the viewer along
                        with the HTTPS URL. The viewer then resubmits the request using the new URL.

                        * ``https-only`` : If a viewer sends an HTTP request, CloudFront returns an
                        HTTP status code of 403 (Forbidden).

                        For more information about requiring the HTTPS protocol, see `Using an HTTPS
                        Connection to Access Your Objects
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        .. note::

                          The only way to guarantee that viewers retrieve an object that was fetched
                          from the origin using HTTPS is never to use any other protocol to fetch
                          the object. If you have recently changed from HTTP to HTTPS, we recommend
                          that you clear your objects' cache because cached objects are protocol
                          agnostic. That means that an edge location will return an object from the
                          cache regardless of whether the current request protocol matches the
                          protocol used previously. For more information, see `Managing How Long
                          Content Stays in an Edge Cache (Expiration)
                          <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                          in the *Amazon CloudFront Developer Guide* .

                      - **MinTTL** *(integer) --*

                        The minimum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. For more information, see
                        `Managing How Long Content Stays in an Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                        You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward
                        all headers to your origin (under ``Headers`` , if you specify ``1`` for
                        ``Quantity`` and ``*`` for ``Name`` ).

                      - **AllowedMethods** *(dict) --*

                        A complex type that controls which HTTP methods CloudFront processes and
                        forwards to your Amazon S3 bucket or your custom origin. There are three
                        choices:

                        * CloudFront forwards only ``GET`` and ``HEAD`` requests.

                        * CloudFront forwards only ``GET`` , ``HEAD`` , and ``OPTIONS`` requests.

                        * CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST`` , and
                        ``DELETE`` requests.

                        If you pick the third choice, you may need to restrict access to your Amazon
                        S3 bucket or to your custom origin so users can't perform operations that
                        you don't want them to. For example, you might not want users to have
                        permissions to delete objects from your origin.

                        - **Quantity** *(integer) --*

                          The number of HTTP methods that you want CloudFront to forward to your
                          origin. Valid values are 2 (for ``GET`` and ``HEAD`` requests), 3 (for
                          ``GET`` , ``HEAD`` , and ``OPTIONS`` requests) and 7 (for ``GET, HEAD,
                          OPTIONS, PUT, PATCH, POST`` , and ``DELETE`` requests).

                        - **Items** *(list) --*

                          A complex type that contains the HTTP methods that you want CloudFront to
                          process and forward to your origin.

                          - *(string) --*

                        - **CachedMethods** *(dict) --*

                          A complex type that controls whether CloudFront caches the response to
                          requests using the specified HTTP methods. There are two choices:

                          * CloudFront caches responses to ``GET`` and ``HEAD`` requests.

                          * CloudFront caches responses to ``GET`` , ``HEAD`` , and ``OPTIONS``
                          requests.

                          If you pick the second choice for your Amazon S3 Origin, you may need to
                          forward Access-Control-Request-Method, Access-Control-Request-Headers, and
                          Origin headers for the responses to be cached correctly.

                          - **Quantity** *(integer) --*

                            The number of HTTP methods for which you want CloudFront to cache
                            responses. Valid values are ``2`` (for caching responses to ``GET`` and
                            ``HEAD`` requests) and ``3`` (for caching responses to ``GET`` ,
                            ``HEAD`` , and ``OPTIONS`` requests).

                          - **Items** *(list) --*

                            A complex type that contains the HTTP methods that you want CloudFront
                            to cache responses to.

                            - *(string) --*

                      - **SmoothStreaming** *(boolean) --*

                        Indicates whether you want to distribute media files in the Microsoft Smooth
                        Streaming format using the origin that is associated with this cache
                        behavior. If so, specify ``true`` ; if not, specify ``false`` . If you
                        specify ``true`` for ``SmoothStreaming`` , you can still distribute other
                        content using this cache behavior if the content matches the value of
                        ``PathPattern`` .

                      - **DefaultTTL** *(integer) --*

                        The default amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin does not add HTTP headers such as
                        ``Cache-Control max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to
                        objects. For more information, see `Managing How Long Content Stays in an
                        Edge Cache (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **MaxTTL** *(integer) --*

                        The maximum amount of time that you want objects to stay in CloudFront
                        caches before CloudFront forwards another request to your origin to
                        determine whether the object has been updated. The value that you specify
                        applies only when your origin adds HTTP headers such as ``Cache-Control
                        max-age`` , ``Cache-Control s-maxage`` , and ``Expires`` to objects. For
                        more information, see `Managing How Long Content Stays in an Edge Cache
                        (Expiration)
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **Compress** *(boolean) --*

                        Whether you want CloudFront to automatically compress certain files for this
                        cache behavior. If so, specify true; if not, specify false. For more
                        information, see `Serving Compressed Files
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                      - **LambdaFunctionAssociations** *(dict) --*

                        A complex type that contains zero or more Lambda function associations for a
                        cache behavior.

                        - **Quantity** *(integer) --*

                          The number of Lambda function associations for this cache behavior.

                        - **Items** *(list) --*

                           **Optional** : A complex type that contains ``LambdaFunctionAssociation``
                           items for this cache behavior. If ``Quantity`` is ``0`` , you can omit
                           ``Items`` .

                          - *(dict) --*

                            A complex type that contains a Lambda function association.

                            - **LambdaFunctionARN** *(string) --*

                              The ARN of the Lambda function. You must specify the ARN of a function
                              version; you can't specify a Lambda alias or $LATEST.

                            - **EventType** *(string) --*

                              Specifies the event type that triggers a Lambda function invocation.
                              You can specify the following values:

                              * ``viewer-request`` : The function executes when CloudFront receives
                              a request from a viewer and before it checks to see whether the
                              requested object is in the edge cache.

                              * ``origin-request`` : The function executes only when CloudFront
                              forwards a request to your origin. When the requested object is in the
                              edge cache, the function doesn't execute.

                              * ``origin-response`` : The function executes after CloudFront
                              receives a response from the origin and before it caches the object in
                              the response. When the requested object is in the edge cache, the
                              function doesn't execute.

                              * ``viewer-response`` : The function executes before CloudFront
                              returns the requested object to the viewer. The function executes
                              regardless of whether the object was already in the edge cache. If the
                              origin returns an HTTP status code other than HTTP 200 (OK), the
                              function doesn't execute.

                            - **IncludeBody** *(boolean) --*

                              A flag that allows a Lambda function to have read access to the body
                              content. For more information, see `Accessing the Request Body by
                              Choosing the Include Body Option
                              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html>`__
                              in the Amazon CloudFront Developer Guide.

                      - **FieldLevelEncryptionId** *(string) --*

                        The value of ``ID`` for the field-level encryption configuration that you
                        want CloudFront to use for encrypting specific fields of data for a cache
                        behavior or for the default cache behavior in your distribution.

                - **CustomErrorResponses** *(dict) --*

                  A complex type that controls the following:

                  * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                  custom error messages before returning the response to the viewer.

                  * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                  For more information about custom error pages, see `Customizing Error Responses
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Quantity** *(integer) --*

                    The number of HTTP status codes for which you want to specify a custom error
                    page and/or a caching duration. If ``Quantity`` is ``0`` , you can omit
                    ``Items`` .

                  - **Items** *(list) --*

                    A complex type that contains a ``CustomErrorResponse`` element for each HTTP
                    status code for which you want to specify a custom error page and/or a caching
                    duration.

                    - *(dict) --*

                      A complex type that controls:

                      * Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with
                      custom error messages before returning the response to the viewer.

                      * How long CloudFront caches HTTP status codes in the 4xx and 5xx range.

                      For more information about custom error pages, see `Customizing Error
                      Responses
                      <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                      in the *Amazon CloudFront Developer Guide* .

                      - **ErrorCode** *(integer) --*

                        The HTTP status code for which you want to specify a custom error page
                        and/or a caching duration.

                      - **ResponsePagePath** *(string) --*

                        The path to the custom error page that you want CloudFront to return to a
                        viewer when your origin returns the HTTP status code specified by
                        ``ErrorCode`` , for example, ``/4xx-errors/403-forbidden.html`` . If you
                        want to store your objects and your custom error pages in different
                        locations, your distribution must include a cache behavior for which the
                        following is true:

                        * The value of ``PathPattern`` matches the path to your custom error
                        messages. For example, suppose you saved custom error pages for 4xx errors
                        in an Amazon S3 bucket in a directory named ``/4xx-errors`` . Your
                        distribution must include a cache behavior for which the path pattern routes
                        requests for your custom error pages to that location, for example,
                        ``/4xx-errors/*`` .

                        * The value of ``TargetOriginId`` specifies the value of the ``ID`` element
                        for the origin that contains your custom error pages.

                        If you specify a value for ``ResponsePagePath`` , you must also specify a
                        value for ``ResponseCode`` . If you don't want to specify a value, include
                        an empty element, ``<ResponsePagePath>`` , in the XML document.

                        We recommend that you store custom error pages in an Amazon S3 bucket. If
                        you store custom error pages on an HTTP server and the server starts to
                        return 5xx errors, CloudFront can't get the files that you want to return to
                        viewers because the origin server is unavailable.

                      - **ResponseCode** *(string) --*

                        The HTTP status code that you want CloudFront to return to the viewer along
                        with the custom error page. There are a variety of reasons that you might
                        want CloudFront to return a status code different from the status code that
                        your origin returned to CloudFront, for example:

                        * Some Internet devices (some firewalls and corporate proxies, for example)
                        intercept HTTP 4xx and 5xx and prevent the response from being returned to
                        the viewer. If you substitute ``200`` , the response typically won't be
                        intercepted.

                        * If you don't care about distinguishing among different client errors or
                        server errors, you can specify ``400`` or ``500`` as the ``ResponseCode``
                        for all 4xx or 5xx errors.

                        * You might want to return a ``200`` status code (OK) and static website so
                        your customers don't know that your website is down.

                        If you specify a value for ``ResponseCode`` , you must also specify a value
                        for ``ResponsePagePath`` . If you don't want to specify a value, include an
                        empty element, ``<ResponseCode>`` , in the XML document.

                      - **ErrorCachingMinTTL** *(integer) --*

                        The minimum amount of time, in seconds, that you want CloudFront to cache
                        the HTTP status code specified in ``ErrorCode`` . When this time period has
                        elapsed, CloudFront queries your origin to see whether the problem that
                        caused the error has been resolved and the requested object is now
                        available.

                        If you don't want to specify a value, include an empty element,
                        ``<ErrorCachingMinTTL>`` , in the XML document.

                        For more information, see `Customizing Error Responses
                        <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html>`__
                        in the *Amazon CloudFront Developer Guide* .

                - **Comment** *(string) --*

                  Any comments you want to include about the distribution.

                  If you don't want to specify a comment, include an empty ``Comment`` element.

                  To delete an existing comment, update the distribution configuration and include
                  an empty ``Comment`` element.

                  To add or change a comment, update the distribution configuration and specify the
                  new comment.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the distribution.

                  For more information about logging, see `Access Logs
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a distribution or if
                    you want to disable logging for an existing distribution, specify ``false`` for
                    ``Enabled`` , and specify empty ``Bucket`` and ``Prefix`` elements. If you
                    specify ``false`` for ``Enabled`` but you specify values for ``Bucket`` ,
                    ``prefix`` , and ``IncludeCookies`` , the values are automatically deleted.

                  - **IncludeCookies** *(boolean) --*

                    Specifies whether you want CloudFront to include cookies in access logs, specify
                    ``true`` for ``IncludeCookies`` . If you choose to include cookies in logs,
                    CloudFront logs all cookies regardless of how you configure the cache behaviors
                    for this distribution. If you don't want to include cookies when you create a
                    distribution or if you want to disable include cookies for an existing
                    distribution, specify ``false`` for ``IncludeCookies`` .

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    ``filenames`` for this distribution, for example, ``myprefix/`` . If you want to
                    enable logging, but you don't want to specify a prefix, you still must include
                    an empty ``Prefix`` element in the ``Logging`` element.

                - **PriceClass** *(string) --*

                  The price class that corresponds with the maximum price that you want to pay for
                  CloudFront service. If you specify ``PriceClass_All`` , CloudFront responds to
                  requests for your objects from all CloudFront edge locations.

                  If you specify a price class other than ``PriceClass_All`` , CloudFront serves
                  your objects from the CloudFront edge location that has the lowest latency among
                  the edge locations in your price class. Viewers who are in or near regions that
                  are excluded from your specified price class may encounter slower performance.

                  For more information about price classes, see `Choosing the Price Class for a
                  CloudFront Distribution
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html>`__
                  in the *Amazon CloudFront Developer Guide* . For information about CloudFront
                  pricing, including how price classes (such as Price Class 100) map to CloudFront
                  regions, see `Amazon CloudFront Pricing
                  <http://aws.amazon.com/cloudfront/pricing/>`__ . For price class information,
                  scroll down to see the table at the bottom of the page.

                - **Enabled** *(boolean) --*

                  From this field, you can enable or disable the selected distribution.

                - **ViewerCertificate** *(dict) --*

                  A complex type that specifies whether you want viewers to use HTTP or HTTPS to
                  request your objects, whether you're using an alternate domain name with HTTPS,
                  and if so, if you're using AWS Certificate Manager (ACM) or a third-party
                  certificate authority.

                  - **CloudFrontDefaultCertificate** *(boolean) --*

                    If you're using the CloudFront domain name for your distribution, such as
                    ``d111111abcdef8.cloudfront.net`` , specify the following value:

                    * ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>``

                  - **IAMCertificateId** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if you purchased your certificate from a
                    third-party certificate authority:

                    * ``<IAMCertificateId>*IAM certificate ID* <IAMCertificateId>`` where `` *IAM
                    certificate ID* `` is the ID that IAM returned when you added the certificate to
                    the IAM certificate store.

                    If you specify ``IAMCertificateId`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **ACMCertificateArn** *(string) --*

                    If you want viewers to use HTTPS to request your objects and you're using an
                    alternate domain name, you must choose the type of certificate that you want to
                    use. Specify the following value if ACM provided your certificate:

                    * ``<ACMCertificateArn>*ARN for ACM SSL/TLS certificate* <ACMCertificateArn>``
                    where `` *ARN for ACM SSL/TLS certificate* `` is the ARN for the ACM SSL/TLS
                    certificate that you want to use for this distribution.

                    If you specify ``ACMCertificateArn`` , you must also specify a value for
                    ``SSLSupportMethod`` .

                  - **SSLSupportMethod** *(string) --*

                    If you specify a value for `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__
                    or for `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__
                    , you must also specify how you want CloudFront to serve HTTPS requests: using a
                    method that works for browsers and clients released after 2010 or one that works
                    for all clients.

                    * ``sni-only`` : CloudFront can respond to HTTPS requests from viewers that
                    support Server Name Indication (SNI). All modern browsers support SNI, but there
                    are a few that don't. For a current list of the browsers that support SNI, see
                    the `Wikipedia entry Server Name Indication
                    <http://en.wikipedia.org/wiki/Server_Name_Indication>`__ . To learn about
                    options to explore if you have users with browsers that don't include SNI
                    support, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                    * ``vip`` : CloudFront uses dedicated IP addresses for your content and can
                    respond to HTTPS requests from any viewer. However, there are additional monthly
                    charges. For details, including specific pricing information, see `Custom SSL
                    options for Amazon CloudFront
                    <http://aws.amazon.com/cloudfront/custom-ssl-domains/>`__ on the AWS marketing
                    site.

                    Don't specify a value for ``SSLSupportMethod`` if you specified
                    ``<CloudFrontDefaultCertificate>true<CloudFrontDefaultCertificate>`` .

                    For more information, see `Choosing How CloudFront Serves HTTPS Requests
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **MinimumProtocolVersion** *(string) --*

                    Specify the security policy that you want CloudFront to use for HTTPS
                    connections. A security policy determines two settings:

                    * The minimum SSL/TLS protocol that CloudFront uses to communicate with viewers

                    * The cipher that CloudFront uses to encrypt the content that it returns to
                    viewers

                    .. note::

                      On the CloudFront console, this setting is called **Security policy** .

                    We recommend that you specify ``TLSv1.1_2016`` unless your users are using
                    browsers or devices that do not support TLSv1.1 or later.

                    When both of the following are true, you must specify ``TLSv1`` or later for the
                    security policy:

                    * You're using a custom certificate: you specified a value for
                    ``ACMCertificateArn`` or for ``IAMCertificateId``

                    * You're using SNI: you specified ``sni-only`` for ``SSLSupportMethod``

                    If you specify ``true`` for ``CloudFrontDefaultCertificate`` , CloudFront
                    automatically sets the security policy to ``TLSv1`` regardless of the value that
                    you specify for ``MinimumProtocolVersion`` .

                    For information about the relationship between the security policy that you
                    choose and the protocols and ciphers that CloudFront uses to communicate with
                    viewers, see `Supported SSL/TLS Protocols and Ciphers for Communication Between
                    Viewers and CloudFront
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers>`__
                    in the *Amazon CloudFront Developer Guide* .

                  - **Certificate** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                  - **CertificateSource** *(string) --*

                    This field is no longer used. Use one of the following fields instead:

                    * `ACMCertificateArn
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-ACMCertificateArn>`__

                    * `IAMCertificateId
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-IAMCertificateId>`__

                    * `CloudFrontDefaultCertificate
                    <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ViewerCertificate.html#cloudfront-Type-ViewerCertificate-CloudFrontDefaultCertificate>`__

                - **Restrictions** *(dict) --*

                  A complex type that identifies ways in which you want to restrict distribution of
                  your content.

                  - **GeoRestriction** *(dict) --*

                    A complex type that controls the countries in which your content is distributed.
                    CloudFront determines the location of your users using ``MaxMind`` GeoIP
                    databases.

                    - **RestrictionType** *(string) --*

                      The method that you want to use to restrict distribution of your content by
                      country:

                      * ``none`` : No geo restriction is enabled, meaning access to content is not
                      restricted by client geo location.

                      * ``blacklist`` : The ``Location`` elements specify the countries in which you
                      don't want CloudFront to distribute your content.

                      * ``whitelist`` : The ``Location`` elements specify the countries in which you
                      want CloudFront to distribute your content.

                    - **Quantity** *(integer) --*

                      When geo restriction is ``enabled`` , this is the number of countries in your
                      ``whitelist`` or ``blacklist`` . Otherwise, when it is not enabled,
                      ``Quantity`` is ``0`` , and you can omit ``Items`` .

                    - **Items** *(list) --*

                      A complex type that contains a ``Location`` element for each country in which
                      you want CloudFront either to distribute your content (``whitelist`` ) or not
                      distribute your content (``blacklist`` ).

                      The ``Location`` element is a two-letter, uppercase country code for a country
                      that you want to include in your ``blacklist`` or ``whitelist`` . Include one
                      ``Location`` element for each country.

                      CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the
                      current list of countries and the corresponding codes, see ``ISO
                      3166-1-alpha-2`` code on the *International Organization for Standardization*
                      website. You can also refer to the country list on the CloudFront console,
                      which includes both country names and codes.

                      - *(string) --*

                - **WebACLId** *(string) --*

                  A unique identifier that specifies the AWS WAF web ACL, if any, to associate with
                  this distribution.

                  AWS WAF is a web application firewall that lets you monitor the HTTP and HTTPS
                  requests that are forwarded to CloudFront, and lets you control access to your
                  content. Based on conditions that you specify, such as the IP addresses that
                  requests originate from or the values of query strings, CloudFront responds to
                  requests either with the requested content or with an HTTP 403 status code
                  (Forbidden). You can also configure CloudFront to return a custom error page when
                  a request is blocked. For more information about AWS WAF, see the `AWS WAF
                  Developer Guide
                  <http://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html>`__ .

                - **HttpVersion** *(string) --*

                  (Optional) Specify the maximum HTTP version that you want viewers to use to
                  communicate with CloudFront. The default value for new web distributions is http2.
                  Viewers that don't support HTTP/2 automatically use an earlier HTTP version.

                  For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later,
                  and must support Server Name Identification (SNI).

                  In general, configuring CloudFront to communicate with viewers using HTTP/2
                  reduces latency. You can improve performance by optimizing for HTTP/2. For more
                  information, do an Internet search for "http/2 optimization."

                - **IsIPV6Enabled** *(boolean) --*

                  If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for
                  your distribution, specify ``true`` . If you specify ``false`` , CloudFront
                  responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no
                  IP addresses. This allows viewers to submit a second request, for an IPv4 address
                  for your distribution.

                  In general, you should enable IPv6 if you have users on IPv6 networks who want to
                  access your content. However, if you're using signed URLs or signed cookies to
                  restrict access to your content, and if you're using a custom policy that includes
                  the ``IpAddress`` parameter to restrict the IP addresses that can access your
                  content, don't enable IPv6. If you want to restrict access to some content by IP
                  address and not restrict access to other content (or restrict access but not by IP
                  address), you can create two distributions. For more information, see `Creating a
                  Signed URL Using a Custom Policy
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  If you're using an Amazon Route 53 alias resource record set to route traffic to
                  your CloudFront distribution, you need to create a second alias resource record
                  set when both of the following are true:

                  * You enable IPv6 for the distribution

                  * You're using alternate domain names in the URLs for your objects

                  For more information, see `Routing Traffic to an Amazon CloudFront Web
                  Distribution by Using Your Domain Name
                  <https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html>`__
                  in the *Amazon Route 53 Developer Guide* .

                  If you created a CNAME resource record set, either with Amazon Route 53 or with
                  another DNS service, you don't need to make any changes. A CNAME record will route
                  traffic to your distribution regardless of the IP address format of the viewer
                  request.

              - **AliasICPRecordals** *(list) --*

                AWS services in China customers must file for an Internet Content Provider (ICP)
                recordal if they want to serve content publicly on an alternate domain name, also
                known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                ICP recordal status for CNAMEs associated with distributions.

                For more information about ICP recordals, see `Signup, Accounts, and Credentials
                <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                in *Getting Started with AWS services in China* .

                - *(dict) --*

                  AWS services in China customers must file for an Internet Content Provider (ICP)
                  recordal if they want to serve content publicly on an alternate domain name, also
                  known as a CNAME, that they've added to CloudFront. AliasICPRecordal provides the
                  ICP recordal status for CNAMEs associated with distributions. The status is
                  returned in the CloudFront response; you can't configure it yourself.

                  For more information about ICP recordals, see `Signup, Accounts, and Credentials
                  <https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html>`__
                  in *Getting Started with AWS services in China* .

                  - **CNAME** *(string) --*

                    A domain name associated with a distribution.

                  - **ICPRecordalStatus** *(string) --*

                    The Internet Content Provider (ICP) recordal status for a CNAME. The
                    ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside
                    of China.

                    The status values returned are the following:

                    * **APPROVED** indicates that the associated CNAME has a valid ICP recordal
                    number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can
                    correspond to different ICP recordals. To be marked as APPROVED, that is, valid
                    to use with China region, a CNAME must have one ICP recordal number associated
                    with it.

                    * **SUSPENDED** indicates that the associated CNAME does not have a valid ICP
                    recordal number.

                    * **PENDING** indicates that at least one CNAME associated with the distribution
                    does not have a valid ICP recordal number.

            - **ETag** *(string) --*

              The current version of the configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def update_field_level_encryption_config(
        self,
        FieldLevelEncryptionConfig: ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
        Id: str,
        IfMatch: str = None,
    ) -> ClientUpdateFieldLevelEncryptionConfigResponseTypeDef:
        """
        Update a field-level encryption configuration.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UpdateFieldLevelEncryptionConfig>`_

        **Request Syntax**
        ::

          response = client.update_field_level_encryption_config(
              FieldLevelEncryptionConfig={
                  'CallerReference': 'string',
                  'Comment': 'string',
                  'QueryArgProfileConfig': {
                      'ForwardWhenQueryArgProfileIsUnknown': True|False,
                      'QueryArgProfiles': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'QueryArg': 'string',
                                  'ProfileId': 'string'
                              },
                          ]
                      }
                  },
                  'ContentTypeProfileConfig': {
                      'ForwardWhenContentTypeIsUnknown': True|False,
                      'ContentTypeProfiles': {
                          'Quantity': 123,
                          'Items': [
                              {
                                  'Format': 'URLEncoded',
                                  'ProfileId': 'string',
                                  'ContentType': 'string'
                              },
                          ]
                      }
                  }
              },
              Id='string',
              IfMatch='string'
          )
        :type FieldLevelEncryptionConfig: dict
        :param FieldLevelEncryptionConfig: **[REQUIRED]**

          Request to update a field-level encryption configuration.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique number that ensures the request can't be replayed.

          - **Comment** *(string) --*

            An optional comment about the configuration.

          - **QueryArgProfileConfig** *(dict) --*

            A complex data type that specifies when to forward content if a profile isn't found and
            the profile that can be provided as a query argument in a request.

            - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --* **[REQUIRED]**

              Flag to set if you want a request to be forwarded to the origin even if the profile
              specified by the field-level encryption query argument, fle-profile, is unknown.

            - **QueryArgProfiles** *(dict) --*

              Profiles specified for query argument-profile mapping for field-level encryption.

              - **Quantity** *(integer) --* **[REQUIRED]**

                Number of profiles for query argument-profile mapping for field-level encryption.

              - **Items** *(list) --*

                Number of items for query argument-profile mapping for field-level encryption.

                - *(dict) --*

                  Query argument-profile mapping for field-level encryption.

                  - **QueryArg** *(string) --* **[REQUIRED]**

                    Query argument for field-level encryption query argument-profile mapping.

                  - **ProfileId** *(string) --* **[REQUIRED]**

                    ID of profile to use for field-level encryption query argument-profile mapping

          - **ContentTypeProfileConfig** *(dict) --*

            A complex data type that specifies when to forward content if a content type isn't
            recognized and profiles to use as by default in a request if a query argument doesn't
            specify a profile to use.

            - **ForwardWhenContentTypeIsUnknown** *(boolean) --* **[REQUIRED]**

              The setting in a field-level encryption content type-profile mapping that specifies
              what to do when an unknown content type is provided for the profile. If true, content
              is forwarded without being encrypted when the content type is unknown. If false (the
              default), an error is returned when the content type is unknown.

            - **ContentTypeProfiles** *(dict) --*

              The configuration for a field-level encryption content type-profile.

              - **Quantity** *(integer) --* **[REQUIRED]**

                The number of field-level encryption content type-profile mappings.

              - **Items** *(list) --*

                Items in a field-level encryption content type-profile mapping.

                - *(dict) --*

                  A field-level encryption content type profile.

                  - **Format** *(string) --* **[REQUIRED]**

                    The format for a field-level encryption content type-profile mapping.

                  - **ProfileId** *(string) --*

                    The profile ID for a field-level encryption content type-profile mapping.

                  - **ContentType** *(string) --* **[REQUIRED]**

                    The content type for a field-level encryption content type-profile mapping.

        :type Id: string
        :param Id: **[REQUIRED]**

          The ID of the configuration you want to update.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the configuration
          identity to update. For example: ``E2QWRUHAPOMQZL`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryption': {
                    'Id': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'FieldLevelEncryptionConfig': {
                        'CallerReference': 'string',
                        'Comment': 'string',
                        'QueryArgProfileConfig': {
                            'ForwardWhenQueryArgProfileIsUnknown': True|False,
                            'QueryArgProfiles': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'QueryArg': 'string',
                                        'ProfileId': 'string'
                                    },
                                ]
                            }
                        },
                        'ContentTypeProfileConfig': {
                            'ForwardWhenContentTypeIsUnknown': True|False,
                            'ContentTypeProfiles': {
                                'Quantity': 123,
                                'Items': [
                                    {
                                        'Format': 'URLEncoded',
                                        'ProfileId': 'string',
                                        'ContentType': 'string'
                                    },
                                ]
                            }
                        }
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryption** *(dict) --*

              Return the results of updating the configuration.

              - **Id** *(string) --*

                The configuration ID for a field-level encryption configuration which includes a set
                of profiles that specify certain selected data fields to be encrypted by specific
                public keys.

              - **LastModifiedTime** *(datetime) --*

                The last time the field-level encryption configuration was changed.

              - **FieldLevelEncryptionConfig** *(dict) --*

                A complex data type that includes the profile configurations specified for
                field-level encryption.

                - **CallerReference** *(string) --*

                  A unique number that ensures the request can't be replayed.

                - **Comment** *(string) --*

                  An optional comment about the configuration.

                - **QueryArgProfileConfig** *(dict) --*

                  A complex data type that specifies when to forward content if a profile isn't
                  found and the profile that can be provided as a query argument in a request.

                  - **ForwardWhenQueryArgProfileIsUnknown** *(boolean) --*

                    Flag to set if you want a request to be forwarded to the origin even if the
                    profile specified by the field-level encryption query argument, fle-profile, is
                    unknown.

                  - **QueryArgProfiles** *(dict) --*

                    Profiles specified for query argument-profile mapping for field-level
                    encryption.

                    - **Quantity** *(integer) --*

                      Number of profiles for query argument-profile mapping for field-level
                      encryption.

                    - **Items** *(list) --*

                      Number of items for query argument-profile mapping for field-level encryption.

                      - *(dict) --*

                        Query argument-profile mapping for field-level encryption.

                        - **QueryArg** *(string) --*

                          Query argument for field-level encryption query argument-profile mapping.

                        - **ProfileId** *(string) --*

                          ID of profile to use for field-level encryption query argument-profile
                          mapping

                - **ContentTypeProfileConfig** *(dict) --*

                  A complex data type that specifies when to forward content if a content type isn't
                  recognized and profiles to use as by default in a request if a query argument
                  doesn't specify a profile to use.

                  - **ForwardWhenContentTypeIsUnknown** *(boolean) --*

                    The setting in a field-level encryption content type-profile mapping that
                    specifies what to do when an unknown content type is provided for the profile.
                    If true, content is forwarded without being encrypted when the content type is
                    unknown. If false (the default), an error is returned when the content type is
                    unknown.

                  - **ContentTypeProfiles** *(dict) --*

                    The configuration for a field-level encryption content type-profile.

                    - **Quantity** *(integer) --*

                      The number of field-level encryption content type-profile mappings.

                    - **Items** *(list) --*

                      Items in a field-level encryption content type-profile mapping.

                      - *(dict) --*

                        A field-level encryption content type profile.

                        - **Format** *(string) --*

                          The format for a field-level encryption content type-profile mapping.

                        - **ProfileId** *(string) --*

                          The profile ID for a field-level encryption content type-profile mapping.

                        - **ContentType** *(string) --*

                          The content type for a field-level encryption content type-profile
                          mapping.

            - **ETag** *(string) --*

              The value of the ``ETag`` header that you received when updating the configuration.
              For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def update_field_level_encryption_profile(
        self,
        FieldLevelEncryptionProfileConfig: ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
        Id: str,
        IfMatch: str = None,
    ) -> ClientUpdateFieldLevelEncryptionProfileResponseTypeDef:
        """
        Update a field-level encryption profile.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UpdateFieldLevelEncryptionProfile>`_

        **Request Syntax**
        ::

          response = client.update_field_level_encryption_profile(
              FieldLevelEncryptionProfileConfig={
                  'Name': 'string',
                  'CallerReference': 'string',
                  'Comment': 'string',
                  'EncryptionEntities': {
                      'Quantity': 123,
                      'Items': [
                          {
                              'PublicKeyId': 'string',
                              'ProviderId': 'string',
                              'FieldPatterns': {
                                  'Quantity': 123,
                                  'Items': [
                                      'string',
                                  ]
                              }
                          },
                      ]
                  }
              },
              Id='string',
              IfMatch='string'
          )
        :type FieldLevelEncryptionProfileConfig: dict
        :param FieldLevelEncryptionProfileConfig: **[REQUIRED]**

          Request to update a field-level encryption profile.

          - **Name** *(string) --* **[REQUIRED]**

            Profile name for the field-level encryption profile.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique number that ensures that the request can't be replayed.

          - **Comment** *(string) --*

            An optional comment for the field-level encryption profile.

          - **EncryptionEntities** *(dict) --* **[REQUIRED]**

            A complex data type of encryption entities for the field-level encryption profile that
            include the public key ID, provider, and field patterns for specifying which fields to
            encrypt with this key.

            - **Quantity** *(integer) --* **[REQUIRED]**

              Number of field pattern items in a field-level encryption content type-profile
              mapping.

            - **Items** *(list) --*

              An array of field patterns in a field-level encryption content type-profile mapping.

              - *(dict) --*

                Complex data type for field-level encryption profiles that includes the encryption
                key and field pattern specifications.

                - **PublicKeyId** *(string) --* **[REQUIRED]**

                  The public key associated with a set of field-level encryption patterns, to be
                  used when encrypting the fields that match the patterns.

                - **ProviderId** *(string) --* **[REQUIRED]**

                  The provider associated with the public key being used for encryption. This value
                  must also be provided with the private key for applications to be able to decrypt
                  data.

                - **FieldPatterns** *(dict) --* **[REQUIRED]**

                  Field patterns in a field-level encryption content type profile specify the fields
                  that you want to be encrypted. You can provide the full field name, or any
                  beginning characters followed by a wildcard (*). You can't overlap field patterns.
                  For example, you can't have both ABC* and AB*. Note that field patterns are
                  case-sensitive.

                  - **Quantity** *(integer) --* **[REQUIRED]**

                    The number of field-level encryption field patterns.

                  - **Items** *(list) --*

                    An array of the field-level encryption field patterns.

                    - *(string) --*

        :type Id: string
        :param Id: **[REQUIRED]**

          The ID of the field-level encryption profile request.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the profile identity to
          update. For example: ``E2QWRUHAPOMQZL`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'FieldLevelEncryptionProfile': {
                    'Id': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'FieldLevelEncryptionProfileConfig': {
                        'Name': 'string',
                        'CallerReference': 'string',
                        'Comment': 'string',
                        'EncryptionEntities': {
                            'Quantity': 123,
                            'Items': [
                                {
                                    'PublicKeyId': 'string',
                                    'ProviderId': 'string',
                                    'FieldPatterns': {
                                        'Quantity': 123,
                                        'Items': [
                                            'string',
                                        ]
                                    }
                                },
                            ]
                        }
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **FieldLevelEncryptionProfile** *(dict) --*

              Return the results of updating the profile.

              - **Id** *(string) --*

                The ID for a field-level encryption profile configuration which includes a set of
                profiles that specify certain selected data fields to be encrypted by specific
                public keys.

              - **LastModifiedTime** *(datetime) --*

                The last time the field-level encryption profile was updated.

              - **FieldLevelEncryptionProfileConfig** *(dict) --*

                A complex data type that includes the profile name and the encryption entities for
                the field-level encryption profile.

                - **Name** *(string) --*

                  Profile name for the field-level encryption profile.

                - **CallerReference** *(string) --*

                  A unique number that ensures that the request can't be replayed.

                - **Comment** *(string) --*

                  An optional comment for the field-level encryption profile.

                - **EncryptionEntities** *(dict) --*

                  A complex data type of encryption entities for the field-level encryption profile
                  that include the public key ID, provider, and field patterns for specifying which
                  fields to encrypt with this key.

                  - **Quantity** *(integer) --*

                    Number of field pattern items in a field-level encryption content type-profile
                    mapping.

                  - **Items** *(list) --*

                    An array of field patterns in a field-level encryption content type-profile
                    mapping.

                    - *(dict) --*

                      Complex data type for field-level encryption profiles that includes the
                      encryption key and field pattern specifications.

                      - **PublicKeyId** *(string) --*

                        The public key associated with a set of field-level encryption patterns, to
                        be used when encrypting the fields that match the patterns.

                      - **ProviderId** *(string) --*

                        The provider associated with the public key being used for encryption. This
                        value must also be provided with the private key for applications to be able
                        to decrypt data.

                      - **FieldPatterns** *(dict) --*

                        Field patterns in a field-level encryption content type profile specify the
                        fields that you want to be encrypted. You can provide the full field name,
                        or any beginning characters followed by a wildcard (*). You can't overlap
                        field patterns. For example, you can't have both ABC* and AB*. Note that
                        field patterns are case-sensitive.

                        - **Quantity** *(integer) --*

                          The number of field-level encryption field patterns.

                        - **Items** *(list) --*

                          An array of the field-level encryption field patterns.

                          - *(string) --*

            - **ETag** *(string) --*

              The result of the field-level encryption profile request.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def update_public_key(
        self,
        PublicKeyConfig: ClientUpdatePublicKeyPublicKeyConfigTypeDef,
        Id: str,
        IfMatch: str = None,
    ) -> ClientUpdatePublicKeyResponseTypeDef:
        """
        Update public key information. Note that the only value you can change is the comment.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UpdatePublicKey>`_

        **Request Syntax**
        ::

          response = client.update_public_key(
              PublicKeyConfig={
                  'CallerReference': 'string',
                  'Name': 'string',
                  'EncodedKey': 'string',
                  'Comment': 'string'
              },
              Id='string',
              IfMatch='string'
          )
        :type PublicKeyConfig: dict
        :param PublicKeyConfig: **[REQUIRED]**

          Request to update public key information.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique number that ensures that the request can't be replayed.

          - **Name** *(string) --* **[REQUIRED]**

            The name for a public key you add to CloudFront to use with features like field-level
            encryption.

          - **EncodedKey** *(string) --* **[REQUIRED]**

            The encoded public key that you want to add to CloudFront to use with features like
            field-level encryption.

          - **Comment** *(string) --*

            An optional comment about a public key.

        :type Id: string
        :param Id: **[REQUIRED]**

          ID of the public key to be updated.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the public key to
          update. For example: ``E2QWRUHAPOMQZL`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'PublicKey': {
                    'Id': 'string',
                    'CreatedTime': datetime(2015, 1, 1),
                    'PublicKeyConfig': {
                        'CallerReference': 'string',
                        'Name': 'string',
                        'EncodedKey': 'string',
                        'Comment': 'string'
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            - **PublicKey** *(dict) --*

              Return the results of updating the public key.

              - **Id** *(string) --*

                A unique ID assigned to a public key you've added to CloudFront.

              - **CreatedTime** *(datetime) --*

                A time you added a public key to CloudFront.

              - **PublicKeyConfig** *(dict) --*

                A complex data type for a public key you add to CloudFront to use with features like
                field-level encryption.

                - **CallerReference** *(string) --*

                  A unique number that ensures that the request can't be replayed.

                - **Name** *(string) --*

                  The name for a public key you add to CloudFront to use with features like
                  field-level encryption.

                - **EncodedKey** *(string) --*

                  The encoded public key that you want to add to CloudFront to use with features
                  like field-level encryption.

                - **Comment** *(string) --*

                  An optional comment about a public key.

            - **ETag** *(string) --*

              The current version of the update public key result. For example: ``E2QWRUHAPOMQZL`` .
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def update_streaming_distribution(
        self,
        StreamingDistributionConfig: ClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef,
        Id: str,
        IfMatch: str = None,
    ) -> ClientUpdateStreamingDistributionResponseTypeDef:
        """
        Update a streaming distribution.

        See also: `AWS API Documentation
        <https://docs.aws.amazon.com/goto/WebAPI/cloudfront-2019-03-26/UpdateStreamingDistribution>`_

        **Request Syntax**
        ::

          response = client.update_streaming_distribution(
              StreamingDistributionConfig={
                  'CallerReference': 'string',
                  'S3Origin': {
                      'DomainName': 'string',
                      'OriginAccessIdentity': 'string'
                  },
                  'Aliases': {
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'Comment': 'string',
                  'Logging': {
                      'Enabled': True|False,
                      'Bucket': 'string',
                      'Prefix': 'string'
                  },
                  'TrustedSigners': {
                      'Enabled': True|False,
                      'Quantity': 123,
                      'Items': [
                          'string',
                      ]
                  },
                  'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                  'Enabled': True|False
              },
              Id='string',
              IfMatch='string'
          )
        :type StreamingDistributionConfig: dict
        :param StreamingDistributionConfig: **[REQUIRED]**

          The streaming distribution's configuration information.

          - **CallerReference** *(string) --* **[REQUIRED]**

            A unique value (for example, a date-time stamp) that ensures that the request can't be
            replayed.

            If the value of ``CallerReference`` is new (regardless of the content of the
            ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

            If ``CallerReference`` is a value that you already sent in a previous request to create
            a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

          - **S3Origin** *(dict) --* **[REQUIRED]**

            A complex type that contains information about the Amazon S3 bucket from which you want
            CloudFront to get your media files for distribution.

            - **DomainName** *(string) --* **[REQUIRED]**

              The DNS name of the Amazon S3 origin.

            - **OriginAccessIdentity** *(string) --* **[REQUIRED]**

              The CloudFront origin access identity to associate with the distribution. Use an
              origin access identity to configure the distribution so that end users can only access
              objects in an Amazon S3 bucket through CloudFront.

              If you want end users to be able to access objects using either the CloudFront URL or
              the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

              To delete the origin access identity from an existing distribution, update the
              distribution configuration and include an empty ``OriginAccessIdentity`` element.

              To replace the origin access identity, update the distribution configuration and
              specify the new origin access identity.

              For more information, see `Using an Origin Access Identity to Restrict Access to Your
              Amazon S3 Content
              <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
              in the *Amazon CloudFront Developer Guide* .

          - **Aliases** *(dict) --*

            A complex type that contains information about CNAMEs (alternate domain names), if any,
            for this streaming distribution.

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of CNAME aliases, if any, that you want to associate with this
              distribution.

            - **Items** *(list) --*

              A complex type that contains the CNAME aliases, if any, that you want to associate
              with this distribution.

              - *(string) --*

          - **Comment** *(string) --* **[REQUIRED]**

            Any comments you want to include about the streaming distribution.

          - **Logging** *(dict) --*

            A complex type that controls whether access logs are written for the streaming
            distribution.

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If
              you don't want to enable logging when you create a streaming distribution or if you
              want to disable logging for an existing streaming distribution, specify ``false`` for
              ``Enabled`` , and specify ``empty Bucket`` and ``Prefix`` elements. If you specify
              ``false`` for ``Enabled`` but you specify values for ``Bucket`` and ``Prefix`` , the
              values are automatically deleted.

            - **Bucket** *(string) --* **[REQUIRED]**

              The Amazon S3 bucket to store the access logs in, for example,
              ``myawslogbucket.s3.amazonaws.com`` .

            - **Prefix** *(string) --* **[REQUIRED]**

              An optional string that you want CloudFront to prefix to the access log filenames for
              this streaming distribution, for example, ``myprefix/`` . If you want to enable
              logging, but you don't want to specify a prefix, you still must include an empty
              ``Prefix`` element in the ``Logging`` element.

          - **TrustedSigners** *(dict) --* **[REQUIRED]**

            A complex type that specifies any AWS accounts that you want to permit to create signed
            URLs for private content. If you want the distribution to use signed URLs, include this
            element; if you want the distribution to use public URLs, remove this element. For more
            information, see `Serving Private Content through CloudFront
            <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
            in the *Amazon CloudFront Developer Guide* .

            - **Enabled** *(boolean) --* **[REQUIRED]**

              Specifies whether you want to require viewers to use signed URLs to access the files
              specified by ``PathPattern`` and ``TargetOriginId`` .

            - **Quantity** *(integer) --* **[REQUIRED]**

              The number of trusted signers for this cache behavior.

            - **Items** *(list) --*

               **Optional** : A complex type that contains trusted signers for this cache behavior.
               If ``Quantity`` is ``0`` , you can omit ``Items`` .

              - *(string) --*

          - **PriceClass** *(string) --*

            A complex type that contains information about price class for this streaming
            distribution.

          - **Enabled** *(boolean) --* **[REQUIRED]**

            Whether the streaming distribution is enabled to accept user requests for content.

        :type Id: string
        :param Id: **[REQUIRED]**

          The streaming distribution's id.

        :type IfMatch: string
        :param IfMatch:

          The value of the ``ETag`` header that you received when retrieving the streaming
          distribution's configuration. For example: ``E2QWRUHAPOMQZL`` .

        :rtype: dict
        :returns:

          **Response Syntax**

          ::

            {
                'StreamingDistribution': {
                    'Id': 'string',
                    'ARN': 'string',
                    'Status': 'string',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'DomainName': 'string',
                    'ActiveTrustedSigners': {
                        'Enabled': True|False,
                        'Quantity': 123,
                        'Items': [
                            {
                                'AwsAccountNumber': 'string',
                                'KeyPairIds': {
                                    'Quantity': 123,
                                    'Items': [
                                        'string',
                                    ]
                                }
                            },
                        ]
                    },
                    'StreamingDistributionConfig': {
                        'CallerReference': 'string',
                        'S3Origin': {
                            'DomainName': 'string',
                            'OriginAccessIdentity': 'string'
                        },
                        'Aliases': {
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'Comment': 'string',
                        'Logging': {
                            'Enabled': True|False,
                            'Bucket': 'string',
                            'Prefix': 'string'
                        },
                        'TrustedSigners': {
                            'Enabled': True|False,
                            'Quantity': 123,
                            'Items': [
                                'string',
                            ]
                        },
                        'PriceClass': 'PriceClass_100'|'PriceClass_200'|'PriceClass_All',
                        'Enabled': True|False
                    }
                },
                'ETag': 'string'
            }
          **Response Structure**

          - *(dict) --*

            The returned result of the corresponding request.

            - **StreamingDistribution** *(dict) --*

              The streaming distribution's information.

              - **Id** *(string) --*

                The identifier for the RTMP distribution. For example: ``EGTXBD79EXAMPLE`` .

              - **ARN** *(string) --*

                The ARN (Amazon Resource Name) for the distribution. For example:
                ``arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`` , where
                ``123456789012`` is your AWS account ID.

              - **Status** *(string) --*

                The current status of the RTMP distribution. When the status is ``Deployed`` , the
                distribution's information is propagated to all CloudFront edge locations.

              - **LastModifiedTime** *(datetime) --*

                The date and time that the distribution was last modified.

              - **DomainName** *(string) --*

                The domain name that corresponds to the streaming distribution, for example,
                ``s5c39gqb8ow64r.cloudfront.net`` .

              - **ActiveTrustedSigners** *(dict) --*

                A complex type that lists the AWS accounts, if any, that you included in the
                ``TrustedSigners`` complex type for this distribution. These are the accounts that
                you want to allow to create signed URLs for private content.

                The ``Signer`` complex type lists the AWS account number of the trusted signer or
                ``self`` if the signer is the AWS account that created the distribution. The
                ``Signer`` element also includes the IDs of any active CloudFront key pairs that are
                associated with the trusted signer's AWS account. If no ``KeyPairId`` element
                appears for a ``Signer`` , that signer can't create signed URLs.

                For more information, see `Serving Private Content through CloudFront
                <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                in the *Amazon CloudFront Developer Guide* .

                - **Enabled** *(boolean) --*

                  Enabled is ``true`` if any of the AWS accounts listed in the ``TrustedSigners``
                  complex type for this distribution have active CloudFront key pairs. If not,
                  ``Enabled`` is ``false`` .

                - **Quantity** *(integer) --*

                  The number of trusted signers specified in the ``TrustedSigners`` complex type.

                - **Items** *(list) --*

                  A complex type that contains one ``Signer`` complex type for each trusted signer
                  that is specified in the ``TrustedSigners`` complex type.

                  - *(dict) --*

                    A complex type that lists the AWS accounts that were included in the
                    ``TrustedSigners`` complex type, as well as their active CloudFront key pair
                    IDs, if any.

                    - **AwsAccountNumber** *(string) --*

                      An AWS account that is included in the ``TrustedSigners`` complex type for
                      this distribution. Valid values include:

                      * ``self`` , which is the AWS account used to create the distribution.

                      * An AWS account number.

                    - **KeyPairIds** *(dict) --*

                      A complex type that lists the active CloudFront key pairs, if any, that are
                      associated with ``AwsAccountNumber`` .

                      - **Quantity** *(integer) --*

                        The number of active CloudFront key pairs for ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                      - **Items** *(list) --*

                        A complex type that lists the active CloudFront key pairs, if any, that are
                        associated with ``AwsAccountNumber`` .

                        For more information, see `ActiveTrustedSigners
                        <https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_ActiveTrustedSigners.html>`__
                        .

                        - *(string) --*

              - **StreamingDistributionConfig** *(dict) --*

                The current configuration information for the RTMP distribution.

                - **CallerReference** *(string) --*

                  A unique value (for example, a date-time stamp) that ensures that the request
                  can't be replayed.

                  If the value of ``CallerReference`` is new (regardless of the content of the
                  ``StreamingDistributionConfig`` object), CloudFront creates a new distribution.

                  If ``CallerReference`` is a value that you already sent in a previous request to
                  create a distribution, CloudFront returns a ``DistributionAlreadyExists`` error.

                - **S3Origin** *(dict) --*

                  A complex type that contains information about the Amazon S3 bucket from which you
                  want CloudFront to get your media files for distribution.

                  - **DomainName** *(string) --*

                    The DNS name of the Amazon S3 origin.

                  - **OriginAccessIdentity** *(string) --*

                    The CloudFront origin access identity to associate with the distribution. Use an
                    origin access identity to configure the distribution so that end users can only
                    access objects in an Amazon S3 bucket through CloudFront.

                    If you want end users to be able to access objects using either the CloudFront
                    URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.

                    To delete the origin access identity from an existing distribution, update the
                    distribution configuration and include an empty ``OriginAccessIdentity``
                    element.

                    To replace the origin access identity, update the distribution configuration and
                    specify the new origin access identity.

                    For more information, see `Using an Origin Access Identity to Restrict Access to
                    Your Amazon S3 Content
                    <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html>`__
                    in the *Amazon CloudFront Developer Guide* .

                - **Aliases** *(dict) --*

                  A complex type that contains information about CNAMEs (alternate domain names), if
                  any, for this streaming distribution.

                  - **Quantity** *(integer) --*

                    The number of CNAME aliases, if any, that you want to associate with this
                    distribution.

                  - **Items** *(list) --*

                    A complex type that contains the CNAME aliases, if any, that you want to
                    associate with this distribution.

                    - *(string) --*

                - **Comment** *(string) --*

                  Any comments you want to include about the streaming distribution.

                - **Logging** *(dict) --*

                  A complex type that controls whether access logs are written for the streaming
                  distribution.

                  - **Enabled** *(boolean) --*

                    Specifies whether you want CloudFront to save access logs to an Amazon S3
                    bucket. If you don't want to enable logging when you create a streaming
                    distribution or if you want to disable logging for an existing streaming
                    distribution, specify ``false`` for ``Enabled`` , and specify ``empty Bucket``
                    and ``Prefix`` elements. If you specify ``false`` for ``Enabled`` but you
                    specify values for ``Bucket`` and ``Prefix`` , the values are automatically
                    deleted.

                  - **Bucket** *(string) --*

                    The Amazon S3 bucket to store the access logs in, for example,
                    ``myawslogbucket.s3.amazonaws.com`` .

                  - **Prefix** *(string) --*

                    An optional string that you want CloudFront to prefix to the access log
                    filenames for this streaming distribution, for example, ``myprefix/`` . If you
                    want to enable logging, but you don't want to specify a prefix, you still must
                    include an empty ``Prefix`` element in the ``Logging`` element.

                - **TrustedSigners** *(dict) --*

                  A complex type that specifies any AWS accounts that you want to permit to create
                  signed URLs for private content. If you want the distribution to use signed URLs,
                  include this element; if you want the distribution to use public URLs, remove this
                  element. For more information, see `Serving Private Content through CloudFront
                  <https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html>`__
                  in the *Amazon CloudFront Developer Guide* .

                  - **Enabled** *(boolean) --*

                    Specifies whether you want to require viewers to use signed URLs to access the
                    files specified by ``PathPattern`` and ``TargetOriginId`` .

                  - **Quantity** *(integer) --*

                    The number of trusted signers for this cache behavior.

                  - **Items** *(list) --*

                     **Optional** : A complex type that contains trusted signers for this cache
                     behavior. If ``Quantity`` is ``0`` , you can omit ``Items`` .

                    - *(string) --*

                - **PriceClass** *(string) --*

                  A complex type that contains information about price class for this streaming
                  distribution.

                - **Enabled** *(boolean) --*

                  Whether the streaming distribution is enabled to accept user requests for content.

            - **ETag** *(string) --*

              The current version of the configuration. For example: ``E2QWRUHAPOMQZL`` .
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_paginator(
        self, operation_name: Literal["list_cloud_front_origin_access_identities"]
    ) -> paginator_scope.ListCloudFrontOriginAccessIdentitiesPaginator:
        """
        Get Paginator for `list_cloud_front_origin_access_identities` operation.
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_paginator(
        self, operation_name: Literal["list_distributions"]
    ) -> paginator_scope.ListDistributionsPaginator:
        """
        Get Paginator for `list_distributions` operation.
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_paginator(
        self, operation_name: Literal["list_invalidations"]
    ) -> paginator_scope.ListInvalidationsPaginator:
        """
        Get Paginator for `list_invalidations` operation.
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_paginator(
        self, operation_name: Literal["list_streaming_distributions"]
    ) -> paginator_scope.ListStreamingDistributionsPaginator:
        """
        Get Paginator for `list_streaming_distributions` operation.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_paginator(self, operation_name: str) -> Boto3Paginator:
        """
        Create a paginator for an operation.

        :type operation_name: string
        :param operation_name: The operation name.  This is the same name
            as the method name on the client.  For example, if the
            method name is ``create_foo``, and you'd normally invoke the
            operation as ``client.create_foo(**kwargs)``, if the
            ``create_foo`` operation can be paginated, you can use the
            call ``client.get_paginator("create_foo")``.

        :raise OperationNotPageableError: Raised if the operation is not
            pageable.  You can use the ``client.can_paginate`` method to
            check if an operation is pageable.

        :rtype: L{botocore.paginate.Paginator}
        :return: A paginator object.
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_waiter(
        self, waiter_name: Literal["distribution_deployed"]
    ) -> waiter_scope.DistributionDeployedWaiter:
        """
        Get Waiter `distribution_deployed`.
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_waiter(
        self, waiter_name: Literal["invalidation_completed"]
    ) -> waiter_scope.InvalidationCompletedWaiter:
        """
        Get Waiter `invalidation_completed`.
        """

    @overload
    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_waiter(
        self, waiter_name: Literal["streaming_distribution_deployed"]
    ) -> waiter_scope.StreamingDistributionDeployedWaiter:
        """
        Get Waiter `streaming_distribution_deployed`.
        """

    # pylint: disable=arguments-differ,redefined-outer-name,redefined-builtin
    def get_waiter(self, waiter_name: str) -> Boto3Waiter:
        """
        Returns an object that can wait for some condition.

        :type waiter_name: str
        :param waiter_name: The name of the waiter to get. See the waiters
            section of the service docs for a list of available waiters.

        :returns: The specified waiter object.
        :rtype: botocore.waiter.Waiter
        """


class Exceptions:
    AccessDenied: Boto3ClientError
    BatchTooLarge: Boto3ClientError
    CNAMEAlreadyExists: Boto3ClientError
    CannotChangeImmutablePublicKeyFields: Boto3ClientError
    ClientError: Boto3ClientError
    CloudFrontOriginAccessIdentityAlreadyExists: Boto3ClientError
    CloudFrontOriginAccessIdentityInUse: Boto3ClientError
    DistributionAlreadyExists: Boto3ClientError
    DistributionNotDisabled: Boto3ClientError
    FieldLevelEncryptionConfigAlreadyExists: Boto3ClientError
    FieldLevelEncryptionConfigInUse: Boto3ClientError
    FieldLevelEncryptionProfileAlreadyExists: Boto3ClientError
    FieldLevelEncryptionProfileInUse: Boto3ClientError
    FieldLevelEncryptionProfileSizeExceeded: Boto3ClientError
    IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior: Boto3ClientError
    IllegalUpdate: Boto3ClientError
    InconsistentQuantities: Boto3ClientError
    InvalidArgument: Boto3ClientError
    InvalidDefaultRootObject: Boto3ClientError
    InvalidErrorCode: Boto3ClientError
    InvalidForwardCookies: Boto3ClientError
    InvalidGeoRestrictionParameter: Boto3ClientError
    InvalidHeadersForS3Origin: Boto3ClientError
    InvalidIfMatchVersion: Boto3ClientError
    InvalidLambdaFunctionAssociation: Boto3ClientError
    InvalidLocationCode: Boto3ClientError
    InvalidMinimumProtocolVersion: Boto3ClientError
    InvalidOrigin: Boto3ClientError
    InvalidOriginAccessIdentity: Boto3ClientError
    InvalidOriginKeepaliveTimeout: Boto3ClientError
    InvalidOriginReadTimeout: Boto3ClientError
    InvalidProtocolSettings: Boto3ClientError
    InvalidQueryStringParameters: Boto3ClientError
    InvalidRelativePath: Boto3ClientError
    InvalidRequiredProtocol: Boto3ClientError
    InvalidResponseCode: Boto3ClientError
    InvalidTTLOrder: Boto3ClientError
    InvalidTagging: Boto3ClientError
    InvalidViewerCertificate: Boto3ClientError
    InvalidWebACLId: Boto3ClientError
    MissingBody: Boto3ClientError
    NoSuchCloudFrontOriginAccessIdentity: Boto3ClientError
    NoSuchDistribution: Boto3ClientError
    NoSuchFieldLevelEncryptionConfig: Boto3ClientError
    NoSuchFieldLevelEncryptionProfile: Boto3ClientError
    NoSuchInvalidation: Boto3ClientError
    NoSuchOrigin: Boto3ClientError
    NoSuchPublicKey: Boto3ClientError
    NoSuchResource: Boto3ClientError
    NoSuchStreamingDistribution: Boto3ClientError
    PreconditionFailed: Boto3ClientError
    PublicKeyAlreadyExists: Boto3ClientError
    PublicKeyInUse: Boto3ClientError
    QueryArgProfileEmpty: Boto3ClientError
    StreamingDistributionAlreadyExists: Boto3ClientError
    StreamingDistributionNotDisabled: Boto3ClientError
    TooManyCacheBehaviors: Boto3ClientError
    TooManyCertificates: Boto3ClientError
    TooManyCloudFrontOriginAccessIdentities: Boto3ClientError
    TooManyCookieNamesInWhiteList: Boto3ClientError
    TooManyDistributionCNAMEs: Boto3ClientError
    TooManyDistributions: Boto3ClientError
    TooManyDistributionsAssociatedToFieldLevelEncryptionConfig: Boto3ClientError
    TooManyDistributionsWithLambdaAssociations: Boto3ClientError
    TooManyFieldLevelEncryptionConfigs: Boto3ClientError
    TooManyFieldLevelEncryptionContentTypeProfiles: Boto3ClientError
    TooManyFieldLevelEncryptionEncryptionEntities: Boto3ClientError
    TooManyFieldLevelEncryptionFieldPatterns: Boto3ClientError
    TooManyFieldLevelEncryptionProfiles: Boto3ClientError
    TooManyFieldLevelEncryptionQueryArgProfiles: Boto3ClientError
    TooManyHeadersInForwardedValues: Boto3ClientError
    TooManyInvalidationsInProgress: Boto3ClientError
    TooManyLambdaFunctionAssociations: Boto3ClientError
    TooManyOriginCustomHeaders: Boto3ClientError
    TooManyOriginGroupsPerDistribution: Boto3ClientError
    TooManyOrigins: Boto3ClientError
    TooManyPublicKeys: Boto3ClientError
    TooManyQueryStringParameters: Boto3ClientError
    TooManyStreamingDistributionCNAMEs: Boto3ClientError
    TooManyStreamingDistributions: Boto3ClientError
    TooManyTrustedSigners: Boto3ClientError
    TrustedSignerDoesNotExist: Boto3ClientError
