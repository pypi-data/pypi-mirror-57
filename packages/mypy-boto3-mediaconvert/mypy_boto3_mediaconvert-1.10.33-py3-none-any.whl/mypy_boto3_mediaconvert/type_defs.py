"Main interface for mediaconvert service type defs"
from __future__ import annotations

from datetime import datetime
import sys
from typing import Dict, List

if sys.version_info >= (3, 8):
    from typing import Literal
else:
    from typing_extensions import Literal
if sys.version_info >= (3, 8):
    from typing import TypedDict
else:
    from typing_extensions import TypedDict


ClientCreateJobAccelerationSettingsTypeDef = TypedDict(
    "ClientCreateJobAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
)

ClientCreateJobResponseJobAccelerationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientCreateJobResponseJobMessagesTypeDef = TypedDict(
    "ClientCreateJobResponseJobMessagesTypeDef",
    {"Info": List[str], "Warning": List[str]},
    total=False,
)

ClientCreateJobResponseJobOutputGroupDetailsOutputDetailsVideoDetailsTypeDef = TypedDict(
    "ClientCreateJobResponseJobOutputGroupDetailsOutputDetailsVideoDetailsTypeDef",
    {"HeightInPx": int, "WidthInPx": int},
    total=False,
)

ClientCreateJobResponseJobOutputGroupDetailsOutputDetailsTypeDef = TypedDict(
    "ClientCreateJobResponseJobOutputGroupDetailsOutputDetailsTypeDef",
    {
        "DurationInMs": int,
        "VideoDetails": ClientCreateJobResponseJobOutputGroupDetailsOutputDetailsVideoDetailsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobOutputGroupDetailsTypeDef = TypedDict(
    "ClientCreateJobResponseJobOutputGroupDetailsTypeDef",
    {"OutputDetails": List[ClientCreateJobResponseJobOutputGroupDetailsOutputDetailsTypeDef]},
    total=False,
)

ClientCreateJobResponseJobSettingsAvailBlankingTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ClientCreateJobResponseJobSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientCreateJobResponseJobSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientCreateJobResponseJobSettingsEsamTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientCreateJobResponseJobSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientCreateJobResponseJobSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientCreateJobResponseJobSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientCreateJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsCropTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsDecryptionSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsDecryptionSettingsTypeDef",
    {
        "DecryptionMode": Literal["AES_CTR", "AES_CBC", "AES_GCM"],
        "EncryptedDecryptionKey": str,
        "InitializationVector": str,
        "KmsKeyRegion": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobResponseJobSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsPositionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobResponseJobSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientCreateJobResponseJobSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsInputsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientCreateJobResponseJobSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[str, ClientCreateJobResponseJobSettingsInputsAudioSelectorsTypeDef],
        "CaptionSelectors": Dict[
            str, ClientCreateJobResponseJobSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ClientCreateJobResponseJobSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DecryptionSettings": ClientCreateJobResponseJobSettingsInputsDecryptionSettingsTypeDef,
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FileInput": str,
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientCreateJobResponseJobSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ClientCreateJobResponseJobSettingsInputsInputClippingsTypeDef],
        "Position": ClientCreateJobResponseJobSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "SupplementalImps": List[str],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientCreateJobResponseJobSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientCreateJobResponseJobSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientCreateJobResponseJobSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientCreateJobResponseJobSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientCreateJobResponseJobSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientCreateJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientCreateJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsOutputGroupsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientCreateJobResponseJobSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientCreateJobResponseJobSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientCreateJobResponseJobSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientCreateJobResponseJobSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientCreateJobResponseJobSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientCreateJobResponseJobSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobResponseJobSettingsTypeDef = TypedDict(
    "ClientCreateJobResponseJobSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientCreateJobResponseJobSettingsAvailBlankingTypeDef,
        "Esam": ClientCreateJobResponseJobSettingsEsamTypeDef,
        "Inputs": List[ClientCreateJobResponseJobSettingsInputsTypeDef],
        "MotionImageInserter": ClientCreateJobResponseJobSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientCreateJobResponseJobSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientCreateJobResponseJobSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientCreateJobResponseJobSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientCreateJobResponseJobSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientCreateJobResponseJobTimingTypeDef = TypedDict(
    "ClientCreateJobResponseJobTimingTypeDef",
    {"FinishTime": datetime, "StartTime": datetime, "SubmitTime": datetime},
    total=False,
)

ClientCreateJobResponseJobTypeDef = TypedDict(
    "ClientCreateJobResponseJobTypeDef",
    {
        "AccelerationSettings": ClientCreateJobResponseJobAccelerationSettingsTypeDef,
        "AccelerationStatus": Literal[
            "NOT_APPLICABLE", "IN_PROGRESS", "ACCELERATED", "NOT_ACCELERATED"
        ],
        "Arn": str,
        "BillingTagsSource": Literal["QUEUE", "PRESET", "JOB_TEMPLATE", "JOB"],
        "CreatedAt": datetime,
        "CurrentPhase": Literal["PROBING", "TRANSCODING", "UPLOADING"],
        "ErrorCode": int,
        "ErrorMessage": str,
        "Id": str,
        "JobPercentComplete": int,
        "JobTemplate": str,
        "Messages": ClientCreateJobResponseJobMessagesTypeDef,
        "OutputGroupDetails": List[ClientCreateJobResponseJobOutputGroupDetailsTypeDef],
        "Priority": int,
        "Queue": str,
        "RetryCount": int,
        "Role": str,
        "Settings": ClientCreateJobResponseJobSettingsTypeDef,
        "SimulateReservedQueue": Literal["DISABLED", "ENABLED"],
        "Status": Literal["SUBMITTED", "PROGRESSING", "COMPLETE", "CANCELED", "ERROR"],
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Timing": ClientCreateJobResponseJobTimingTypeDef,
        "UserMetadata": Dict[str, str],
    },
    total=False,
)

ClientCreateJobResponseTypeDef = TypedDict(
    "ClientCreateJobResponseTypeDef", {"Job": ClientCreateJobResponseJobTypeDef}, total=False
)

ClientCreateJobSettingsAvailBlankingTypeDef = TypedDict(
    "ClientCreateJobSettingsAvailBlankingTypeDef", {"AvailBlankingImage": str}, total=False
)

ClientCreateJobSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientCreateJobSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientCreateJobSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientCreateJobSettingsEsamSignalProcessingNotificationTypeDef", {"SccXml": str}, total=False
)

ClientCreateJobSettingsEsamTypeDef = TypedDict(
    "ClientCreateJobSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientCreateJobSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientCreateJobSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientCreateJobSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientCreateJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsInputsCropTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobSettingsInputsDecryptionSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsDecryptionSettingsTypeDef",
    {
        "DecryptionMode": Literal["AES_CTR", "AES_CBC", "AES_GCM"],
        "EncryptedDecryptionKey": str,
        "InitializationVector": str,
        "KmsKeyRegion": str,
    },
    total=False,
)

ClientCreateJobSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsImageInserterTypeDef",
    {"InsertableImages": List[ClientCreateJobSettingsInputsImageInserterInsertableImagesTypeDef]},
    total=False,
)

ClientCreateJobSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientCreateJobSettingsInputsPositionTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientCreateJobSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientCreateJobSettingsInputsTypeDef = TypedDict(
    "ClientCreateJobSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[str, ClientCreateJobSettingsInputsAudioSelectorGroupsTypeDef],
        "AudioSelectors": Dict[str, ClientCreateJobSettingsInputsAudioSelectorsTypeDef],
        "CaptionSelectors": Dict[str, ClientCreateJobSettingsInputsCaptionSelectorsTypeDef],
        "Crop": ClientCreateJobSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DecryptionSettings": ClientCreateJobSettingsInputsDecryptionSettingsTypeDef,
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FileInput": str,
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientCreateJobSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ClientCreateJobSettingsInputsInputClippingsTypeDef],
        "Position": ClientCreateJobSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "SupplementalImps": List[str],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientCreateJobSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientCreateJobSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientCreateJobSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientCreateJobSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientCreateJobSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientCreateJobSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientCreateJobSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientCreateJobSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientCreateJobSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientCreateJobSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {"HlsSettings": ClientCreateJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientCreateJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientCreateJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientCreateJobSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientCreateJobSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientCreateJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientCreateJobSettingsOutputGroupsTypeDef = TypedDict(
    "ClientCreateJobSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientCreateJobSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientCreateJobSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientCreateJobSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientCreateJobSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientCreateJobSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientCreateJobSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientCreateJobSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientCreateJobSettingsTimedMetadataInsertionTypeDef",
    {"Id3Insertions": List[ClientCreateJobSettingsTimedMetadataInsertionId3InsertionsTypeDef]},
    total=False,
)

ClientCreateJobSettingsTypeDef = TypedDict(
    "ClientCreateJobSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientCreateJobSettingsAvailBlankingTypeDef,
        "Esam": ClientCreateJobSettingsEsamTypeDef,
        "Inputs": List[ClientCreateJobSettingsInputsTypeDef],
        "MotionImageInserter": ClientCreateJobSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientCreateJobSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientCreateJobSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientCreateJobSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientCreateJobSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateAccelerationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
)

ClientCreateJobTemplateResponseJobTemplateAccelerationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsEsamTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientCreateJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientCreateJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsCropTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientCreateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsInputsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[
            str, ClientCreateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": Dict[
            str, ClientCreateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ClientCreateJobTemplateResponseJobTemplateSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientCreateJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef,
        "InputClippings": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef
        ],
        "Position": ClientCreateJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientCreateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientCreateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientCreateJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef,
        "Esam": ClientCreateJobTemplateResponseJobTemplateSettingsEsamTypeDef,
        "Inputs": List[ClientCreateJobTemplateResponseJobTemplateSettingsInputsTypeDef],
        "MotionImageInserter": ClientCreateJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientCreateJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientCreateJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientCreateJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientCreateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateResponseJobTemplateTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseJobTemplateTypeDef",
    {
        "AccelerationSettings": ClientCreateJobTemplateResponseJobTemplateAccelerationSettingsTypeDef,
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Priority": int,
        "Queue": str,
        "Settings": ClientCreateJobTemplateResponseJobTemplateSettingsTypeDef,
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientCreateJobTemplateResponseTypeDef = TypedDict(
    "ClientCreateJobTemplateResponseTypeDef",
    {"JobTemplate": ClientCreateJobTemplateResponseJobTemplateTypeDef},
    total=False,
)

ClientCreateJobTemplateSettingsAvailBlankingTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsAvailBlankingTypeDef", {"AvailBlankingImage": str}, total=False
)

ClientCreateJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientCreateJobTemplateSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientCreateJobTemplateSettingsEsamTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientCreateJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientCreateJobTemplateSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientCreateJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientCreateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsCropTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientCreateJobTemplateSettingsInputsPositionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientCreateJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsInputsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientCreateJobTemplateSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[str, ClientCreateJobTemplateSettingsInputsAudioSelectorsTypeDef],
        "CaptionSelectors": Dict[str, ClientCreateJobTemplateSettingsInputsCaptionSelectorsTypeDef],
        "Crop": ClientCreateJobTemplateSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientCreateJobTemplateSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ClientCreateJobTemplateSettingsInputsInputClippingsTypeDef],
        "Position": ClientCreateJobTemplateSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientCreateJobTemplateSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientCreateJobTemplateSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientCreateJobTemplateSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientCreateJobTemplateSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientCreateJobTemplateSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientCreateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientCreateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientCreateJobTemplateSettingsOutputGroupsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientCreateJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientCreateJobTemplateSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientCreateJobTemplateSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientCreateJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientCreateJobTemplateSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientCreateJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientCreateJobTemplateSettingsTypeDef = TypedDict(
    "ClientCreateJobTemplateSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientCreateJobTemplateSettingsAvailBlankingTypeDef,
        "Esam": ClientCreateJobTemplateSettingsEsamTypeDef,
        "Inputs": List[ClientCreateJobTemplateSettingsInputsTypeDef],
        "MotionImageInserter": ClientCreateJobTemplateSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientCreateJobTemplateSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientCreateJobTemplateSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientCreateJobTemplateSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientCreateJobTemplateSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientCreatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ClientCreatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsContainerSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientCreatePresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientCreatePresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsVideoDescriptionTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientCreatePresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientCreatePresetResponsePresetSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientCreatePresetResponsePresetSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientCreatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientCreatePresetResponsePresetSettingsTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientCreatePresetResponsePresetSettingsAudioDescriptionsTypeDef],
        "CaptionDescriptions": List[
            ClientCreatePresetResponsePresetSettingsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientCreatePresetResponsePresetSettingsContainerSettingsTypeDef,
        "VideoDescription": ClientCreatePresetResponsePresetSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientCreatePresetResponsePresetTypeDef = TypedDict(
    "ClientCreatePresetResponsePresetTypeDef",
    {
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Settings": ClientCreatePresetResponsePresetSettingsTypeDef,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientCreatePresetResponseTypeDef = TypedDict(
    "ClientCreatePresetResponseTypeDef",
    {"Preset": ClientCreatePresetResponsePresetTypeDef},
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientCreatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientCreatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreatePresetSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreatePresetSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreatePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreatePresetSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientCreatePresetSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreatePresetSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ClientCreatePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientCreatePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientCreatePresetSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientCreatePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientCreatePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientCreatePresetSettingsContainerSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientCreatePresetSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientCreatePresetSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientCreatePresetSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientCreatePresetSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientCreatePresetSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientCreatePresetSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientCreatePresetSettingsVideoDescriptionTypeDef = TypedDict(
    "ClientCreatePresetSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientCreatePresetSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientCreatePresetSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientCreatePresetSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientCreatePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientCreatePresetSettingsTypeDef = TypedDict(
    "ClientCreatePresetSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientCreatePresetSettingsAudioDescriptionsTypeDef],
        "CaptionDescriptions": List[ClientCreatePresetSettingsCaptionDescriptionsTypeDef],
        "ContainerSettings": ClientCreatePresetSettingsContainerSettingsTypeDef,
        "VideoDescription": ClientCreatePresetSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientCreateQueueReservationPlanSettingsTypeDef = TypedDict(
    "ClientCreateQueueReservationPlanSettingsTypeDef",
    {"Commitment": str, "RenewalType": Literal["AUTO_RENEW", "EXPIRE"], "ReservedSlots": int},
)

ClientCreateQueueResponseQueueReservationPlanTypeDef = TypedDict(
    "ClientCreateQueueResponseQueueReservationPlanTypeDef",
    {
        "Commitment": str,
        "ExpiresAt": datetime,
        "PurchasedAt": datetime,
        "RenewalType": Literal["AUTO_RENEW", "EXPIRE"],
        "ReservedSlots": int,
        "Status": Literal["ACTIVE", "EXPIRED"],
    },
    total=False,
)

ClientCreateQueueResponseQueueTypeDef = TypedDict(
    "ClientCreateQueueResponseQueueTypeDef",
    {
        "Arn": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "PricingPlan": Literal["ON_DEMAND", "RESERVED"],
        "ProgressingJobsCount": int,
        "ReservationPlan": ClientCreateQueueResponseQueueReservationPlanTypeDef,
        "Status": Literal["ACTIVE", "PAUSED"],
        "SubmittedJobsCount": int,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientCreateQueueResponseTypeDef = TypedDict(
    "ClientCreateQueueResponseTypeDef",
    {"Queue": ClientCreateQueueResponseQueueTypeDef},
    total=False,
)

ClientDescribeEndpointsResponseEndpointsTypeDef = TypedDict(
    "ClientDescribeEndpointsResponseEndpointsTypeDef", {"Url": str}, total=False
)

ClientDescribeEndpointsResponseTypeDef = TypedDict(
    "ClientDescribeEndpointsResponseTypeDef",
    {"Endpoints": List[ClientDescribeEndpointsResponseEndpointsTypeDef], "NextToken": str},
    total=False,
)

ClientGetJobResponseJobAccelerationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientGetJobResponseJobMessagesTypeDef = TypedDict(
    "ClientGetJobResponseJobMessagesTypeDef", {"Info": List[str], "Warning": List[str]}, total=False
)

ClientGetJobResponseJobOutputGroupDetailsOutputDetailsVideoDetailsTypeDef = TypedDict(
    "ClientGetJobResponseJobOutputGroupDetailsOutputDetailsVideoDetailsTypeDef",
    {"HeightInPx": int, "WidthInPx": int},
    total=False,
)

ClientGetJobResponseJobOutputGroupDetailsOutputDetailsTypeDef = TypedDict(
    "ClientGetJobResponseJobOutputGroupDetailsOutputDetailsTypeDef",
    {
        "DurationInMs": int,
        "VideoDetails": ClientGetJobResponseJobOutputGroupDetailsOutputDetailsVideoDetailsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobOutputGroupDetailsTypeDef = TypedDict(
    "ClientGetJobResponseJobOutputGroupDetailsTypeDef",
    {"OutputDetails": List[ClientGetJobResponseJobOutputGroupDetailsOutputDetailsTypeDef]},
    total=False,
)

ClientGetJobResponseJobSettingsAvailBlankingTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsAvailBlankingTypeDef", {"AvailBlankingImage": str}, total=False
)

ClientGetJobResponseJobSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientGetJobResponseJobSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientGetJobResponseJobSettingsEsamTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientGetJobResponseJobSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientGetJobResponseJobSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientGetJobResponseJobSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientGetJobResponseJobSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsCropTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobResponseJobSettingsInputsDecryptionSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsDecryptionSettingsTypeDef",
    {
        "DecryptionMode": Literal["AES_CTR", "AES_CBC", "AES_GCM"],
        "EncryptedDecryptionKey": str,
        "InitializationVector": str,
        "KmsKeyRegion": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientGetJobResponseJobSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientGetJobResponseJobSettingsInputsPositionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobResponseJobSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientGetJobResponseJobSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsInputsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientGetJobResponseJobSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[str, ClientGetJobResponseJobSettingsInputsAudioSelectorsTypeDef],
        "CaptionSelectors": Dict[str, ClientGetJobResponseJobSettingsInputsCaptionSelectorsTypeDef],
        "Crop": ClientGetJobResponseJobSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DecryptionSettings": ClientGetJobResponseJobSettingsInputsDecryptionSettingsTypeDef,
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FileInput": str,
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientGetJobResponseJobSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ClientGetJobResponseJobSettingsInputsInputClippingsTypeDef],
        "Position": ClientGetJobResponseJobSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "SupplementalImps": List[str],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientGetJobResponseJobSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientGetJobResponseJobSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientGetJobResponseJobSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientGetJobResponseJobSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientGetJobResponseJobSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientGetJobResponseJobSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientGetJobResponseJobSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobSettingsOutputGroupsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientGetJobResponseJobSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientGetJobResponseJobSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientGetJobResponseJobSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientGetJobResponseJobSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientGetJobResponseJobSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientGetJobResponseJobSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientGetJobResponseJobSettingsTypeDef = TypedDict(
    "ClientGetJobResponseJobSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientGetJobResponseJobSettingsAvailBlankingTypeDef,
        "Esam": ClientGetJobResponseJobSettingsEsamTypeDef,
        "Inputs": List[ClientGetJobResponseJobSettingsInputsTypeDef],
        "MotionImageInserter": ClientGetJobResponseJobSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientGetJobResponseJobSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientGetJobResponseJobSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientGetJobResponseJobSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientGetJobResponseJobSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientGetJobResponseJobTimingTypeDef = TypedDict(
    "ClientGetJobResponseJobTimingTypeDef",
    {"FinishTime": datetime, "StartTime": datetime, "SubmitTime": datetime},
    total=False,
)

ClientGetJobResponseJobTypeDef = TypedDict(
    "ClientGetJobResponseJobTypeDef",
    {
        "AccelerationSettings": ClientGetJobResponseJobAccelerationSettingsTypeDef,
        "AccelerationStatus": Literal[
            "NOT_APPLICABLE", "IN_PROGRESS", "ACCELERATED", "NOT_ACCELERATED"
        ],
        "Arn": str,
        "BillingTagsSource": Literal["QUEUE", "PRESET", "JOB_TEMPLATE", "JOB"],
        "CreatedAt": datetime,
        "CurrentPhase": Literal["PROBING", "TRANSCODING", "UPLOADING"],
        "ErrorCode": int,
        "ErrorMessage": str,
        "Id": str,
        "JobPercentComplete": int,
        "JobTemplate": str,
        "Messages": ClientGetJobResponseJobMessagesTypeDef,
        "OutputGroupDetails": List[ClientGetJobResponseJobOutputGroupDetailsTypeDef],
        "Priority": int,
        "Queue": str,
        "RetryCount": int,
        "Role": str,
        "Settings": ClientGetJobResponseJobSettingsTypeDef,
        "SimulateReservedQueue": Literal["DISABLED", "ENABLED"],
        "Status": Literal["SUBMITTED", "PROGRESSING", "COMPLETE", "CANCELED", "ERROR"],
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Timing": ClientGetJobResponseJobTimingTypeDef,
        "UserMetadata": Dict[str, str],
    },
    total=False,
)

ClientGetJobResponseTypeDef = TypedDict(
    "ClientGetJobResponseTypeDef", {"Job": ClientGetJobResponseJobTypeDef}, total=False
)

ClientGetJobTemplateResponseJobTemplateAccelerationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsEsamTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientGetJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientGetJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsCropTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientGetJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientGetJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsInputsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[
            str, ClientGetJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": Dict[
            str, ClientGetJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ClientGetJobTemplateResponseJobTemplateSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientGetJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef,
        "InputClippings": List[
            ClientGetJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef
        ],
        "Position": ClientGetJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientGetJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientGetJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateSettingsTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientGetJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef,
        "Esam": ClientGetJobTemplateResponseJobTemplateSettingsEsamTypeDef,
        "Inputs": List[ClientGetJobTemplateResponseJobTemplateSettingsInputsTypeDef],
        "MotionImageInserter": ClientGetJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientGetJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientGetJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientGetJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientGetJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientGetJobTemplateResponseJobTemplateTypeDef = TypedDict(
    "ClientGetJobTemplateResponseJobTemplateTypeDef",
    {
        "AccelerationSettings": ClientGetJobTemplateResponseJobTemplateAccelerationSettingsTypeDef,
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Priority": int,
        "Queue": str,
        "Settings": ClientGetJobTemplateResponseJobTemplateSettingsTypeDef,
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientGetJobTemplateResponseTypeDef = TypedDict(
    "ClientGetJobTemplateResponseTypeDef",
    {"JobTemplate": ClientGetJobTemplateResponseJobTemplateTypeDef},
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientGetPresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ClientGetPresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsContainerSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientGetPresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientGetPresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientGetPresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientGetPresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientGetPresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientGetPresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsVideoDescriptionTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientGetPresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientGetPresetResponsePresetSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientGetPresetResponsePresetSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientGetPresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientGetPresetResponsePresetSettingsTypeDef = TypedDict(
    "ClientGetPresetResponsePresetSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientGetPresetResponsePresetSettingsAudioDescriptionsTypeDef],
        "CaptionDescriptions": List[
            ClientGetPresetResponsePresetSettingsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientGetPresetResponsePresetSettingsContainerSettingsTypeDef,
        "VideoDescription": ClientGetPresetResponsePresetSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientGetPresetResponsePresetTypeDef = TypedDict(
    "ClientGetPresetResponsePresetTypeDef",
    {
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Settings": ClientGetPresetResponsePresetSettingsTypeDef,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientGetPresetResponseTypeDef = TypedDict(
    "ClientGetPresetResponseTypeDef", {"Preset": ClientGetPresetResponsePresetTypeDef}, total=False
)

ClientGetQueueResponseQueueReservationPlanTypeDef = TypedDict(
    "ClientGetQueueResponseQueueReservationPlanTypeDef",
    {
        "Commitment": str,
        "ExpiresAt": datetime,
        "PurchasedAt": datetime,
        "RenewalType": Literal["AUTO_RENEW", "EXPIRE"],
        "ReservedSlots": int,
        "Status": Literal["ACTIVE", "EXPIRED"],
    },
    total=False,
)

ClientGetQueueResponseQueueTypeDef = TypedDict(
    "ClientGetQueueResponseQueueTypeDef",
    {
        "Arn": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "PricingPlan": Literal["ON_DEMAND", "RESERVED"],
        "ProgressingJobsCount": int,
        "ReservationPlan": ClientGetQueueResponseQueueReservationPlanTypeDef,
        "Status": Literal["ACTIVE", "PAUSED"],
        "SubmittedJobsCount": int,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientGetQueueResponseTypeDef = TypedDict(
    "ClientGetQueueResponseTypeDef", {"Queue": ClientGetQueueResponseQueueTypeDef}, total=False
)

ClientListJobTemplatesResponseJobTemplatesAccelerationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsAvailBlankingTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsEsamTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientListJobTemplatesResponseJobTemplatesSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientListJobTemplatesResponseJobTemplatesSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsCropTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsPositionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientListJobTemplatesResponseJobTemplatesSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsInputsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[
            str, ClientListJobTemplatesResponseJobTemplatesSettingsInputsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": Dict[
            str, ClientListJobTemplatesResponseJobTemplatesSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ClientListJobTemplatesResponseJobTemplatesSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientListJobTemplatesResponseJobTemplatesSettingsInputsImageInserterTypeDef,
        "InputClippings": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsInputsInputClippingsTypeDef
        ],
        "Position": ClientListJobTemplatesResponseJobTemplatesSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientListJobTemplatesResponseJobTemplatesSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientListJobTemplatesResponseJobTemplatesSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesSettingsTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientListJobTemplatesResponseJobTemplatesSettingsAvailBlankingTypeDef,
        "Esam": ClientListJobTemplatesResponseJobTemplatesSettingsEsamTypeDef,
        "Inputs": List[ClientListJobTemplatesResponseJobTemplatesSettingsInputsTypeDef],
        "MotionImageInserter": ClientListJobTemplatesResponseJobTemplatesSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientListJobTemplatesResponseJobTemplatesSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientListJobTemplatesResponseJobTemplatesSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientListJobTemplatesResponseJobTemplatesSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientListJobTemplatesResponseJobTemplatesSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientListJobTemplatesResponseJobTemplatesTypeDef = TypedDict(
    "ClientListJobTemplatesResponseJobTemplatesTypeDef",
    {
        "AccelerationSettings": ClientListJobTemplatesResponseJobTemplatesAccelerationSettingsTypeDef,
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Priority": int,
        "Queue": str,
        "Settings": ClientListJobTemplatesResponseJobTemplatesSettingsTypeDef,
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientListJobTemplatesResponseTypeDef = TypedDict(
    "ClientListJobTemplatesResponseTypeDef",
    {"JobTemplates": List[ClientListJobTemplatesResponseJobTemplatesTypeDef], "NextToken": str},
    total=False,
)

ClientListJobsResponseJobsAccelerationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientListJobsResponseJobsMessagesTypeDef = TypedDict(
    "ClientListJobsResponseJobsMessagesTypeDef",
    {"Info": List[str], "Warning": List[str]},
    total=False,
)

ClientListJobsResponseJobsOutputGroupDetailsOutputDetailsVideoDetailsTypeDef = TypedDict(
    "ClientListJobsResponseJobsOutputGroupDetailsOutputDetailsVideoDetailsTypeDef",
    {"HeightInPx": int, "WidthInPx": int},
    total=False,
)

ClientListJobsResponseJobsOutputGroupDetailsOutputDetailsTypeDef = TypedDict(
    "ClientListJobsResponseJobsOutputGroupDetailsOutputDetailsTypeDef",
    {
        "DurationInMs": int,
        "VideoDetails": ClientListJobsResponseJobsOutputGroupDetailsOutputDetailsVideoDetailsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsOutputGroupDetailsTypeDef = TypedDict(
    "ClientListJobsResponseJobsOutputGroupDetailsTypeDef",
    {"OutputDetails": List[ClientListJobsResponseJobsOutputGroupDetailsOutputDetailsTypeDef]},
    total=False,
)

ClientListJobsResponseJobsSettingsAvailBlankingTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ClientListJobsResponseJobsSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientListJobsResponseJobsSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientListJobsResponseJobsSettingsEsamTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientListJobsResponseJobsSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientListJobsResponseJobsSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientListJobsResponseJobsSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientListJobsResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsCropTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsDecryptionSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsDecryptionSettingsTypeDef",
    {
        "DecryptionMode": Literal["AES_CTR", "AES_CBC", "AES_GCM"],
        "EncryptedDecryptionKey": str,
        "InitializationVector": str,
        "KmsKeyRegion": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientListJobsResponseJobsSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsPositionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobsResponseJobsSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientListJobsResponseJobsSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsInputsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientListJobsResponseJobsSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[str, ClientListJobsResponseJobsSettingsInputsAudioSelectorsTypeDef],
        "CaptionSelectors": Dict[
            str, ClientListJobsResponseJobsSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ClientListJobsResponseJobsSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DecryptionSettings": ClientListJobsResponseJobsSettingsInputsDecryptionSettingsTypeDef,
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FileInput": str,
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientListJobsResponseJobsSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ClientListJobsResponseJobsSettingsInputsInputClippingsTypeDef],
        "Position": ClientListJobsResponseJobsSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "SupplementalImps": List[str],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientListJobsResponseJobsSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientListJobsResponseJobsSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientListJobsResponseJobsSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientListJobsResponseJobsSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientListJobsResponseJobsSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientListJobsResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientListJobsResponseJobsSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsOutputGroupsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientListJobsResponseJobsSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientListJobsResponseJobsSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientListJobsResponseJobsSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientListJobsResponseJobsSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientListJobsResponseJobsSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientListJobsResponseJobsSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientListJobsResponseJobsSettingsTypeDef = TypedDict(
    "ClientListJobsResponseJobsSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientListJobsResponseJobsSettingsAvailBlankingTypeDef,
        "Esam": ClientListJobsResponseJobsSettingsEsamTypeDef,
        "Inputs": List[ClientListJobsResponseJobsSettingsInputsTypeDef],
        "MotionImageInserter": ClientListJobsResponseJobsSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientListJobsResponseJobsSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientListJobsResponseJobsSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientListJobsResponseJobsSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientListJobsResponseJobsSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientListJobsResponseJobsTimingTypeDef = TypedDict(
    "ClientListJobsResponseJobsTimingTypeDef",
    {"FinishTime": datetime, "StartTime": datetime, "SubmitTime": datetime},
    total=False,
)

ClientListJobsResponseJobsTypeDef = TypedDict(
    "ClientListJobsResponseJobsTypeDef",
    {
        "AccelerationSettings": ClientListJobsResponseJobsAccelerationSettingsTypeDef,
        "AccelerationStatus": Literal[
            "NOT_APPLICABLE", "IN_PROGRESS", "ACCELERATED", "NOT_ACCELERATED"
        ],
        "Arn": str,
        "BillingTagsSource": Literal["QUEUE", "PRESET", "JOB_TEMPLATE", "JOB"],
        "CreatedAt": datetime,
        "CurrentPhase": Literal["PROBING", "TRANSCODING", "UPLOADING"],
        "ErrorCode": int,
        "ErrorMessage": str,
        "Id": str,
        "JobPercentComplete": int,
        "JobTemplate": str,
        "Messages": ClientListJobsResponseJobsMessagesTypeDef,
        "OutputGroupDetails": List[ClientListJobsResponseJobsOutputGroupDetailsTypeDef],
        "Priority": int,
        "Queue": str,
        "RetryCount": int,
        "Role": str,
        "Settings": ClientListJobsResponseJobsSettingsTypeDef,
        "SimulateReservedQueue": Literal["DISABLED", "ENABLED"],
        "Status": Literal["SUBMITTED", "PROGRESSING", "COMPLETE", "CANCELED", "ERROR"],
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Timing": ClientListJobsResponseJobsTimingTypeDef,
        "UserMetadata": Dict[str, str],
    },
    total=False,
)

ClientListJobsResponseTypeDef = TypedDict(
    "ClientListJobsResponseTypeDef",
    {"Jobs": List[ClientListJobsResponseJobsTypeDef], "NextToken": str},
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientListPresetsResponsePresetsSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ClientListPresetsResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsContainerSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientListPresetsResponsePresetsSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientListPresetsResponsePresetsSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsVideoDescriptionTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientListPresetsResponsePresetsSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientListPresetsResponsePresetsSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientListPresetsResponsePresetsSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientListPresetsResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientListPresetsResponsePresetsSettingsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientListPresetsResponsePresetsSettingsAudioDescriptionsTypeDef],
        "CaptionDescriptions": List[
            ClientListPresetsResponsePresetsSettingsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientListPresetsResponsePresetsSettingsContainerSettingsTypeDef,
        "VideoDescription": ClientListPresetsResponsePresetsSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientListPresetsResponsePresetsTypeDef = TypedDict(
    "ClientListPresetsResponsePresetsTypeDef",
    {
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Settings": ClientListPresetsResponsePresetsSettingsTypeDef,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientListPresetsResponseTypeDef = TypedDict(
    "ClientListPresetsResponseTypeDef",
    {"NextToken": str, "Presets": List[ClientListPresetsResponsePresetsTypeDef]},
    total=False,
)

ClientListQueuesResponseQueuesReservationPlanTypeDef = TypedDict(
    "ClientListQueuesResponseQueuesReservationPlanTypeDef",
    {
        "Commitment": str,
        "ExpiresAt": datetime,
        "PurchasedAt": datetime,
        "RenewalType": Literal["AUTO_RENEW", "EXPIRE"],
        "ReservedSlots": int,
        "Status": Literal["ACTIVE", "EXPIRED"],
    },
    total=False,
)

ClientListQueuesResponseQueuesTypeDef = TypedDict(
    "ClientListQueuesResponseQueuesTypeDef",
    {
        "Arn": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "PricingPlan": Literal["ON_DEMAND", "RESERVED"],
        "ProgressingJobsCount": int,
        "ReservationPlan": ClientListQueuesResponseQueuesReservationPlanTypeDef,
        "Status": Literal["ACTIVE", "PAUSED"],
        "SubmittedJobsCount": int,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientListQueuesResponseTypeDef = TypedDict(
    "ClientListQueuesResponseTypeDef",
    {"NextToken": str, "Queues": List[ClientListQueuesResponseQueuesTypeDef]},
    total=False,
)

ClientListTagsForResourceResponseResourceTagsTypeDef = TypedDict(
    "ClientListTagsForResourceResponseResourceTagsTypeDef",
    {"Arn": str, "Tags": Dict[str, str]},
    total=False,
)

ClientListTagsForResourceResponseTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTypeDef",
    {"ResourceTags": ClientListTagsForResourceResponseResourceTagsTypeDef},
    total=False,
)

ClientUpdateJobTemplateAccelerationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
)

ClientUpdateJobTemplateResponseJobTemplateAccelerationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsEsamTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientUpdateJobTemplateResponseJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientUpdateJobTemplateResponseJobTemplateSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCropTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsInputsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[
            str, ClientUpdateJobTemplateResponseJobTemplateSettingsInputsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": Dict[
            str, ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsImageInserterTypeDef,
        "InputClippings": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsInputsInputClippingsTypeDef
        ],
        "Position": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientUpdateJobTemplateResponseJobTemplateSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientUpdateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientUpdateJobTemplateResponseJobTemplateSettingsAvailBlankingTypeDef,
        "Esam": ClientUpdateJobTemplateResponseJobTemplateSettingsEsamTypeDef,
        "Inputs": List[ClientUpdateJobTemplateResponseJobTemplateSettingsInputsTypeDef],
        "MotionImageInserter": ClientUpdateJobTemplateResponseJobTemplateSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientUpdateJobTemplateResponseJobTemplateSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientUpdateJobTemplateResponseJobTemplateSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientUpdateJobTemplateResponseJobTemplateSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientUpdateJobTemplateResponseJobTemplateSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateResponseJobTemplateTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseJobTemplateTypeDef",
    {
        "AccelerationSettings": ClientUpdateJobTemplateResponseJobTemplateAccelerationSettingsTypeDef,
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Priority": int,
        "Queue": str,
        "Settings": ClientUpdateJobTemplateResponseJobTemplateSettingsTypeDef,
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientUpdateJobTemplateResponseTypeDef = TypedDict(
    "ClientUpdateJobTemplateResponseTypeDef",
    {"JobTemplate": ClientUpdateJobTemplateResponseJobTemplateTypeDef},
    total=False,
)

ClientUpdateJobTemplateSettingsAvailBlankingTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsAvailBlankingTypeDef", {"AvailBlankingImage": str}, total=False
)

ClientUpdateJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ClientUpdateJobTemplateSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ClientUpdateJobTemplateSettingsEsamTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ClientUpdateJobTemplateSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ClientUpdateJobTemplateSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ClientUpdateJobTemplateSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ClientUpdateJobTemplateSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsCropTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsImageInserterTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientUpdateJobTemplateSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsInputClippingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsPositionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ClientUpdateJobTemplateSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsInputsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ClientUpdateJobTemplateSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[str, ClientUpdateJobTemplateSettingsInputsAudioSelectorsTypeDef],
        "CaptionSelectors": Dict[str, ClientUpdateJobTemplateSettingsInputsCaptionSelectorsTypeDef],
        "Crop": ClientUpdateJobTemplateSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ClientUpdateJobTemplateSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ClientUpdateJobTemplateSettingsInputsInputClippingsTypeDef],
        "Position": ClientUpdateJobTemplateSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ClientUpdateJobTemplateSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ClientUpdateJobTemplateSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ClientUpdateJobTemplateSettingsMotionImageInserterTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ClientUpdateJobTemplateSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ClientUpdateJobTemplateSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ClientUpdateJobTemplateSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ClientUpdateJobTemplateSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsOutputGroupsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ClientUpdateJobTemplateSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientUpdateJobTemplateSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientUpdateJobTemplateSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ClientUpdateJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ClientUpdateJobTemplateSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ClientUpdateJobTemplateSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ClientUpdateJobTemplateSettingsTypeDef = TypedDict(
    "ClientUpdateJobTemplateSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ClientUpdateJobTemplateSettingsAvailBlankingTypeDef,
        "Esam": ClientUpdateJobTemplateSettingsEsamTypeDef,
        "Inputs": List[ClientUpdateJobTemplateSettingsInputsTypeDef],
        "MotionImageInserter": ClientUpdateJobTemplateSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ClientUpdateJobTemplateSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientUpdateJobTemplateSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientUpdateJobTemplateSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ClientUpdateJobTemplateSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientUpdatePresetResponsePresetSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientUpdatePresetResponsePresetSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientUpdatePresetResponsePresetSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsVideoDescriptionTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientUpdatePresetResponsePresetSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientUpdatePresetResponsePresetSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientUpdatePresetResponsePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientUpdatePresetResponsePresetSettingsTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientUpdatePresetResponsePresetSettingsAudioDescriptionsTypeDef],
        "CaptionDescriptions": List[
            ClientUpdatePresetResponsePresetSettingsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ClientUpdatePresetResponsePresetSettingsContainerSettingsTypeDef,
        "VideoDescription": ClientUpdatePresetResponsePresetSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientUpdatePresetResponsePresetTypeDef = TypedDict(
    "ClientUpdatePresetResponsePresetTypeDef",
    {
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Settings": ClientUpdatePresetResponsePresetSettingsTypeDef,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientUpdatePresetResponseTypeDef = TypedDict(
    "ClientUpdatePresetResponseTypeDef",
    {"Preset": ClientUpdatePresetResponsePresetTypeDef},
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdatePresetSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdatePresetSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdatePresetSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ClientUpdatePresetSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ClientUpdatePresetSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ClientUpdatePresetSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ClientUpdatePresetSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ClientUpdatePresetSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ClientUpdatePresetSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ClientUpdatePresetSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ClientUpdatePresetSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ClientUpdatePresetSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ClientUpdatePresetSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ClientUpdatePresetSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ClientUpdatePresetSettingsVideoDescriptionTypeDef = TypedDict(
    "ClientUpdatePresetSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ClientUpdatePresetSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ClientUpdatePresetSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ClientUpdatePresetSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ClientUpdatePresetSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ClientUpdatePresetSettingsTypeDef = TypedDict(
    "ClientUpdatePresetSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientUpdatePresetSettingsAudioDescriptionsTypeDef],
        "CaptionDescriptions": List[ClientUpdatePresetSettingsCaptionDescriptionsTypeDef],
        "ContainerSettings": ClientUpdatePresetSettingsContainerSettingsTypeDef,
        "VideoDescription": ClientUpdatePresetSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ClientUpdateQueueReservationPlanSettingsTypeDef = TypedDict(
    "ClientUpdateQueueReservationPlanSettingsTypeDef",
    {"Commitment": str, "RenewalType": Literal["AUTO_RENEW", "EXPIRE"], "ReservedSlots": int},
)

ClientUpdateQueueResponseQueueReservationPlanTypeDef = TypedDict(
    "ClientUpdateQueueResponseQueueReservationPlanTypeDef",
    {
        "Commitment": str,
        "ExpiresAt": datetime,
        "PurchasedAt": datetime,
        "RenewalType": Literal["AUTO_RENEW", "EXPIRE"],
        "ReservedSlots": int,
        "Status": Literal["ACTIVE", "EXPIRED"],
    },
    total=False,
)

ClientUpdateQueueResponseQueueTypeDef = TypedDict(
    "ClientUpdateQueueResponseQueueTypeDef",
    {
        "Arn": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "PricingPlan": Literal["ON_DEMAND", "RESERVED"],
        "ProgressingJobsCount": int,
        "ReservationPlan": ClientUpdateQueueResponseQueueReservationPlanTypeDef,
        "Status": Literal["ACTIVE", "PAUSED"],
        "SubmittedJobsCount": int,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ClientUpdateQueueResponseTypeDef = TypedDict(
    "ClientUpdateQueueResponseTypeDef",
    {"Queue": ClientUpdateQueueResponseQueueTypeDef},
    total=False,
)

DescribeEndpointsPaginatePaginationConfigTypeDef = TypedDict(
    "DescribeEndpointsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)

DescribeEndpointsPaginateResponseEndpointsTypeDef = TypedDict(
    "DescribeEndpointsPaginateResponseEndpointsTypeDef", {"Url": str}, total=False
)

DescribeEndpointsPaginateResponseTypeDef = TypedDict(
    "DescribeEndpointsPaginateResponseTypeDef",
    {"Endpoints": List[DescribeEndpointsPaginateResponseEndpointsTypeDef]},
    total=False,
)

ListJobTemplatesPaginatePaginationConfigTypeDef = TypedDict(
    "ListJobTemplatesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesAccelerationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsAvailBlankingTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCropTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsImageInserterTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsInputClippingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsPositionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str,
            ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorGroupsTypeDef,
        ],
        "AudioSelectors": Dict[
            str, ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": Dict[
            str, ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsImageInserterTypeDef,
        "InputClippings": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsInputClippingsTypeDef
        ],
        "Position": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsNielsenConfigurationTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsTimecodeConfigTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesSettingsTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ListJobTemplatesPaginateResponseJobTemplatesSettingsAvailBlankingTypeDef,
        "Esam": ListJobTemplatesPaginateResponseJobTemplatesSettingsEsamTypeDef,
        "Inputs": List[ListJobTemplatesPaginateResponseJobTemplatesSettingsInputsTypeDef],
        "MotionImageInserter": ListJobTemplatesPaginateResponseJobTemplatesSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ListJobTemplatesPaginateResponseJobTemplatesSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[
            ListJobTemplatesPaginateResponseJobTemplatesSettingsOutputGroupsTypeDef
        ],
        "TimecodeConfig": ListJobTemplatesPaginateResponseJobTemplatesSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ListJobTemplatesPaginateResponseJobTemplatesSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ListJobTemplatesPaginateResponseJobTemplatesTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseJobTemplatesTypeDef",
    {
        "AccelerationSettings": ListJobTemplatesPaginateResponseJobTemplatesAccelerationSettingsTypeDef,
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Priority": int,
        "Queue": str,
        "Settings": ListJobTemplatesPaginateResponseJobTemplatesSettingsTypeDef,
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ListJobTemplatesPaginateResponseTypeDef = TypedDict(
    "ListJobTemplatesPaginateResponseTypeDef",
    {"JobTemplates": List[ListJobTemplatesPaginateResponseJobTemplatesTypeDef]},
    total=False,
)

ListJobsPaginatePaginationConfigTypeDef = TypedDict(
    "ListJobsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)

ListJobsPaginateResponseJobsAccelerationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsAccelerationSettingsTypeDef",
    {"Mode": Literal["DISABLED", "ENABLED", "PREFERRED"]},
    total=False,
)

ListJobsPaginateResponseJobsMessagesTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsMessagesTypeDef",
    {"Info": List[str], "Warning": List[str]},
    total=False,
)

ListJobsPaginateResponseJobsOutputGroupDetailsOutputDetailsVideoDetailsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsOutputGroupDetailsOutputDetailsVideoDetailsTypeDef",
    {"HeightInPx": int, "WidthInPx": int},
    total=False,
)

ListJobsPaginateResponseJobsOutputGroupDetailsOutputDetailsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsOutputGroupDetailsOutputDetailsTypeDef",
    {
        "DurationInMs": int,
        "VideoDetails": ListJobsPaginateResponseJobsOutputGroupDetailsOutputDetailsVideoDetailsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsOutputGroupDetailsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsOutputGroupDetailsTypeDef",
    {"OutputDetails": List[ListJobsPaginateResponseJobsOutputGroupDetailsOutputDetailsTypeDef]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsAvailBlankingTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsAvailBlankingTypeDef",
    {"AvailBlankingImage": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsEsamManifestConfirmConditionNotificationTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsEsamManifestConfirmConditionNotificationTypeDef",
    {"MccXml": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsEsamSignalProcessingNotificationTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsEsamSignalProcessingNotificationTypeDef",
    {"SccXml": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsEsamTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsEsamTypeDef",
    {
        "ManifestConfirmConditionNotification": ListJobsPaginateResponseJobsSettingsEsamManifestConfirmConditionNotificationTypeDef,
        "ResponseSignalPreroll": int,
        "SignalProcessingNotification": ListJobsPaginateResponseJobsSettingsEsamSignalProcessingNotificationTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsAudioSelectorGroupsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsAudioSelectorGroupsTypeDef",
    {"AudioSelectorNames": List[str]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsTypeDef",
    {
        "ChannelMapping": ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "DefaultSelection": Literal["DEFAULT", "NOT_DEFAULT"],
        "ExternalAudioFileInput": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "Offset": int,
        "Pids": List[int],
        "ProgramSelection": int,
        "RemixSettings": ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsRemixSettingsTypeDef,
        "SelectorType": Literal["PID", "TRACK", "LANGUAGE_CODE"],
        "Tracks": List[int],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "SourceAncillaryChannelNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["UPCONVERT", "DISABLED"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
        "TerminateCaptions": Literal["END_OF_INPUT", "DISABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef",
    {"Convert608To708": Literal["UPCONVERT", "DISABLED"], "SourceFile": str, "TimeDelta": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef",
    {"TrackNumber": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTypeDef",
    {
        "AncillarySourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsAncillarySourceSettingsTypeDef,
        "DvbSubSourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsEmbeddedSourceSettingsTypeDef,
        "FileSourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsFileSourceSettingsTypeDef,
        "SourceType": Literal[
            "ANCILLARY",
            "DVB_SUB",
            "EMBEDDED",
            "SCTE20",
            "SCC",
            "TTML",
            "STL",
            "SRT",
            "SMI",
            "TELETEXT",
            "NULL_SOURCE",
            "IMSC",
        ],
        "TeletextSourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTeletextSourceSettingsTypeDef,
        "TrackSourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTrackSourceSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsTypeDef",
    {
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "SourceSettings": ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsSourceSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsCropTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsDecryptionSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsDecryptionSettingsTypeDef",
    {
        "DecryptionMode": Literal["AES_CTR", "AES_CBC", "AES_GCM"],
        "EncryptedDecryptionKey": str,
        "InitializationVector": str,
        "KmsKeyRegion": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsImageInserterInsertableImagesTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsImageInserterTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ListJobsPaginateResponseJobsSettingsInputsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsInputClippingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsInputClippingsTypeDef",
    {"EndTimecode": str, "StartTimecode": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsPositionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsVideoSelectorHdr10MetadataTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsVideoSelectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsVideoSelectorTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsVideoSelectorTypeDef",
    {
        "AlphaBehavior": Literal["DISCARD", "REMAP_TO_LUMA"],
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709", "HDR10", "HLG_2020"],
        "ColorSpaceUsage": Literal["FORCE", "FALLBACK"],
        "Hdr10Metadata": ListJobsPaginateResponseJobsSettingsInputsVideoSelectorHdr10MetadataTypeDef,
        "Pid": int,
        "ProgramNumber": int,
        "Rotate": Literal["DEGREE_0", "DEGREES_90", "DEGREES_180", "DEGREES_270", "AUTO"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsInputsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsInputsTypeDef",
    {
        "AudioSelectorGroups": Dict[
            str, ListJobsPaginateResponseJobsSettingsInputsAudioSelectorGroupsTypeDef
        ],
        "AudioSelectors": Dict[
            str, ListJobsPaginateResponseJobsSettingsInputsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": Dict[
            str, ListJobsPaginateResponseJobsSettingsInputsCaptionSelectorsTypeDef
        ],
        "Crop": ListJobsPaginateResponseJobsSettingsInputsCropTypeDef,
        "DeblockFilter": Literal["ENABLED", "DISABLED"],
        "DecryptionSettings": ListJobsPaginateResponseJobsSettingsInputsDecryptionSettingsTypeDef,
        "DenoiseFilter": Literal["ENABLED", "DISABLED"],
        "FileInput": str,
        "FilterEnable": Literal["AUTO", "DISABLE", "FORCE"],
        "FilterStrength": int,
        "ImageInserter": ListJobsPaginateResponseJobsSettingsInputsImageInserterTypeDef,
        "InputClippings": List[ListJobsPaginateResponseJobsSettingsInputsInputClippingsTypeDef],
        "Position": ListJobsPaginateResponseJobsSettingsInputsPositionTypeDef,
        "ProgramNumber": int,
        "PsiControl": Literal["IGNORE_PSI", "USE_PSI"],
        "SupplementalImps": List[str],
        "TimecodeSource": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "TimecodeStart": str,
        "VideoSelector": ListJobsPaginateResponseJobsSettingsInputsVideoSelectorTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsMotionImageInserterFramerateTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsMotionImageInserterFramerateTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsMotionImageInserterOffsetTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsMotionImageInserterOffsetTypeDef",
    {"ImageX": int, "ImageY": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsMotionImageInserterTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsMotionImageInserterTypeDef",
    {
        "Framerate": ListJobsPaginateResponseJobsSettingsMotionImageInserterFramerateTypeDef,
        "Input": str,
        "InsertionMode": Literal["MOV", "PNG"],
        "Offset": ListJobsPaginateResponseJobsSettingsMotionImageInserterOffsetTypeDef,
        "Playback": Literal["ONCE", "REPEAT"],
        "StartTime": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsNielsenConfigurationTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsNielsenConfigurationTypeDef",
    {"BreakoutCode": int, "DistributorId": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {
        "CertificateArn": str,
        "DashSignaledSystemIds": List[str],
        "HlsSignaledSystemIds": List[str],
        "ResourceId": str,
        "Url": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["SAMPLE_AES", "AES_CTR"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "SpekeKeyProvider": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinBufferTime": int,
        "MinFinalSegmentLength": float,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "WriteDashManifest": Literal["DISABLED", "ENABLED"],
        "WriteHlsManifest": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef",
    {
        "PlaybackDeviceCompatibility": Literal["CENC_V1", "UNENCRYPTED_SEI"],
        "SpekeKeyProvider": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionSpekeKeyProviderTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "Destination": str,
        "DestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "HbbtvCompliance": Literal["HBBTV_1_5", "NONE"],
        "MinBufferTime": int,
        "MpdProfile": Literal["MAIN_PROFILE", "ON_DEMAND_PROFILE"],
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "WriteSegmentTimelineInRepresentation": Literal["ENABLED", "DISABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef",
    {
        "Destination": str,
        "DestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsDestinationSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {
        "CaptionChannel": int,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef",
    {"KeyFormat": str, "KeyFormatVersions": str, "StaticKeyValue": str, "Url": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef",
    {
        "ConstantInitializationVector": str,
        "EncryptionMethod": Literal["AES128", "SAMPLE_AES"],
        "InitializationVectorInManifest": Literal["INCLUDE", "EXCLUDE"],
        "OfflineEncrypted": Literal["ENABLED", "DISABLED"],
        "SpekeKeyProvider": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionSpekeKeyProviderTypeDef,
        "StaticKeyProvider": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderTypeDef,
        "Type": Literal["SPEKE", "STATIC_KEY"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "AdditionalManifests": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsAdditionalManifestsTypeDef
        ],
        "BaseUrl": str,
        "CaptionLanguageMappings": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "OMIT", "NONE"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_6381", "RFC_4281"],
        "Destination": str,
        "DestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationSettingsTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsEncryptionTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinFinalSegmentLength": float,
        "MinSegmentLength": int,
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["INCLUDE", "EXCLUDE"],
        "ProgramDateTimePeriod": int,
        "SegmentControl": Literal["SINGLE_FILE", "SEGMENTED_FILES"],
        "SegmentLength": int,
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["INCLUDE", "EXCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef",
    {"ManifestNameModifier": str, "SelectedOutputs": List[str]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef",
    {
        "CannedAcl": Literal[
            "PUBLIC_READ", "AUTHENTICATED_READ", "BUCKET_OWNER_READ", "BUCKET_OWNER_FULL_CONTROL"
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef",
    {
        "EncryptionType": Literal["SERVER_SIDE_ENCRYPTION_S3", "SERVER_SIDE_ENCRYPTION_KMS"],
        "KmsKeyArn": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef",
    {
        "AccessControl": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsAccessControlTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsEncryptionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef",
    {
        "S3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsS3SettingsTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef",
    {"CertificateArn": str, "ResourceId": str, "SystemIds": List[str], "Url": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef",
    {
        "SpekeKeyProvider": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionSpekeKeyProviderTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AdditionalManifests": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsAdditionalManifestsTypeDef
        ],
        "AudioDeduplication": Literal["COMBINE_DUPLICATE_STREAMS", "NONE"],
        "Destination": str,
        "DestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationSettingsTypeDef,
        "Encryption": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsEncryptionTypeDef,
        "FragmentLength": int,
        "ManifestEncoding": Literal["UTF8", "UTF16"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "CmafGroupSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsCmafGroupSettingsTypeDef,
        "DashIsoGroupSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsDashIsoGroupSettingsTypeDef,
        "FileGroupSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsFileGroupSettingsTypeDef,
        "HlsGroupSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "Type": Literal[
            "HLS_GROUP_SETTINGS",
            "DASH_ISO_GROUP_SETTINGS",
            "FILE_GROUP_SETTINGS",
            "MS_SMOOTH_GROUP_SETTINGS",
            "CMAF_GROUP_SETTINGS",
        ],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "CustomLanguageCode": str,
        "DestinationSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyContainer": Literal["AUTOMATIC", "M2TS"],
        "AudioRenditionSets": str,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "IFrameOnlyManifest": Literal["INCLUDE", "EXCLUDE"],
        "SegmentModifier": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "HlsSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsOutputSettingsHlsSettingsTypeDef
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptions": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
        "OutputSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "Preset": str,
        "VideoDescription": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsVideoDescriptionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsOutputGroupsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsOutputGroupsTypeDef",
    {
        "CustomName": str,
        "Name": str,
        "OutputGroupSettings": ListJobsPaginateResponseJobsSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ListJobsPaginateResponseJobsSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsTimecodeConfigTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsTimecodeConfigTypeDef",
    {
        "Anchor": str,
        "Source": Literal["EMBEDDED", "ZEROBASED", "SPECIFIEDSTART"],
        "Start": str,
        "TimestampOffset": str,
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsTimedMetadataInsertionId3InsertionsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsTimedMetadataInsertionId3InsertionsTypeDef",
    {"Id3": str, "Timecode": str},
    total=False,
)

ListJobsPaginateResponseJobsSettingsTimedMetadataInsertionTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsTimedMetadataInsertionTypeDef",
    {
        "Id3Insertions": List[
            ListJobsPaginateResponseJobsSettingsTimedMetadataInsertionId3InsertionsTypeDef
        ]
    },
    total=False,
)

ListJobsPaginateResponseJobsSettingsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsSettingsTypeDef",
    {
        "AdAvailOffset": int,
        "AvailBlanking": ListJobsPaginateResponseJobsSettingsAvailBlankingTypeDef,
        "Esam": ListJobsPaginateResponseJobsSettingsEsamTypeDef,
        "Inputs": List[ListJobsPaginateResponseJobsSettingsInputsTypeDef],
        "MotionImageInserter": ListJobsPaginateResponseJobsSettingsMotionImageInserterTypeDef,
        "NielsenConfiguration": ListJobsPaginateResponseJobsSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ListJobsPaginateResponseJobsSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ListJobsPaginateResponseJobsSettingsTimecodeConfigTypeDef,
        "TimedMetadataInsertion": ListJobsPaginateResponseJobsSettingsTimedMetadataInsertionTypeDef,
    },
    total=False,
)

ListJobsPaginateResponseJobsTimingTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsTimingTypeDef",
    {"FinishTime": datetime, "StartTime": datetime, "SubmitTime": datetime},
    total=False,
)

ListJobsPaginateResponseJobsTypeDef = TypedDict(
    "ListJobsPaginateResponseJobsTypeDef",
    {
        "AccelerationSettings": ListJobsPaginateResponseJobsAccelerationSettingsTypeDef,
        "AccelerationStatus": Literal[
            "NOT_APPLICABLE", "IN_PROGRESS", "ACCELERATED", "NOT_ACCELERATED"
        ],
        "Arn": str,
        "BillingTagsSource": Literal["QUEUE", "PRESET", "JOB_TEMPLATE", "JOB"],
        "CreatedAt": datetime,
        "CurrentPhase": Literal["PROBING", "TRANSCODING", "UPLOADING"],
        "ErrorCode": int,
        "ErrorMessage": str,
        "Id": str,
        "JobPercentComplete": int,
        "JobTemplate": str,
        "Messages": ListJobsPaginateResponseJobsMessagesTypeDef,
        "OutputGroupDetails": List[ListJobsPaginateResponseJobsOutputGroupDetailsTypeDef],
        "Priority": int,
        "Queue": str,
        "RetryCount": int,
        "Role": str,
        "Settings": ListJobsPaginateResponseJobsSettingsTypeDef,
        "SimulateReservedQueue": Literal["DISABLED", "ENABLED"],
        "Status": Literal["SUBMITTED", "PROGRESSING", "COMPLETE", "CANCELED", "ERROR"],
        "StatusUpdateInterval": Literal[
            "SECONDS_10",
            "SECONDS_12",
            "SECONDS_15",
            "SECONDS_20",
            "SECONDS_30",
            "SECONDS_60",
            "SECONDS_120",
            "SECONDS_180",
            "SECONDS_240",
            "SECONDS_300",
            "SECONDS_360",
            "SECONDS_420",
            "SECONDS_480",
            "SECONDS_540",
            "SECONDS_600",
        ],
        "Timing": ListJobsPaginateResponseJobsTimingTypeDef,
        "UserMetadata": Dict[str, str],
    },
    total=False,
)

ListJobsPaginateResponseTypeDef = TypedDict(
    "ListJobsPaginateResponseTypeDef",
    {"Jobs": List[ListJobsPaginateResponseJobsTypeDef]},
    total=False,
)

ListPresetsPaginatePaginationConfigTypeDef = TypedDict(
    "ListPresetsPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"],
        "AlgorithmControl": Literal["CORRECT_AUDIO", "MEASURE_ONLY"],
        "CorrectionGateLevel": int,
        "LoudnessLogging": Literal["LOG", "DONT_LOG"],
        "PeakCalculation": Literal["TRUE_PEAK", "NONE"],
        "TargetLkfs": float,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "AudioDescriptionBroadcasterMix": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Bitrate": int,
        "CodecProfile": Literal["LC", "HEV1", "HEV2"],
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": int,
        "Specification": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["LOW", "MEDIUM_LOW", "MEDIUM_HIGH", "HIGH"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN",
            "COMMENTARY",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DynamicRangeCompressionProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "SampleRate": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "SampleRate": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef",
    {
        "Bitrate": int,
        "BitstreamMode": str,
        "CodingMode": str,
        "DialogueIntelligence": Literal["ENABLED", "DISABLED"],
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MeteringMode": Literal[
            "LEQ_A", "ITU_BS_1770_1", "ITU_BS_1770_2", "ITU_BS_1770_3", "ITU_BS_1770_4"
        ],
        "SampleRate": int,
        "SpeechThreshold": int,
        "StereoDownmix": Literal["NOT_INDICATED", "STEREO", "SURROUND", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": int,
        "BitstreamMode": Literal[
            "COMPLETE_MAIN", "COMMENTARY", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["ENABLED", "DISABLED"],
        "Dialnorm": int,
        "DynamicRangeCompressionLine": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "DynamicRangeCompressionRf": Literal[
            "NONE", "FILM_STANDARD", "FILM_LIGHT", "MUSIC_STANDARD", "MUSIC_LIGHT", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["ENABLED", "DISABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["WHEN_POSSIBLE", "NO_PASSTHROUGH"],
        "PhaseControl": Literal["SHIFT_90_DEGREES", "NO_SHIFT"],
        "SampleRate": int,
        "StereoDownmix": Literal["NOT_INDICATED", "LO_RO", "LT_RT", "DPL2"],
        "SurroundExMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
        "SurroundMode": Literal["NOT_INDICATED", "ENABLED", "DISABLED"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {"Bitrate": int, "Channels": int, "SampleRate": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef",
    {"BitDepth": int, "Channels": int, "Format": Literal["RIFF", "RF64"], "SampleRate": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "AiffSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsAiffSettingsTypeDef,
        "Codec": Literal["AAC", "MP2", "WAV", "AIFF", "AC3", "EAC3", "EAC3_ATMOS", "PASSTHROUGH"],
        "Eac3AtmosSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3AtmosSettingsTypeDef,
        "Eac3Settings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "WavSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsWavSettingsTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef",
    {"InputChannels": List[int]},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef",
    {
        "OutputChannels": List[
            ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingOutputChannelsTypeDef
        ]
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMapping": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsChannelMappingTypeDef,
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSourceName": str,
        "AudioType": int,
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsCodecSettingsTypeDef,
        "CustomLanguageCode": str,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "RemixSettings": ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT"],
        "BackgroundColor": Literal["NONE", "BLACK", "WHITE"],
        "BackgroundOpacity": int,
        "FontColor": Literal["WHITE", "BLACK", "YELLOW", "RED", "GREEN", "BLUE"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontScript": Literal["AUTOMATIC", "HANS", "HANT"],
        "FontSize": int,
        "OutlineColor": Literal["BLACK", "WHITE", "YELLOW", "RED", "GREEN", "BLUE"],
        "OutlineSize": int,
        "ShadowColor": Literal["NONE", "BLACK", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "SubtitlingType": Literal["HEARING_IMPAIRED", "STANDARD"],
        "TeletextSpacing": Literal["FIXED_GRID", "PROPORTIONAL"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef",
    {"Destination608ChannelNumber": int, "Destination708ServiceNumber": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef",
    {
        "Framerate": Literal[
            "FRAMERATE_23_97",
            "FRAMERATE_24",
            "FRAMERATE_25",
            "FRAMERATE_29_97_DROPFRAME",
            "FRAMERATE_29_97_NON_DROPFRAME",
        ]
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef",
    {
        "PageNumber": str,
        "PageTypes": List[
            Literal[
                "PAGE_TYPE_INITIAL",
                "PAGE_TYPE_SUBTITLE",
                "PAGE_TYPE_ADDL_INFO",
                "PAGE_TYPE_PROGRAM_SCHEDULE",
                "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE",
            ]
        ],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StylePassthrough": Literal["ENABLED", "DISABLED"]},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "BurninDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsBurninDestinationSettingsTypeDef,
        "DestinationType": Literal[
            "BURN_IN",
            "DVB_SUB",
            "EMBEDDED",
            "EMBEDDED_PLUS_SCTE20",
            "IMSC",
            "SCTE20_PLUS_EMBEDDED",
            "SCC",
            "SRT",
            "SMI",
            "TELETEXT",
            "TTML",
            "WEBVTT",
        ],
        "DvbSubDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsEmbeddedDestinationSettingsTypeDef,
        "ImscDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsImscDestinationSettingsTypeDef,
        "SccDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsSccDestinationSettingsTypeDef,
        "TeletextDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTeletextDestinationSettingsTypeDef,
        "TtmlDestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsTypeDef",
    {
        "CustomLanguageCode": str,
        "DestinationSettings": ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": Literal[
            "ENG",
            "SPA",
            "FRA",
            "DEU",
            "GER",
            "ZHO",
            "ARA",
            "HIN",
            "JPN",
            "RUS",
            "POR",
            "ITA",
            "URD",
            "VIE",
            "KOR",
            "PAN",
            "ABK",
            "AAR",
            "AFR",
            "AKA",
            "SQI",
            "AMH",
            "ARG",
            "HYE",
            "ASM",
            "AVA",
            "AVE",
            "AYM",
            "AZE",
            "BAM",
            "BAK",
            "EUS",
            "BEL",
            "BEN",
            "BIH",
            "BIS",
            "BOS",
            "BRE",
            "BUL",
            "MYA",
            "CAT",
            "KHM",
            "CHA",
            "CHE",
            "NYA",
            "CHU",
            "CHV",
            "COR",
            "COS",
            "CRE",
            "HRV",
            "CES",
            "DAN",
            "DIV",
            "NLD",
            "DZO",
            "ENM",
            "EPO",
            "EST",
            "EWE",
            "FAO",
            "FIJ",
            "FIN",
            "FRM",
            "FUL",
            "GLA",
            "GLG",
            "LUG",
            "KAT",
            "ELL",
            "GRN",
            "GUJ",
            "HAT",
            "HAU",
            "HEB",
            "HER",
            "HMO",
            "HUN",
            "ISL",
            "IDO",
            "IBO",
            "IND",
            "INA",
            "ILE",
            "IKU",
            "IPK",
            "GLE",
            "JAV",
            "KAL",
            "KAN",
            "KAU",
            "KAS",
            "KAZ",
            "KIK",
            "KIN",
            "KIR",
            "KOM",
            "KON",
            "KUA",
            "KUR",
            "LAO",
            "LAT",
            "LAV",
            "LIM",
            "LIN",
            "LIT",
            "LUB",
            "LTZ",
            "MKD",
            "MLG",
            "MSA",
            "MAL",
            "MLT",
            "GLV",
            "MRI",
            "MAR",
            "MAH",
            "MON",
            "NAU",
            "NAV",
            "NDE",
            "NBL",
            "NDO",
            "NEP",
            "SME",
            "NOR",
            "NOB",
            "NNO",
            "OCI",
            "OJI",
            "ORI",
            "ORM",
            "OSS",
            "PLI",
            "FAS",
            "POL",
            "PUS",
            "QUE",
            "QAA",
            "RON",
            "ROH",
            "RUN",
            "SMO",
            "SAG",
            "SAN",
            "SRD",
            "SRB",
            "SNA",
            "III",
            "SND",
            "SIN",
            "SLK",
            "SLV",
            "SOM",
            "SOT",
            "SUN",
            "SWA",
            "SSW",
            "SWE",
            "TGL",
            "TAH",
            "TGK",
            "TAM",
            "TAT",
            "TEL",
            "THA",
            "BOD",
            "TIR",
            "TON",
            "TSO",
            "TSN",
            "TUR",
            "TUK",
            "TWI",
            "UIG",
            "UKR",
            "UZB",
            "VEN",
            "VOL",
            "WLN",
            "CYM",
            "FRY",
            "WOL",
            "XHO",
            "YID",
            "YOR",
            "ZHA",
            "ZUL",
            "ORJ",
            "QPC",
            "TNG",
        ],
        "LanguageDescription": str,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsF4vSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsF4vSettingsTypeDef",
    {"MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"]},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "NitInterval": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "SdtInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"TdtInterval": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef",
    {"Scte35EsamPid": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AudioBufferModel": Literal["DVB", "ATSC"],
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "DvbNitSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": List[int],
        "DvbTdtSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": int,
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EsRateInPes": Literal["INCLUDE", "EXCLUDE"],
        "ForceTsVideoEbpOrder": Literal["FORCE", "DEFAULT"],
        "FragmentTime": float,
        "MaxPcrInterval": int,
        "MinEbpInterval": int,
        "NielsenId3": Literal["INSERT", "NONE"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "RateMode": Literal["VBR", "CBR"],
        "Scte35Esam": ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsScte35EsamTypeDef,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "SegmentationMarkers": Literal[
            "NONE", "RAI_SEGSTART", "RAI_ADAPT", "PSI_SEGSTART", "EBP", "EBP_LEGACY"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsM3u8SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": List[int],
        "NielsenId3": Literal["INSERT", "NONE"],
        "PatInterval": int,
        "PcrControl": Literal["PCR_EVERY_PES_PACKET", "CONFIGURED_PCR_PERIOD"],
        "PcrPid": int,
        "PmtInterval": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "ProgramNumber": int,
        "Scte35Pid": int,
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadata": Literal["PASSTHROUGH", "NONE"],
        "TimedMetadataPid": int,
        "TransportStreamId": int,
        "VideoPid": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsMovSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsMovSettingsTypeDef",
    {
        "ClapAtom": Literal["INCLUDE", "EXCLUDE"],
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "Mpeg2FourCCControl": Literal["XDCAM", "MPEG"],
        "PaddingControl": Literal["OMNEON", "NONE"],
        "Reference": Literal["SELF_CONTAINED", "EXTERNAL"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsMp4SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsMp4SettingsTypeDef",
    {
        "CslgAtom": Literal["INCLUDE", "EXCLUDE"],
        "FreeSpaceBox": Literal["INCLUDE", "EXCLUDE"],
        "MoovPlacement": Literal["PROGRESSIVE_DOWNLOAD", "NORMAL"],
        "Mp4MajorBrand": str,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsMpdSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsMpdSettingsTypeDef",
    {
        "CaptionContainerType": Literal["RAW", "FRAGMENTED_MP4"],
        "Scte35Esam": Literal["INSERT", "NONE"],
        "Scte35Source": Literal["PASSTHROUGH", "NONE"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsContainerSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsContainerSettingsTypeDef",
    {
        "Container": Literal[
            "F4V", "ISMV", "M2TS", "M3U8", "CMFC", "MOV", "MP4", "MPD", "MXF", "RAW"
        ],
        "F4vSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsF4vSettingsTypeDef,
        "M2tsSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsM2tsSettingsTypeDef,
        "M3u8Settings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsM3u8SettingsTypeDef,
        "MovSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsMovSettingsTypeDef,
        "Mp4Settings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsMp4SettingsTypeDef,
        "MpdSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsMpdSettingsTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef",
    {"FramerateDenominator": int, "FramerateNumerator": int, "MaxCaptures": int, "Quality": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
        ],
        "CodecProfile": Literal[
            "BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FieldEncoding": Literal["PAFF", "FORCE_FIELD"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "RepeatPps": Literal["DISABLED", "ENABLED"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef",
    {"MaxAverageBitrate": int, "QvbrQualityLevel": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH", "HIGHER", "MAX"],
        "AlternateTransferFunctionSei": Literal["DISABLED", "ENABLED"],
        "Bitrate": int,
        "CodecLevel": Literal[
            "AUTO",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_2_1",
            "LEVEL_3",
            "LEVEL_3_1",
            "LEVEL_4",
            "LEVEL_4_1",
            "LEVEL_5",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6",
            "LEVEL_6_1",
            "LEVEL_6_2",
        ],
        "CodecProfile": Literal[
            "MAIN_MAIN",
            "MAIN_HIGH",
            "MAIN10_MAIN",
            "MAIN10_HIGH",
            "MAIN_422_8BIT_MAIN",
            "MAIN_422_8BIT_HIGH",
            "MAIN_422_10BIT_MAIN",
            "MAIN_422_10BIT_HIGH",
        ],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FlickerAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "NumberReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "SINGLE_PASS_HQ", "MULTI_PASS_HQ"],
        "QvbrSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsQvbrSettingsTypeDef,
        "RateControlMode": Literal["VBR", "CBR", "QVBR"],
        "SampleAdaptiveOffsetFilterMode": Literal["DEFAULT", "ADAPTIVE", "OFF"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED", "TRANSITION_DETECTION"],
        "Slices": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "TemporalIds": Literal["DISABLED", "ENABLED"],
        "Tiles": Literal["DISABLED", "ENABLED"],
        "UnregisteredSeiTimecode": Literal["DISABLED", "ENABLED"],
        "WriteMp4PackagingType": Literal["HVC1", "HEV1"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["OFF", "LOW", "MEDIUM", "HIGH"],
        "Bitrate": int,
        "CodecLevel": Literal["AUTO", "LOW", "MAIN", "HIGH1440", "HIGH"],
        "CodecProfile": Literal["MAIN", "PROFILE_422"],
        "DynamicSubGop": Literal["ADAPTIVE", "STATIC"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "HrdBufferInitialFillPercentage": int,
        "HrdBufferSize": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "IntraDcPrecision": Literal[
            "AUTO",
            "INTRA_DC_PRECISION_8",
            "INTRA_DC_PRECISION_9",
            "INTRA_DC_PRECISION_10",
            "INTRA_DC_PRECISION_11",
        ],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumberBFramesBetweenReferenceFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "QualityTuningLevel": Literal["SINGLE_PASS", "MULTI_PASS"],
        "RateControlMode": Literal["VBR", "CBR"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Softness": int,
        "SpatialAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
        "Syntax": Literal["DEFAULT", "D_10"],
        "Telecine": Literal["NONE", "SOFT", "HARD"],
        "TemporalAdaptiveQuantization": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef",
    {
        "CodecProfile": Literal[
            "APPLE_PRORES_422",
            "APPLE_PRORES_422_HQ",
            "APPLE_PRORES_422_LT",
            "APPLE_PRORES_422_PROXY",
        ],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateConversionAlgorithm": Literal["DUPLICATE_DROP", "INTERPOLATE"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "InterlaceMode": Literal[
            "PROGRESSIVE", "TOP_FIELD", "BOTTOM_FIELD", "FOLLOW_TOP_FIELD", "FOLLOW_BOTTOM_FIELD"
        ],
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "SlowPal": Literal["DISABLED", "ENABLED"],
        "Telecine": Literal["NONE", "HARD"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsTypeDef",
    {
        "Codec": Literal["FRAME_CAPTURE", "H_264", "H_265", "MPEG2", "PRORES"],
        "FrameCaptureSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH264SettingsTypeDef,
        "H265Settings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsH265SettingsTypeDef,
        "Mpeg2Settings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsMpeg2SettingsTypeDef,
        "ProresSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsProresSettingsTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCropTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCropTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionPositionTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionPositionTypeDef",
    {"Height": int, "Width": int, "X": int, "Y": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef",
    {
        "BluePrimaryX": int,
        "BluePrimaryY": int,
        "GreenPrimaryX": int,
        "GreenPrimaryY": int,
        "MaxContentLightLevel": int,
        "MaxFrameAverageLightLevel": int,
        "MaxLuminance": int,
        "MinLuminance": int,
        "RedPrimaryX": int,
        "RedPrimaryY": int,
        "WhitePointX": int,
        "WhitePointY": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef",
    {
        "Brightness": int,
        "ColorSpaceConversion": Literal[
            "NONE", "FORCE_601", "FORCE_709", "FORCE_HDR10", "FORCE_HLG_2020"
        ],
        "Contrast": int,
        "Hdr10Metadata": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorHdr10MetadataTypeDef,
        "Hue": int,
        "Saturation": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef",
    {
        "Algorithm": Literal["INTERPOLATE", "INTERPOLATE_TICKER", "BLEND", "BLEND_TICKER"],
        "Control": Literal["FORCE_ALL_FRAMES", "NORMAL"],
        "Mode": Literal["DEINTERLACE", "INVERSE_TELECINE", "ADAPTIVE"],
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef",
    {
        "L6Metadata": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionL6MetadataTypeDef,
        "L6Mode": Literal["PASSTHROUGH", "RECALCULATE", "SPECIFY"],
        "Profile": str,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageInserterInput": str,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "StartTime": str,
        "Width": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef",
    {
        "InsertableImages": List[
            ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterInsertableImagesTypeDef
        ]
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef",
    {"Strength": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef",
    {"PostFilterSharpenStrength": int, "Speed": int, "Strength": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef",
    {"AggressiveMode": int, "Speed": int, "Strength": int},
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef",
    {
        "Filter": Literal[
            "BILATERAL", "MEAN", "GAUSSIAN", "LANCZOS", "SHARPEN", "CONSERVE", "SPATIAL", "TEMPORAL"
        ],
        "FilterSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerFilterSettingsTypeDef,
        "SpatialFilterSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerSpatialFilterSettingsTypeDef,
        "TemporalFilterSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTemporalFilterSettingsTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef",
    {
        "FontSize": int,
        "Position": Literal[
            "TOP_CENTER",
            "TOP_LEFT",
            "TOP_RIGHT",
            "MIDDLE_LEFT",
            "MIDDLE_CENTER",
            "MIDDLE_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_CENTER",
            "BOTTOM_RIGHT",
        ],
        "Prefix": str,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTypeDef",
    {
        "ColorCorrector": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsColorCorrectorTypeDef,
        "Deinterlacer": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDeinterlacerTypeDef,
        "DolbyVision": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsDolbyVisionTypeDef,
        "ImageInserter": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsImageInserterTypeDef,
        "NoiseReducer": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsNoiseReducerTypeDef,
        "TimecodeBurnin": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTimecodeBurninTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsVideoDescriptionTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsVideoDescriptionTypeDef",
    {
        "AfdSignaling": Literal["NONE", "AUTO", "FIXED"],
        "AntiAlias": Literal["DISABLED", "ENABLED"],
        "CodecSettings": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCodecSettingsTypeDef,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "Crop": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionCropTypeDef,
        "DropFrameTimecode": Literal["DISABLED", "ENABLED"],
        "FixedAfd": int,
        "Height": int,
        "Position": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionPositionTypeDef,
        "RespondToAfd": Literal["NONE", "RESPOND", "PASSTHROUGH"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
        "VideoPreprocessors": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionVideoPreprocessorsTypeDef,
        "Width": int,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsSettingsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ListPresetsPaginateResponsePresetsSettingsAudioDescriptionsTypeDef
        ],
        "CaptionDescriptions": List[
            ListPresetsPaginateResponsePresetsSettingsCaptionDescriptionsTypeDef
        ],
        "ContainerSettings": ListPresetsPaginateResponsePresetsSettingsContainerSettingsTypeDef,
        "VideoDescription": ListPresetsPaginateResponsePresetsSettingsVideoDescriptionTypeDef,
    },
    total=False,
)

ListPresetsPaginateResponsePresetsTypeDef = TypedDict(
    "ListPresetsPaginateResponsePresetsTypeDef",
    {
        "Arn": str,
        "Category": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "Settings": ListPresetsPaginateResponsePresetsSettingsTypeDef,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ListPresetsPaginateResponseTypeDef = TypedDict(
    "ListPresetsPaginateResponseTypeDef",
    {"Presets": List[ListPresetsPaginateResponsePresetsTypeDef]},
    total=False,
)

ListQueuesPaginatePaginationConfigTypeDef = TypedDict(
    "ListQueuesPaginatePaginationConfigTypeDef",
    {"MaxItems": int, "PageSize": int, "StartingToken": str},
    total=False,
)

ListQueuesPaginateResponseQueuesReservationPlanTypeDef = TypedDict(
    "ListQueuesPaginateResponseQueuesReservationPlanTypeDef",
    {
        "Commitment": str,
        "ExpiresAt": datetime,
        "PurchasedAt": datetime,
        "RenewalType": Literal["AUTO_RENEW", "EXPIRE"],
        "ReservedSlots": int,
        "Status": Literal["ACTIVE", "EXPIRED"],
    },
    total=False,
)

ListQueuesPaginateResponseQueuesTypeDef = TypedDict(
    "ListQueuesPaginateResponseQueuesTypeDef",
    {
        "Arn": str,
        "CreatedAt": datetime,
        "Description": str,
        "LastUpdated": datetime,
        "Name": str,
        "PricingPlan": Literal["ON_DEMAND", "RESERVED"],
        "ProgressingJobsCount": int,
        "ReservationPlan": ListQueuesPaginateResponseQueuesReservationPlanTypeDef,
        "Status": Literal["ACTIVE", "PAUSED"],
        "SubmittedJobsCount": int,
        "Type": Literal["SYSTEM", "CUSTOM"],
    },
    total=False,
)

ListQueuesPaginateResponseTypeDef = TypedDict(
    "ListQueuesPaginateResponseTypeDef",
    {"Queues": List[ListQueuesPaginateResponseQueuesTypeDef]},
    total=False,
)
