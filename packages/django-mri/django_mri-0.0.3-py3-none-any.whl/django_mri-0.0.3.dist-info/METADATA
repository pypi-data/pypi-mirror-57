Metadata-Version: 2.1
Name: django-mri
Version: 0.0.3
Summary: A reusable Django app to manage MRI data.
Home-page: https://github.com/TheLabbingProject/django_mri
Author: Zvi Baratz
Author-email: baratzz@pm.me
License: AGPLv3
Keywords: django mri neuroimaging research
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Web Environment
Classifier: Framework :: Django :: 2.2
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: Django (==2.*)
Requires-Dist: djangorestframework (~=3.10)
Requires-Dist: django-dicom (>=0.0.2)
Requires-Dist: django-extensions (~=2.2)
Requires-Dist: django-filter (~=2.2)
Requires-Dist: nipype (~=1.3)
Requires-Dist: numpy (~=1.17)
Provides-Extra: dev
Requires-Dist: black (==19.10b0) ; extra == 'dev'
Requires-Dist: coverage (~=4.5) ; extra == 'dev'
Requires-Dist: factory-boy (~=2.12) ; extra == 'dev'
Requires-Dist: flake8 (~=3.7) ; extra == 'dev'
Requires-Dist: ipython (~=7.10) ; extra == 'dev'
Requires-Dist: pytest (~=5.3) ; extra == 'dev'
Requires-Dist: sphinx (~=2.2) ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme (~=0.4) ; extra == 'dev'

# _django_mri_

A django app to manage MRI data.

Currently only supports data in the [DICOM](https://www.dicomstandard.org/) format, and will soon also support [NIfTI](https://nifti.nimh.nih.gov/).

> This app is being built and maintained as part of the [_pylabber_](https://github.com/ZviBaratz/pylabber) project.

## Quick start

1. Add _django_mri_ and _django_dicom_ to your INSTALLED_APPS setting:

```python
    INSTALLED_APPS = [
        ...
        'django_dicom',
        'django_mri',
    ]
```

2. Include the dicom URLconf in your project urls.py:

```python
    path("api/", include("django_mri.urls", namespace="mri")),

    # Optional:
    path("api/", include("django_dicom.urls", namespace="dicom")),
    # if you would like to also expose the django_dicom API.
```

3. Run `python manage.py migrate` to create the dicom models.

4. Start the development server and visit http://127.0.0.1:8000/admin/.

5. Visit http://127.0.0.1:8000/mri/.


