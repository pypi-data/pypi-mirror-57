# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from podder_task_foundation.api.protos import (
    pipeline_framework_pb2 as podder__task__foundation_dot_api_dot_protos_dot_pipeline__framework__pb2,
)


class PodderTaskApiStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.execute = channel.unary_unary(
            '/pipeline_framework.PodderTaskApi/execute',
            request_serializer=
            podder__task__foundation_dot_api_dot_protos_dot_pipeline__framework__pb2.
            DataTransferObjectGroup.SerializeToString,
            response_deserializer=
            podder__task__foundation_dot_api_dot_protos_dot_pipeline__framework__pb2.
            DataTransferObjectGroup.FromString,
        )


class PodderTaskApiServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def execute(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PodderTaskApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'execute':
        grpc.unary_unary_rpc_method_handler(
            servicer.execute,
            request_deserializer=
            podder__task__foundation_dot_api_dot_protos_dot_pipeline__framework__pb2.
            DataTransferObjectGroup.FromString,
            response_serializer=
            podder__task__foundation_dot_api_dot_protos_dot_pipeline__framework__pb2.
            DataTransferObjectGroup.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('pipeline_framework.PodderTaskApi',
                                                           rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler, ))
