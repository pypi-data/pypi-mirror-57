Metadata-Version: 2.1
Name: gitbuilding
Version: 0.3.0
Summary: For documenting hardware projects with minimal effort, so you can stop writing and git building.
Home-page: https://gitlab.com/bath_open_instrumentation_group/git-building
Author: Julian Stirling
Author-email: julian@julianstirling.co.uk
License: UNKNOWN
Description: 
        # What is Git-Building
        
        The goal of Git-Building is to give you the freedom to write instructions in the form and structure that you want using markdown. Some extra syntax is added to generate the difficult things like bills of materials.
        
        In Git-Building you are able to:
        
        * Write the instructions as you go along in markdown
        * Tag links in the code with meta-data to show if they are steps in the build or parts that are needed
        * Define a library including the part numbers for multiple suppliers
        * Syntax for adding in bill of materials
        
        **Note: While we work out the best syntax, major things might change!** If you have syntax suggestions please raise an issue!
        
        ## Basic example:
        
            # Making a widget
        
            ## You will need
            {{BOM}}
        
            ## Method
            Take two [M6x10 cap screws](m6capscrew.md){Qty: 2} and screw them into the bottom of the [widget base](base.md){Qty:1} using a [5mm ball driver]{Qty: 1}. 1}.
        
            [5mm ball driver]: balldriver.md "{cat: Tool}"
        
            Screw two more [M6x10 cap screws]{Qty: 2} into the top of the [widget base] the [same ball driver][5mm ball driver]{Qty: 1}.
        
        Will evaluate to
        
        > # Making a widget
        > 
        > ## You will need
        > 
        > 
        > ### Parts
        > 
        > * 4 x  [M6x10 cap screws]
        > * 1 x  [widget base]
        > 
        > 
        > ### Tools
        > 
        > * 1 x  [5mm ball driver]
        > 
        > 
        > ## Method
        > Take two [M6x10 cap screws] and screw them into the bottom of the [widget base] using a [5mm ball driver].
        > 
        > Screw two more [M6x10 cap screws] into the top of the [widget base] the [same ball driver][5mm ball driver].
        
        [5mm ball driver]:balldriver.md ""
        [M6x10 cap screws]:m6capscrew.md
        [widget base]:base.md
        
        A full [example is available](https://gitlab.com/bath_open_instrumentation_group/git-building-example).
        
        # How to install Git-Building
        
        To install (for Python 3.6+)
        
            pip install gitbuilding
            
        *Note: If you installed python from the Windows app store Git-Building will not work as intended. If you are on windows you should install [python](https://www.python.org/downloads/) or [Anaconda](https://www.anaconda.com/distribution/). During install make sure you select the box to add python to your PATH*
        
        If you wish to contribute to development of Git-Building you can clone the project like normal but you may need to build the javascript editor from source. To do so please see the [dedicated building/contributing page](CONTRIBUTING.md)
        
        # Using Git-Building
        
        A Git-Building project can be as simple as a folder with some markdown files in it. To add extra information into these files to allow a bill of materials to be generated we use a syntax we call [BuildUp](BuildUp.md). Git-Building will then process the BuildUp and export the result it in either a plain markdown format
        
        When specifying parts in BuildUp they can have their own BuildUp page, or can be part of a [BuildUp part library](BuildUpLibrary.md) in YAML format. 
        
        It is possible to customise how Git-Building builds the Buildup into plain markdown or HTML by making a [configuration file called buildconf.yaml](BuildConfigSyntax.md).
        
        # Running the Git-Building software
        
        All the commands below assume you have successfully installed `gitbuilding` with `pip`.
        
        ## Starting a new empty project
        
        Open your terminal in an empty folder you want to use for your documentation and run
        
            gitbuilding new
        
        empty documentation files will be added to the directory.
        
        ## Building the documentation
        
        Open your terminal and run
        
            gitbuilding build
        
        this will build your the documentation in your folder assuming you have a valid `buildconf.yaml` file (see below).
        
        ## Previewing the documentation or use the live editor
        
        Open your terminal and run
        
            gitbuilding serve
        
        and then open a browser and navigate to `http://localhost:6178/`. This will show the documentation in a browseable form. You can also edit the documentation directly from your browser:
        
        ![](doc_images/LiveEditorScreenshot.png)
        
        ## Build a static-html site
        
        Once you have built the documentation with `gitbuilding build` you can convert this into html with
        
            gitbuilding build-html
        
        ## Getting help
        
        You can get more detail on the command line options by running
        
            gitbuilding help
        
        You can get help for a specific command with
        
            gitbuilding help <command>
        
Keywords: Documentation,Hardware
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.6
Description-Content-Type: text/markdown
