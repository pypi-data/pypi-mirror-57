Metadata-Version: 2.1
Name: nullspace_optimizer
Version: 1.0.1
Summary: Null space algorithm for nonlinear constrained optimization
Home-page: https://gitlab.com/florian.feppon/null-space-optimizer
Author: Florian Feppon
Author-email: florian.feppon@polytechnique.edu
License: GNU GPL version 3
Description: 
        # Null space optimizer
        `nullspace_optimizer` is a package implementing the null space algorithm for nonlinear constrained
        optimization.
        
        Please cite the following references when using this source:
        
        FEPPON, Florian, ALLAIRE, Grégoire, et DAPOGNY, Charles.
        *Null space gradient flows for constrained optimization with applications to
         shape optimization.* 2019. HAL preprint [hal-01972915](https://hal.archives-ouvertes.fr/hal-01972915/document).
        
        FEPPON, Florian. *Shape and topology optimization of multiphysics systems.* 2019.
        Université Paris-Saclay. Thèse préparée à l'École polytechnique.
        
        # Installation
        
        ```bash
        # Light version
        pip install nullspace_optimizer
        
        # Full dependencies including colored output and plotting features
        pip install nullspace_optimizer[colored,matplotlib]
        ```
        
        # Running examples
        A few examples of 2-d inequality constrained optimization are available in the `examples' folder.
        They can be run from command line with
        
        ```bash
        python -m nullspace_optimizer.examples.ex0
        python -m nullspace_optimizer.examples.ex1
        python -m nullspace_optimizer.examples.ex2
        ```
        and so on. 
        
        For instance, running `python -m nullspace_optimizer.examples.ex1` should produce the following figure:
        <img src="https://gitlab.com/florian.feppon/null-space-optimizer/raw/public-master/nullspace.png" align="center" alt="Null space gradient flow trajectories" width="40%">
        
        # Requirements
        Runs with python 3.6 and the following libraries:
        * numpy (>=1.12.1)
        * scipy (>=0.19.1)
        * cvxopt (>=1.2.1)
        
        Optional dependencies:
        * colored (>=1.3.93)   *(for colored output)*
        * matplotlib (>=2.0.2) *(for displaying figures while running examples)*
        
Keywords: nonlinear constrained optimization
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Provides-Extra: colored
Provides-Extra: matplotlib
