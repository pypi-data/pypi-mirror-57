Metadata-Version: 2.1
Name: pollination-sdk
Version: 0.2.0
Summary: pollination.cloud
Home-page: https://github.com/pollination/python-sdk
Author: Pollination Solutions
Author-email: pollination@solutions.cloud
License: AGPL
Description: # pollination-sdk
        
        Pollination Cloud API
        
        This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:
        
        - API version: 0.0.1
        - Build package: org.openapitools.codegen.languages.PythonClientCodegen
        
        ## Requirements
        
        Python 2.7 and 3.4+
        
        ## Installation & Usage
        
        ### pip install
        
        The default way to install `pollination-sdk` is through PyPi as follows:
        
        ```sh
        pip install pollination-sdk
        ```
        
        If you need a specific branch you can install straight from the repository using:
        
        ```sh
        pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
        ```
        (you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)
        
        Then import the package:
        ```python
        import pollination_sdk 
        ```
        
        ### Setuptools
        
        Install via [Setuptools](http://pypi.python.org/pypi/setuptools).
        
        ```sh
        python setup.py install --user
        ```
        (or `sudo python setup.py install` to install the package for all users)
        
        Then import the package:
        ```python
        import pollination_sdk
        ```
        
        ## Getting Started
        
        Please follow the [installation procedure](#installation--usage) and then run the following:
        
        ```python
        from __future__ import print_function
        import time
        import pollination_sdk
        from pollination_sdk.rest import ApiException
        from pprint import pprint
        
        configuration = pollination_sdk.Configuration()
        
        # Retrieve a temporary Acces Token (JWT) using your API key id and secret
        API_KEY_ID = 'some-long-id'
        API_KEY_SECRET = 'some-long-secret'
        
        auth = pollination_sdk.AuthenticationApi()
        api_token = pollination_sdk.Token(
          id=API_KEY_ID,
          secret=API_KEY_SECRET
        )
        
        auth_response = auth.login(token)
        
        # Configure Bearer authorization: JWT
        configuration.access_token = auth_response.access_token
        
        # Defining host is optional and default to https://api.pollination.cloud
        configuration.host = "https://api.pollination.cloud"
        # Create an instance of the API class
        api_instance = pollination_sdk.WorkflowsApi(pollination_sdk.ApiClient(configuration))
        id = 'id_example' # str | 
        workflow = pollination_sdk.Workflow() # Workflow | 
        
        try:
            # Update a Workflow
            api_response = api_instance.update(id, workflow)
            pprint(api_response)
        except ApiException as e:
            print("Exception when calling WorkflowsApi->update: %s\n" % e)
        
        ```
        
        ## Documentation for API Endpoints
        
        All URIs are relative to *https://api.pollination.cloud*
        
        Class | Method | HTTP request | Description
        ------------ | ------------- | ------------- | -------------
        *AuthenticationApi* | [**create_api_token**](docs/AuthenticationApi.md#create_api_token) | **POST** /auth/api-token | Create an API Token
        *AuthenticationApi* | [**delete_api_token**](docs/AuthenticationApi.md#delete_api_token) | **DELETE** /auth/api-token | Delete an API Token
        *AuthenticationApi* | [**get_api_token**](docs/AuthenticationApi.md#get_api_token) | **GET** /auth/api-token | Get your API Token ID
        *AuthenticationApi* | [**login**](docs/AuthenticationApi.md#login) | **POST** /auth/login | Login with API Token
        *AuthenticationApi* | [**rotate_api_token_secret**](docs/AuthenticationApi.md#rotate_api_token_secret) | **PUT** /auth/api-token | Rotate an API token secret
        *ModelApi* | [**create**](docs/ModelApi.md#create) | **POST** /models | Create a Model
        *ModelApi* | [**create_faces**](docs/ModelApi.md#create_faces) | **POST** /models/{id}/faces | Create Model Faces
        *ModelApi* | [**delete**](docs/ModelApi.md#delete) | **DELETE** /models/{id} | Delete a Model
        *ModelApi* | [**get**](docs/ModelApi.md#get) | **GET** /models/{id} | Get a Model
        *ModelApi* | [**get_faces**](docs/ModelApi.md#get_faces) | **GET** /models/{id}/faces | Get Model Faces
        *ModelApi* | [**list**](docs/ModelApi.md#list) | **GET** /models | Get Models
        *SensorGridApi* | [**create**](docs/SensorGridApi.md#create) | **POST** /sensor-grids | Create a Sensor Grid
        *SensorGridApi* | [**delete**](docs/SensorGridApi.md#delete) | **DELETE** /sensor-grids/{gid} | Delete a Sensor Grid
        *SensorGridApi* | [**get**](docs/SensorGridApi.md#get) | **GET** /sensor-grids/{gid} | Get a Sensor Grid
        *SensorGridApi* | [**get_sensors**](docs/SensorGridApi.md#get_sensors) | **GET** /sensor-grids/{gid}/sensors | Get Sensors
        *SensorGridApi* | [**list**](docs/SensorGridApi.md#list) | **GET** /sensor-grids | Get Sensor Grids
        *SimulationsApi* | [**create**](docs/SimulationsApi.md#create) | **POST** /simulations | Schedule a simulation
        *SimulationsApi* | [**get**](docs/SimulationsApi.md#get) | **GET** /simulations/{id} | Get a Simulation
        *SimulationsApi* | [**get_simulation_logs**](docs/SimulationsApi.md#get_simulation_logs) | **GET** /simulations/{id}/logs | Get simulation logs
        *SimulationsApi* | [**get_task_logs**](docs/SimulationsApi.md#get_task_logs) | **GET** /simulations/{id}/task/{task_id}/logs | Get a simulation task&#39;s logs
        *SimulationsApi* | [**list**](docs/SimulationsApi.md#list) | **GET** /simulations | List simulations
        *SimulationsApi* | [**resubmit**](docs/SimulationsApi.md#resubmit) | **POST** /simulations/{id}/re-submit | re-submit a simulation
        *SimulationsApi* | [**resume**](docs/SimulationsApi.md#resume) | **PUT** /simulations/{id}/resume | resume a simulation
        *SimulationsApi* | [**suspend**](docs/SimulationsApi.md#suspend) | **PUT** /simulations/{id}/suspend | Suspend a simulation
        *WorkflowsApi* | [**create**](docs/WorkflowsApi.md#create) | **POST** /workflows | Create a Workflow
        *WorkflowsApi* | [**delete**](docs/WorkflowsApi.md#delete) | **DELETE** /workflows/{id} | Delete a Workflow
        *WorkflowsApi* | [**get**](docs/WorkflowsApi.md#get) | **GET** /workflows/{id} | Get a Workflow
        *WorkflowsApi* | [**list**](docs/WorkflowsApi.md#list) | **GET** /workflows | List Workflows
        *WorkflowsApi* | [**update**](docs/WorkflowsApi.md#update) | **PUT** /workflows/{id} | Update a Workflow
        
        
        ## Documentation For Models
        
         - [Accepted](docs/Accepted.md)
         - [Aperture](docs/Aperture.md)
         - [App](docs/App.md)
         - [ArgoArchiveLocation](docs/ArgoArchiveLocation.md)
         - [ArgoArguments](docs/ArgoArguments.md)
         - [ArgoArtifact](docs/ArgoArtifact.md)
         - [ArgoDAG](docs/ArgoDAG.md)
         - [ArgoDAGTask](docs/ArgoDAGTask.md)
         - [ArgoNodeStatus](docs/ArgoNodeStatus.md)
         - [ArgoOutputs](docs/ArgoOutputs.md)
         - [ArgoParameter](docs/ArgoParameter.md)
         - [ArgoRetryStrategy](docs/ArgoRetryStrategy.md)
         - [ArgoS3Location](docs/ArgoS3Location.md)
         - [ArgoSequence](docs/ArgoSequence.md)
         - [ArgoStatus](docs/ArgoStatus.md)
         - [ArgoStep](docs/ArgoStep.md)
         - [ArgoSuspend](docs/ArgoSuspend.md)
         - [ArgoTaskContainer](docs/ArgoTaskContainer.md)
         - [ArgoTemplate](docs/ArgoTemplate.md)
         - [ArgoTemplateRef](docs/ArgoTemplateRef.md)
         - [ArgoWorkflowStep](docs/ArgoWorkflowStep.md)
         - [Arguments](docs/Arguments.md)
         - [Artifact](docs/Artifact.md)
         - [Auth0TokenResponse](docs/Auth0TokenResponse.md)
         - [CreatedContent](docs/CreatedContent.md)
         - [DAG](docs/DAG.md)
         - [DAGTask](docs/DAGTask.md)
         - [Face](docs/Face.md)
         - [Function](docs/Function.md)
         - [Glass](docs/Glass.md)
         - [HTTPLocation](docs/HTTPLocation.md)
         - [HTTPValidationError](docs/HTTPValidationError.md)
         - [KeySecret](docs/KeySecret.md)
         - [Language](docs/Language.md)
         - [LocalLocation](docs/LocalLocation.md)
         - [LocalRequirements](docs/LocalRequirements.md)
         - [LoopControl](docs/LoopControl.md)
         - [Model](docs/Model.md)
         - [Model1](docs/Model1.md)
         - [ModelOut](docs/ModelOut.md)
         - [NewToken](docs/NewToken.md)
         - [Opaque](docs/Opaque.md)
         - [Operator](docs/Operator.md)
         - [Package](docs/Package.md)
         - [Parameter](docs/Parameter.md)
         - [Parent](docs/Parent.md)
         - [Plastic](docs/Plastic.md)
         - [ReferenceWorkflow](docs/ReferenceWorkflow.md)
         - [S3Location](docs/S3Location.md)
         - [Sensor](docs/Sensor.md)
         - [SensorGridIn](docs/SensorGridIn.md)
         - [SensorGridIn1](docs/SensorGridIn1.md)
         - [SensorGridOut](docs/SensorGridOut.md)
         - [ShadeFace](docs/ShadeFace.md)
         - [SubmitSimulation](docs/SubmitSimulation.md)
         - [Token](docs/Token.md)
         - [Transparent](docs/Transparent.md)
         - [ValidationError](docs/ValidationError.md)
         - [Vertex](docs/Vertex.md)
         - [Workflow](docs/Workflow.md)
         - [WorkflowListItem](docs/WorkflowListItem.md)
         - [WorkflowTaskLog](docs/WorkflowTaskLog.md)
        
        
        ## Documentation For Authorization
        
        
        ## JWT
        
        - **Type**: Bearer authentication
        
        
        ## Author
        
        
        
        
        
Keywords: OpenAPI,OpenAPI-Generator,pollination.cloud
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
