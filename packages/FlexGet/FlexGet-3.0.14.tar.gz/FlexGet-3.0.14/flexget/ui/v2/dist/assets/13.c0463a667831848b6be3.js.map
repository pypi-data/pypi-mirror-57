{"version":3,"sources":["webpack:///./src/common/TextField/index.jsx","webpack:///./src/common/SecondaryNav/styles.js","webpack:///./src/common/SecondaryNav/index.jsx","webpack:///./src/utils/hooks/useOverlayState.ts","webpack:///./src/plugins/pendingList/AddListDialog/AddListDialog.jsx","webpack:///./src/plugins/pendingList/AddListDialog/index.js","webpack:///./src/plugins/pendingList/TabList/index.tsx","webpack:///./src/plugins/pendingList/SortList/styles.js","webpack:///./src/plugins/pendingList/SortList/index.jsx","webpack:///./src/common/TaskSelector/TaskSelector.jsx","webpack:///./src/common/TaskSelector/index.js","webpack:///./src/plugins/pendingList/Entry/styles.js","webpack:///./src/plugins/pendingList/Entry/EntryHeader.jsx","webpack:///./src/plugins/pendingList/Entry/Entry.jsx","webpack:///./src/plugins/pendingList/Entry/index.js","webpack:///./src/plugins/pendingList/EntryList/styles.js","webpack:///./src/plugins/pendingList/EntryList/EntryList.jsx","webpack:///./src/plugins/pendingList/EntryList/index.js","webpack:///./src/common/Pagination/styles.js","webpack:///./src/common/Pagination/index.jsx","webpack:///./src/plugins/pendingList/Pagination/styles.js","webpack:///./src/plugins/pendingList/Pagination/Pagination.jsx","webpack:///./src/plugins/pendingList/Pagination/index.js","webpack:///./src/plugins/pendingList/PendingList/styles.js","webpack:///./src/plugins/pendingList/PendingList/index.jsx"],"names":["CustomTextField","input","meta","touched","error","custom","SecondaryAppBar","AppBar","SecondaryToolbar","Toolbar","theme","palette","secondary","getContrastText","SecondaryTabs","Tabs","SecondaryNav","children","tabs","tabProps","darkTheme","indicatorColor","defaultProps","AddListDialog","open","onClose","handleSubmit","Dialog","onRequestClose","DialogTitle","onSubmit","DialogContent","Field","autoFocus","id","label","fullWidth","name","component","TextField","DialogActions","Button","onClick","type","variant","color","reduxForm","form","connect","ALD","dispatch","data","Promise","resolve","reject","actions","addList","request","onSubmitSuccess","reset","TabList","defaultState","isOpen","setOpen","addDialog","React","openOverlay","closeOverlay","openDialog","useDispatch","getLists","handleChange","_","selected","selectList","useSelector","pendingList","lists","listId","shallowEqual","usePendingList","value","scrollButtons","onChange","map","Tab","key","icon","ButtonWrapper","SortList","arguments","event","props","onSortUpdate","sortBy","sortOrder","perPage","target","this","FormControl","Select","inputProps","MenuItem","PureComponent","TaskSelector","handleClick","recentTask","tasks","taskName","getAttribute","task","reduce","accum","t","recent","anchorEl","handleClose","Menu","Boolean","transition","Fade","length","ListSubheader","Divider","configs","EntryCard","Card","Poster","EntryInfo","Chips","GenreChip","Chip","QualityChip","primary","EntryPlot","ActionIcon","FontAwesomeIcon","typography","pxToRem","spacing","StarIcon","header","EntryHeader","state","handlePopoverOpen","setState","handlePopoverClose","entry","ratings","onMouseOver","onFocus","onMouseOut","onBlur","Typography","alt","site","rating","votes","Popover","anchorOrigin","vertical","horizontal","transformOrigin","genres","quality","g","q","title","titleFormatted","className","Tooltip","enterDelay","chips","Entry","taskMenuEl","handleInjectOpen","currentTarget","handleInjectClose","handleInjectClick","injectEntry","links","Object","entries","plugin","link","aria-label","href","approveEntry","rejectEntry","removeEntry","approved","posters","descriptions","description","src","p","CardActions","ListWrapper","EntryWrapper","breakpoints","up","EntryList","getTasks","updateEntries","prevProps","page","items","preItems","timer","clearTimeout","setTimeout","getEntries","order","taskActions","params","css","active","firstLink","lastLink","Pagination","isActive","isDisabled","join","disabled","makeLink","styles","text","button","createUltimatePagination","itemTypeToComponent","PAGE","ELLIPSIS","FIRST_PAGE_LINK","PREVIOUS_PAGE_LINK","NEXT_PAGE_LINK","LAST_PAGE_LINK","WrapperComponent","PaginationWrapper","ListPagination","onPageUpdate","Number","totalCount","totalPages","Math","ceil","currentPage","Content","PendingList","handleNewPage","handleSortUpdate"],"mappings":"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","file":"13.c0463a667831848b6be3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nconst CustomTextField = ({ input, meta: { touched, error }, ...custom }) => (<TextField error={touched && error} {...input} {...custom}/>);\nCustomTextField.propTypes = {\n    input: PropTypes.object.isRequired,\n    meta: PropTypes.object.isRequired,\n};\nexport default CustomTextField;\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nimport { Toolbar, AppBar, Tabs } from '@material-ui/core';\nexport const SecondaryAppBar = styled(AppBar) `\n  position: static;\n`;\nexport const SecondaryToolbar = styled(Toolbar) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\nexport const SecondaryTabs = styled(Tabs) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { darkTheme } from 'theme';\nimport { SecondaryAppBar, SecondaryToolbar, SecondaryTabs } from './styles';\nconst SecondaryNav = ({ children, tabs, ...tabProps }) => (<MuiThemeProvider theme={darkTheme}>\n    <SecondaryAppBar>\n      {tabs ? (<SecondaryTabs indicatorColor=\"primary\" {...tabProps}>\n          {children}\n        </SecondaryTabs>) : (<SecondaryToolbar>{children}</SecondaryToolbar>)}\n    </SecondaryAppBar>\n  </MuiThemeProvider>);\nSecondaryNav.propTypes = {\n    children: PropTypes.node.isRequired,\n    tabs: PropTypes.bool,\n};\nSecondaryNav.defaultProps = {\n    tabs: false,\n};\nexport default SecondaryNav;\n","import * as React from 'react';\nexport const useOverlayState = (defaultState) => {\n    const [isOpen, setOpen] = React.useState(defaultState);\n    const openOverlay = React.useCallback(() => setOpen(true), [setOpen]);\n    const closeOverlay = React.useCallback(() => setOpen(false), [setOpen]);\n    return { isOpen, openOverlay, closeOverlay };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from 'common/TextField';\nconst AddListDialog = ({ open, onClose, handleSubmit }) => (<Dialog open={open} onRequestClose={onClose}>\n    <DialogTitle>Add New Pending List</DialogTitle>\n    <form onSubmit={handleSubmit}>\n      <DialogContent>\n        <Field autoFocus id=\"name\" label=\"List Name\" fullWidth name=\"name\" component={TextField}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} type=\"button\">\n          Cancel\n        </Button>\n        <Button variant=\"submit\" color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </form>\n  </Dialog>);\nAddListDialog.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func,\n};\nAddListDialog.defaultProps = {\n    open: false,\n    handleSubmit: () => { },\n};\nexport default reduxForm({\n    form: 'addPendingList',\n})(AddListDialog);\n","import { connect } from 'react-redux';\nimport { reset } from 'redux-form';\nimport actions from '../state/actions';\nimport AddListDialog from './AddListDialog';\nfunction mapDispatchToProps(dispatch, { onClose }) {\n    return {\n        onSubmit: data => new Promise((resolve, reject) => dispatch(actions.addList.request({ data, resolve, reject }))),\n        onSubmitSuccess: () => {\n            onClose();\n            dispatch(reset('addPendingList'));\n        },\n        onClose: () => {\n            onClose();\n            dispatch(reset('addPendingList'));\n        },\n    };\n}\nexport default connect(null, mapDispatchToProps)(AddListDialog);\n","import * as React from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport Tab from '@material-ui/core/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SecondaryNav from 'common/SecondaryNav';\nimport { useOverlayState } from 'utils/hooks/useOverlayState';\nimport AddListDialog from '../AddListDialog';\nimport actions from '../state/actions';\nconst ALD = AddListDialog; // eslint-disable-line @typescript-eslint/no-explicit-any\nconst usePendingList = openDialog => {\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        dispatch(actions.getLists.request());\n    }, [dispatch]);\n    const handleChange = React.useCallback((_, selected) => {\n        if (selected !== 'add') {\n            return dispatch(actions.selectList(selected));\n        }\n        return openDialog();\n    }, [dispatch, openDialog]);\n    const { lists, listId } = useSelector(({ pendingList }) => ({\n        lists: pendingList.lists,\n        listId: pendingList.selected,\n    }), shallowEqual);\n    return { handleChange, lists, listId };\n};\nconst TabList = () => {\n    const addDialog = useOverlayState(false);\n    const { handleChange, lists, listId } = usePendingList(addDialog.openOverlay);\n    return (<div>\n      <SecondaryNav value={listId} variant=\"scrollable\" scrollButtons=\"on\" onChange={handleChange} tabs>\n        {lists.map(({ name, id }) => (<Tab label={name} value={id} key={id}/>))}\n        <Tab icon={<FontAwesomeIcon icon=\"plus-circle\"/>} value=\"add\"/>\n      </SecondaryNav>\n      <ALD open={addDialog.isOpen} onClose={addDialog.closeOverlay}/>\n    </div>);\n};\nexport default TabList;\n","import styled from '@emotion/styled';\nexport const ButtonWrapper = styled.div `\n  display: flex;\n  justify-content: center;\n  > div {\n    margin-left: 2em;\n    margin-right: 2em;\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { ButtonWrapper } from './styles';\nexport default class SortList extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.handleChange = event => {\n            const { onSortUpdate, sortBy, sortOrder, perPage } = this.props;\n            const data = {\n                sortBy,\n                sortOrder,\n                perPage,\n                [event.target.name]: event.target.value,\n            };\n            onSortUpdate(data.sortBy, data.sortOrder, data.perPage);\n        };\n    }\n    render() {\n        const { sortBy, sortOrder, perPage } = this.props;\n        return (<ButtonWrapper>\n        <FormControl>\n          <Select value={sortBy} onChange={this.handleChange} inputProps={{\n            name: 'sortBy',\n            id: 'sortBy',\n        }}>\n            <MenuItem value=\"added\">Date Added</MenuItem>\n            <MenuItem value=\"title\">Title</MenuItem>\n            <MenuItem value=\"original_url\">URL</MenuItem>\n            <MenuItem value=\"approved\">Approved</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select value={sortOrder} onChange={this.handleChange} inputProps={{\n            name: 'sortOrder',\n            id: 'sortOrder',\n        }}>\n            <MenuItem value=\"desc\">Desc</MenuItem>\n            <MenuItem value=\"asc\">Asc</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select value={perPage} onChange={this.handleChange} inputProps={{\n            name: 'perPage',\n            id: 'perPage',\n        }}>\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n          </Select>\n        </FormControl>\n      </ButtonWrapper>);\n    }\n}\nSortList.propTypes = {\n    onSortUpdate: PropTypes.func.isRequired,\n    sortBy: PropTypes.string.isRequired,\n    sortOrder: PropTypes.string.isRequired,\n    perPage: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\nclass TaskSelector extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.handleClick = event => {\n            const { handleClick, recentTask, tasks } = this.props;\n            const taskName = event.target.getAttribute('value');\n            const task = tasks.reduce((accum, t) => {\n                if (t.name === taskName)\n                    return t;\n                return accum;\n            }, null);\n            if (task)\n                recentTask(task);\n            handleClick(task);\n        };\n    }\n    render() {\n        const { tasks, recent, anchorEl, handleClose } = this.props;\n        return (<Menu id=\"fade-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose} transition={Fade}>\n        {recent.length > 0 && (<div>\n            <ListSubheader>Recent</ListSubheader>\n            {recent.map(t => (<MenuItem onClick={this.handleClick} value={t.name} key={t.name}>\n                {t.name}\n              </MenuItem>))}\n            <Divider />\n          </div>)}\n        <span>Recent</span>\n        {tasks.map(t => (<MenuItem onClick={this.handleClick} value={t.name} key={t.name}>\n            {t.name}\n          </MenuItem>))}\n      </Menu>);\n    }\n}\nTaskSelector.propTypes = {\n    handleClose: PropTypes.func.isRequired,\n    handleClick: PropTypes.func.isRequired,\n    recentTask: PropTypes.func.isRequired,\n    tasks: PropTypes.array.isRequired,\n    recent: PropTypes.array.isRequired,\n    anchorEl: PropTypes.object,\n};\nTaskSelector.defaultProps = {\n    anchorEl: null,\n};\nexport default TaskSelector;\n","import { connect } from 'react-redux';\nimport TaskSelector from 'common/TaskSelector/TaskSelector';\nimport actions from 'core/tasks/state/actions';\nexport function mapStateToProps({ tasks }) {\n    return {\n        tasks: tasks.configs,\n        recent: tasks.recent,\n    };\n}\nexport function mapDispatchToProps(dispatch) {\n    return {\n        recentTask: task => dispatch(actions.recentTask(task)),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskSelector);\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport theme from 'theme';\nimport { Card, Chip } from '@material-ui/core';\nexport const EntryCard = styled(Card) `\n  height: 300px;\n  padding: 2rem;\n  display: flex;\n  flex-direction: row;\n`;\nexport const Poster = styled.div `\n  margin-right: 20px;\n  height: 100%;\n  img {\n    max-height: 100%;\n    width: auto;\n  }\n`;\nexport const EntryInfo = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Chips = styled.div `\n  margin-right: 4;\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2;\n  div {\n    margin: 0.2rem;\n    font-weight: bold;\n    font-size: 1.3rem;\n    height: 2rem;\n  }\n`;\nexport const GenreChip = styled(Chip) `\n  background-color: ${theme.palette.secondary[100]};\n`;\nexport const QualityChip = styled(Chip) `\n  background-color: ${theme.palette.primary[100]};\n`;\n// thanks to https://codepen.io/martinwolf/pen/qlFdp\nexport const EntryPlot = styled.p `\n  display: block; /* Fallback for non-webkit */\n  display: -webkit-box;\n  height: 8.4rem;\n  font-size: 1.5rem;\n  line-height: 1.4;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const ActionIcon = styled(FontAwesomeIcon) `\n  margin-right: ${theme.typography.pxToRem(theme.spacing(1))};\n  font-size: 1.6rem;\n`;\nexport const StarIcon = styled(FontAwesomeIcon) `\n  color: gold;\n`;\nexport const header = css `\n  display: flex;\n  flex-direction: row;\n  div:first-child {\n    flex-grow: 1;\n  }\n  h2 {\n    word-wrap: break-word;\n  }\n`;\nexport const rating = css `\n  flex-direction: row;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FlexGetEntry from 'common/FlexGetEntry';\nimport Divider from '@material-ui/core/Divider';\nimport { Chips, GenreChip, QualityChip, StarIcon, header } from './styles';\nclass EntryHeader extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = { anchorEl: null };\n        this.handlePopoverOpen = event => {\n            this.setState({ anchorEl: event.target });\n        };\n        this.handlePopoverClose = () => {\n            this.setState({ anchorEl: null });\n        };\n    }\n    ratings() {\n        const { anchorEl } = this.state;\n        const { entry: { ratings = [] }, } = this.props;\n        const open = !!anchorEl;\n        return (<div>\n        <div onMouseOver={this.handlePopoverOpen} onFocus={this.handlePopoverOpen} onMouseOut={this.handlePopoverClose} onBlur={this.handlePopoverClose}>\n          <Typography variant=\"h6\">\n            {ratings.length > 0 && (<span>\n                <StarIcon icon=\"star\" alt={ratings[0].site}/>\n                {ratings[0].rating}\n                {ratings[0].votes > 0 && <span> ({ratings[0].votes})</span>}\n              </span>)}\n          </Typography>\n        </div>\n        <Popover open={open} anchorEl={anchorEl} anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n        }} transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n        }} onClose={this.handlePopoverClose}>\n          <Typography>I use Popover. test</Typography>\n        </Popover>\n      </div>);\n    }\n    chips() {\n        const { entry: { genres = [], quality = [] }, } = this.props;\n        return (<Chips>\n        {genres.map(g => (<GenreChip label={g} key={`${g}-genre`}/>))}\n        {quality.map(q => (<QualityChip label={q} key={`${q}-quality`}/>))}\n      </Chips>);\n    }\n    render() {\n        const { entry: { title, titleFormatted = [] }, } = this.props;\n        return (<div>\n        <div className={header}>\n          <Tooltip enterDelay={200} title={title}>\n            <Typography variant=\"h6\">{titleFormatted}</Typography>\n          </Tooltip>\n          {this.ratings()}\n        </div>\n        {this.chips()}\n        <Divider />\n      </div>);\n    }\n}\nEntryHeader.propTypes = {\n    entry: PropTypes.instanceOf(FlexGetEntry).isRequired,\n};\nexport default EntryHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'react-image';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport FlexGetEntry from 'common/FlexGetEntry';\nimport TaskSelector from 'common/TaskSelector';\nimport EntryHeader from './EntryHeader';\nimport { ActionIcon, EntryCard, Poster, EntryInfo, EntryPlot } from './styles';\n/* eslint-disable camelcase */\nclass Entry extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            taskMenuEl: null,\n        };\n        this.handleInjectOpen = event => this.setState({ taskMenuEl: event.currentTarget });\n        this.handleInjectClose = () => this.setState({ taskMenuEl: null });\n        this.handleInjectClick = task => {\n            const { injectEntry } = this.props;\n            injectEntry(task);\n            this.handleInjectClose();\n        };\n    }\n    links() {\n        const { entry: { links }, } = this.props;\n        return Object.entries(links).map(([plugin, link]) => (<Button key={`${plugin}-link`} color=\"primary\" aria-label=\"add\" href={link} target=\"_blank\">\n        {plugin}\n      </Button>));\n    }\n    render() {\n        const { entry, approveEntry, rejectEntry, removeEntry } = this.props;\n        const { approved, titleFormatted, posters } = entry;\n        const { taskMenuEl } = this.state;\n        const { entry: { descriptions = [] }, } = this.props;\n        const description = descriptions.length > 0 ? descriptions[0] : '';\n        return (<EntryCard>\n        <Poster>\n          <Img src={posters.map(p => `api/cached/?url=${p}`)} alt={titleFormatted}/>\n        </Poster>\n        <EntryInfo>\n          <EntryHeader entry={entry}/>\n          <EntryPlot>{description}</EntryPlot>\n          <CardActions>\n            {approved ? (<Button onClick={rejectEntry}>\n                <ActionIcon icon=\"times\"/>\n                Reject\n              </Button>) : (<Button onClick={approveEntry}>\n                <ActionIcon icon=\"check\"/>\n                Approve\n              </Button>)}\n            <Button onClick={removeEntry}>\n              <ActionIcon icon=\"trash-alt\"/>\n              Remove\n            </Button>\n            <Button onClick={this.handleInjectOpen}>\n              <ActionIcon icon=\"arrows-alt\"/>\n              Inject\n            </Button>\n            <TaskSelector anchorEl={taskMenuEl} handleClick={this.handleInjectClick} handleClose={this.handleInjectClose}/>\n            {this.links()}\n          </CardActions>\n        </EntryInfo>\n      </EntryCard>);\n    }\n}\nEntry.propTypes = {\n    entry: PropTypes.instanceOf(FlexGetEntry).isRequired,\n    approveEntry: PropTypes.func.isRequired,\n    rejectEntry: PropTypes.func.isRequired,\n    removeEntry: PropTypes.func.isRequired,\n    injectEntry: PropTypes.func.isRequired,\n};\nexport default Entry;\n","import { connect } from 'react-redux';\nimport actions from 'plugins/pendingList/state/actions';\nimport Entry from './Entry';\nfunction mapDispatchToProps(dispatch, { entry }) {\n    return {\n        approveEntry: () => dispatch(actions.approveEntry.request(entry)),\n        removeEntry: () => dispatch(actions.removeEntry.request(entry)),\n        rejectEntry: () => dispatch(actions.rejectEntry.request(entry)),\n        injectEntry: task => dispatch(actions.injectEntry.request(entry, task)),\n    };\n}\nexport default connect(null, mapDispatchToProps)(Entry);\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nexport const ListWrapper = styled.div `\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\nexport const EntryWrapper = styled.div `\n  width: 100%;\n  padding: ${theme.typography.pxToRem(theme.spacing(2))};\n\n  ${theme.breakpoints.up('sm')} {\n    width: 100%;\n  }\n\n  ${theme.breakpoints.up('md')} {\n    width: 50%;\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport FlexGetEntry from 'common/FlexGetEntry';\nimport Entry from '../Entry';\nimport { EntryWrapper, ListWrapper } from './styles';\nexport default class EntryList extends PureComponent {\n    componentDidMount() {\n        const { getTasks } = this.props;\n        // Load tasks for TaskSelector\n        getTasks();\n        this.updateEntries();\n    }\n    componentDidUpdate(prevProps) {\n        const { listId, sortBy, sortOrder, page, perPage, entries: { items = [] }, } = this.props;\n        const { entries: { items: preItems = [] }, } = prevProps;\n        // If list of sort options have changes\n        if (listId !== prevProps.listId ||\n            page !== prevProps.page ||\n            sortBy !== prevProps.sortBy ||\n            sortOrder !== prevProps.sortOrder ||\n            perPage !== prevProps.perPage) {\n            this.updateEntries();\n        }\n        // Check if entries were removed, probably due to an action such as remove\n        // Delay the update for 100ms\n        if (preItems.length > items.length) {\n            if (this.timer)\n                clearTimeout(this.timer);\n            this.timer = setTimeout(() => this.updateEntries(), 1000);\n        }\n    }\n    updateEntries() {\n        const { sortBy, sortOrder, page, perPage, getEntries, listId } = this.props;\n        getEntries(listId, {\n            sortBy,\n            order: sortOrder,\n            perPage,\n            page,\n        });\n    }\n    render() {\n        const { entries: { items = [] }, listId, } = this.props;\n        return (<div>\n        <ListWrapper>\n          {listId === null && <div>Please Select List</div>}\n          {items &&\n            items.map(entry => (<EntryWrapper key={entry.id}>\n                <Entry entry={entry}/>\n              </EntryWrapper>))}\n        </ListWrapper>\n      </div>);\n    }\n}\nEntryList.propTypes = {\n    listId: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    entries: PropTypes.shape({\n        page: PropTypes.number,\n        totalCount: PropTypes.number,\n        items: PropTypes.arrayOf(PropTypes.instanceOf(FlexGetEntry)),\n    }).isRequired,\n    getEntries: PropTypes.func.isRequired,\n    getTasks: PropTypes.func.isRequired,\n    sortBy: PropTypes.string.isRequired,\n    sortOrder: PropTypes.string.isRequired,\n    perPage: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n};\nEntryList.defaultProps = {\n    listId: false,\n};\n","import { connect } from 'react-redux';\nimport taskActions from 'core/tasks/state/actions';\nimport actions from 'plugins/pendingList/state/actions';\nimport EntryList from './EntryList';\nfunction mapStateToProps({ pendingList }) {\n    return {\n        entries: pendingList.entries,\n        listId: pendingList.selected,\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getTasks: () => dispatch(taskActions.getTasks.request()),\n        getEntries: (listId, params) => dispatch(actions.getEntries.request(listId, params)),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryList);\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport theme from 'theme';\nexport const link = css `\n  font-size: 16px;\n  margin: 0 0 5px;\n  padding: 2px 12px;\n  background-color: ${theme.palette.primary[600]};\n  min-width: 50px;\n  max-width: 50px;\n  border-radius: 0;\n  border-right: 1px solid rgba(0, 0, 0, 0.25);\n  &:hover {\n    background-color: ${theme.palette.primary[300]};\n  }\n`;\nexport const active = css `\n  background-color: ${theme.palette.primary[300]};\n`;\nexport const firstLink = css `\n  border-radius: 10px 0 0 10px;\n`;\nexport const lastLink = css `\n  border-radius: 0 10px 10px 0;\n  border-right: none;\n`;\nexport const Pagination = styled.div `\n  justify-content: center;\n  display: flex;\n  flex-direction: row;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { createUltimatePagination } from 'react-ultimate-pagination';\nimport { Pagination, firstLink, lastLink, link, active } from './styles';\nconst page = ({ isActive, value, isDisabled, onClick }) => (<Button className={isActive ? [active, link].join(' ') : link} onClick={onClick} disabled={isDisabled}>\n    {value}\n  </Button>);\npage.propTypes = {\n    value: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    isActive: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n};\npage.defaultProps = { isDisabled: false, isActive: false };\nfunction makeLink(styles, text) {\n    const button = ({ isActive, onClick, isDisabled }) => (<Button className={isActive ? [active, ...styles].join(' ') : styles.join(' ')} onClick={onClick} disabled={isActive ? true : isDisabled}>\n      {text}\n    </Button>);\n    button.propTypes = {\n        isActive: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        onClick: PropTypes.func.isRequired,\n    };\n    button.defaultProps = { isDisabled: false, isActive: false };\n    return button;\n}\nfunction wrapper({ children }) {\n    return <Pagination>{children}</Pagination>;\n}\nwrapper.propTypes = { children: PropTypes.node.isRequired };\nexport default createUltimatePagination({\n    itemTypeToComponent: {\n        PAGE: page,\n        ELLIPSIS: makeLink([link], '...'),\n        FIRST_PAGE_LINK: makeLink([firstLink, link], '<<'),\n        PREVIOUS_PAGE_LINK: makeLink([link], '<'),\n        NEXT_PAGE_LINK: makeLink([link], '>'),\n        LAST_PAGE_LINK: makeLink([lastLink, link], '>>'),\n    },\n    WrapperComponent: wrapper,\n});\n","import styled from '@emotion/styled';\nexport const PaginationWrapper = styled.div `\n  margin-top: -41px;\n`;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'common/Pagination';\nimport FlexgetEntry from 'common/FlexGetEntry';\nimport { PaginationWrapper } from './styles';\nexport default class ListPagination extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.onPageUpdate = page => this.props.onPageUpdate(Number(page));\n    }\n    render() {\n        const { entries: { totalCount, page }, perPage, } = this.props;\n        if (!totalCount) {\n            return null;\n        }\n        const totalPages = Math.ceil(totalCount / perPage);\n        return (<PaginationWrapper>\n        {totalPages > 1 && (<Pagination currentPage={page} totalPages={totalPages} onChange={this.onPageUpdate}/>)}\n      </PaginationWrapper>);\n    }\n}\nListPagination.propTypes = {\n    entries: PropTypes.shape({\n        page: PropTypes.number,\n        totalCount: PropTypes.number,\n        items: PropTypes.arrayOf(PropTypes.instanceOf(FlexgetEntry)),\n    }).isRequired,\n    onPageUpdate: PropTypes.func.isRequired,\n    perPage: PropTypes.number.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Pagination from './Pagination';\nfunction mapStateToProps({ pendingList }) {\n    return {\n        entries: pendingList.entries,\n    };\n}\nexport default connect(mapStateToProps, null)(Pagination);\n","import styled from '@emotion/styled';\nimport theme from 'theme';\nexport const Content = styled.div `\n  flex: 1;\n  overflow-y: auto;\n  padding: ${theme.typography.pxToRem(theme.spacing(1))};\n\n  ${theme.breakpoints.up('sm')} {\n    padding: ${theme.typography.pxToRem(theme.spacing(2))};\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport { NoPaddingWrapper } from 'common/styles';\nimport TabList from '../TabList';\nimport SortList from '../SortList';\nimport EntryList from '../EntryList';\nimport Pagination from '../Pagination';\nimport { Content } from './styles';\nclass PendingList extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            listId: false,\n            page: 1,\n            perPage: 50,\n            sortBy: 'added',\n            sortOrder: 'desc',\n        };\n        this.selectList = listId => this.setState({ listId, page: 1 });\n        this.handleNewPage = page => this.setState({ page });\n        this.handleSortUpdate = (sortBy, sortOrder, perPage) => this.setState({ sortBy, sortOrder, perPage });\n    }\n    render() {\n        const { listId, sortBy, sortOrder, perPage, page } = this.state;\n        return (<NoPaddingWrapper>\n        <TabList listId={listId} selectList={this.selectList}/>\n        <Content>\n          <SortList onSortUpdate={this.handleSortUpdate} sortBy={sortBy} sortOrder={sortOrder} perPage={perPage}/>\n          <EntryList listId={listId} sortBy={sortBy} sortOrder={sortOrder} page={page} perPage={perPage}/>\n        </Content>\n        <Pagination listId={listId} onPageUpdate={this.handleNewPage} perPage={perPage}/>\n      </NoPaddingWrapper>);\n    }\n}\nexport default PendingList;\n"],"sourceRoot":""}