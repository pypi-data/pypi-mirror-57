<?python import json ?>
<span tal:define="name name|field.name;
                  css_class css_class|field.widget.css_class;
                  oid oid|field.oid;
                  style style|field.widget.style;"
      tal:omit-tag="" i18n:domain="c2cgeoform">
    <input type="hidden" name="${name}" value="${cstruct}" 
           tal:attributes="class string: form-control ${css_class or ''};
                           style style"
           id="${oid}"/>
    <div id="map_${oid}" class="map"></div>
    <script>
      (function() {
        // Translations
        var controlsDefinition = Object.assign(${controls_definition}, {
          drawPointTooltip: '${_('Draw point')}',
          drawLineTooltip: '${_('Draw line')}',
          drawPolygonTooltip: '${_('Draw polygon')}',
          modifyTooltip: '${_('Modify')}',
          clearTooltip: '${_('Remove all')}',
        })

        // Defer widget creation
        deform.addCallback('${oid}', function (oid) {
          c2cgeoform.initMapWidget(oid, {
            geojson: '${cstruct}',
            baselayer: ${structure: json.dumps(field.widget.base_layer)},
            view: {
              projection: ${structure: json.dumps(field.widget.projection) },
              center: ${structure: json.dumps(field.widget.center) },
              zoom: ${structure: json.dumps(field.widget.zoom) },
              fit_max_zoom: ${structure: json.dumps(field.widget.fit_max_zoom) },
            },
            translations: {
              zoomInTipLabel: '${_('Zoom In')}',
              zoomOutTipLabel: '${_('Zoom Out')}',
              attributionTipLabel: '${_('Attributions')}',
            },
          }, controlsDefinition)
        })
      })()
    </script>
</span>
