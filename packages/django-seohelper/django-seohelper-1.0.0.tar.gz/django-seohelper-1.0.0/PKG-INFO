Metadata-Version: 2.1
Name: django-seohelper
Version: 1.0.0
Summary: Manager the meta information of your pages in Django
Home-page: https://github.com/kplaube/django-seohelper/
Author: Klaus Laube
Author-email: kplaube@gmail.com
License: GNU Lesser General Public License (LGPL), Version 3
Description: # django-seohelper
        
        [![Travis CI](https://secure.travis-ci.org/kplaube/django-seohelper.png)](https://travis-ci.org/kplaube/django-seohelper)
        [![Coverage Status](https://coveralls.io/repos/kplaube/django-seohelper/badge.png)](https://coveralls.io/r/kplaube/django-seohelper)
        [![PyPI version](https://badge.fury.io/py/django-seohelper.png)](http://badge.fury.io/py/django-seohelper)
        
        **Django SeoHelper** is a pluggable application that helps you to add
        meta-information to your Django templates.
        
        Soon, more information about usage.
        
        ## Installation
        
        Using pip:
        
            pip install django-seohelper
        
        Using the source code:
        
            git clone https://github.com/kplaube/django-seohelper.git
            cd django-seohelper/
            python setup.py install
        
        Configuring
        
        - Add `seohelper` to your `INSTALLED_APPS`
        
        ## Adding the code to your Template
        
        You need to put the code below in your template file:
        
        {% load seo_helper %}
        {% seo_helper request.path as meta %}
        
            <html>
            <head>
                <title>{{ meta.title }}</title>
        
                <meta name="description" content="{{ meta.description }}" />
                <meta name="keywords" content="{{ meta.keywords }}" />
                <meta name="robots" content="{{ meta.robot_tags }}" />
            </head>
        
            ...
        
            </html>
        
        Where `seo_helper` is the templatetag, `request.path` is the complete path of the document and `meta` is the variable where SeoHelper will keep the document's metadata.
        
        ## Using the admin
        
        Let's suppose we want to add metadata to `http://myblog.com/2013/01/01/hello/`. So,
        we need to access `/admin/seohelper/document/add/` and create a record with these parameters:
        
        - **URL:** /2013/01/01/hello-world/
        - **Title:** Hello World!
        - **Description:** My first post.
        - **Keywords:** index,follow
        
        Now, when we access the `http://myblog.com/2013/01/01/hello/`, SeoHelper will restore those data from database and will show these in your page.
        
Keywords: web django apps seo seohelper
Platform: UNKNOWN
Classifier: Environment :: Plugins
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
