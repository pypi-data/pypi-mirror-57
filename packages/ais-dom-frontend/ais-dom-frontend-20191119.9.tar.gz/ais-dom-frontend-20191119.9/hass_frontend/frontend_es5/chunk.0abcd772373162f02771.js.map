{"version":3,"sources":["webpack:///./src/panels/lovelace/editor/select-view/hui-dialog-select-view.ts"],"names":["HuiDialogSelectView","_decorate","customElement","_initialize","_LitElement","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","F","d","kind","decorators","property","key","value","_showDialog","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_params","updateComplete","stop","_x","changedProps","_get","prototype","toggleAttribute","lovelace","config","views","some","view","icon","html","_templateObject2","_openedChanged","_selectView","_templateObject","shadowRoot","querySelector","e","detail","viewSelectedCallback","_dialog","close","ev","undefined","LitElement"],"mappings":"20FAmBO,IAAMA,80LAAbC,CAAA,CADCC,YAAc,2BACf,SAAAC,EAAAC,GAAA,IAAaJ,EAAb,SAAAK,GAAA,SAAAL,IAAA,IAAAM,EAAAC,mGAAAC,CAAAC,KAAAT,GAAA,QAAAU,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAN,KAAAF,OAAAD,EAAAU,EAAAhB,IAAAiB,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAN,mDAAAV,EAAAiB,EAAAb,MAAA,yOAAAc,CAAArB,EAAAI,GAAAJ,EAAA,UAAAsB,EAAatB,EAAbuB,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,UAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,aAAAC,MAAA,iBAAAC,KAAAC,mBAAAC,KAGE,SAAAC,EAAwBC,GAAxB,OAAAH,mBAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACE5B,KAAK6B,QAAUL,EADjBE,EAAAE,KAAA,EAEQ5B,KAAK8B,eAFb,wBAAAJ,EAAAK,SAAAR,EAAAvB,qLAHF,gBAAAgC,GAAA,OAAAZ,EAAAX,MAAAT,KAAAE,YAAA,KAAAa,KAAA,SAAAG,IAAA,UAAAC,MAQE,SAAkBc,GAChBC,EAAA3B,EATShB,EAST4C,WAAA,UAAAnC,MAAAQ,KAAAR,KAAciC,GACdG,YACEpC,KACA,cACAA,KAAK6B,QAASQ,SAAUC,SACnBtC,KAAK6B,QAASQ,SAAUC,OAAOC,MAAMC,KAAK,SAACC,GAAD,OAAUA,EAAKC,UAdpE,CAAA3B,KAAA,SAAAG,IAAA,SAAAC,MAmBE,WACE,OAAKnB,KAAK6B,QAGHc,YAAPC,IAIuB5C,KAAK6C,eAIN7C,KAAK6B,QAASQ,SAASC,OACxBtC,KAAK8C,aAXjBH,YAAPI,OArBN,CAAAhC,KAAA,MAAAG,IAAA,UAAAC,MAsCE,WACE,OAAOnB,KAAKgD,WAAYC,cAAc,qBAvC1C,CAAAlC,KAAA,SAAAG,IAAA,cAAAC,MA0CE,SAAoB+B,GAClB,IAAMT,EAAeS,EAAEC,OAAOV,KAC9BzC,KAAK6B,QAASuB,qBAAqBX,GACnCzC,KAAKqD,QAAQC,UA7CjB,CAAAvC,KAAA,SAAAG,IAAA,iBAAAC,MAgDE,SAAuBoC,GACfA,EAAGJ,OAAehC,QACtBnB,KAAK6B,aAAU2B,QAlDoBC","file":"chunk.0abcd772373162f02771.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport { toggleAttribute } from \"../../../../common/dom/toggle_attribute\";\nimport \"../../components/hui-views-list\";\n\n// tslint:disable-next-line:no-duplicate-imports\nimport { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\n\nimport { SelectViewDialogParams } from \"./show-select-view-dialog\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\n\n@customElement(\"hui-dialog-select-view\")\nexport class HuiDialogSelectView extends LitElement {\n  @property() private _params?: SelectViewDialogParams;\n\n  public async showDialog(params: SelectViewDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    toggleAttribute(\n      this,\n      \"hide-icons\",\n      this._params!.lovelace!.config\n        ? !this._params!.lovelace!.config.views.some((view) => view.icon)\n        : true\n    );\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>Choose a view</h2>\n        <hui-views-list \n        .lovelaceConfig=${this._params!.lovelace.config} \n        @view-selected=${this._selectView}>\n        </hui-view-list>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _selectView(e: CustomEvent): void {\n    const view: number = e.detail.view;\n    this._params!.viewSelectedCallback(view);\n    this._dialog.close();\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-select-view\": HuiDialogSelectView;\n  }\n}\n"],"sourceRoot":""}