{"version":3,"sources":["webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/common/util/debounce.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/data/entity_registry.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/panels/config/entity_registry/show-dialog-entity-registry-detail.ts","webpack:///./src/panels/config/entity_registry/ha-config-entity-registry.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeStateName","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","undefined","attributes","friendly_name","computeObjectId","entity_id","replace","ironIconClass","customElements","get","loaded","HaIcon","_ironIconClass","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","key","value","node","eventName","methodName","_get","prototype","_iconsetName","e","then","bind","define","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","counter","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","persistent_notification","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","zone","domain","state","console","warn","DEFAULT_DOMAIN_ICON","entityId","substr","indexOf","debounce","func","wait","timeout","immediate","context","callNow","clearTimeout","setTimeout","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","state_icon_stateIcon","domainIcons","binary_sensor","activated","device_class","cover","open","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","UNIT_C","UNIT_F","has_date","has_time","stateIcon","icon","computeDomain","MwcSwitch","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","_MwcSwitch2","F","kind","decorators","query","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","static","css","_templateObject","computeEntityRegistryName","updateEntityRegistryEntry","removeEntityRegistryEntry","subscribeEntityRegistry","home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_0__","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_1__","_common_util_debounce__WEBPACK_IMPORTED_MODULE_2__","hass","entry","name","states","updates","callWS","Object","assign","type","fetchEntityRegistry","conn","sendMessagePromise","subscribeEntityRegistryUpdates","store","subscribeEvents","entities","setState","onChange","createCollection","afterNextRender","nextRender","cb","requestAnimationFrame","Promise","resolve","loadEntityRegistryDetailDialog","showEntityRegistryDetailDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","all","element","systemLogDetailParams","fireEvent","dialogTag","dialogImport","dialogParams","HaConfigEntityRegistry","property","memoize","_language","title","template","html","_this2","localize","sortable","filterable","direction","platform","_templateObject2","disabled_by","disabledBy","_templateObject3","showDisabled","filter","entity","map","_this3","_unsubEntities","_entities","_templateObject5","_showDisabled","_showDisabledChanged","_columns","language","_filteredEntities","_openEditEntry","_templateObject4","changedProps","_this4","connection","ev","target","checked","entryId","detail","id","find","_templateObject6","LitElement"],"mappings":"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","file":"chunk.8fdf23757c3d0ea0d9c6.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  counter: \"hass:counter\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  persistent_notification: \"hass:bell\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n  zone: \"hass:map-marker\",\n};\n\nexport const domainIcon = (domain: string, state?: string): string => {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n};\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport { domainIcon } from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\n\nimport { computeDomain } from \"./compute_domain\";\nimport { domainIcon } from \"./domain_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icon\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n","import { customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface EntityRegistryEntry {\n  entity_id: string;\n  name: string;\n  platform: string;\n  config_entry_id?: string;\n  device_id?: string;\n  disabled_by: string | null;\n}\n\nexport interface EntityRegistryEntryUpdateParams {\n  name?: string | null;\n  disabled_by?: string | null;\n  new_entity_id?: string;\n}\n\nexport const computeEntityRegistryName = (\n  hass: HomeAssistant,\n  entry: EntityRegistryEntry\n): string | null => {\n  if (entry.name) {\n    return entry.name;\n  }\n  const state = hass.states[entry.entity_id];\n  return state ? computeStateName(state) : null;\n};\n\nexport const updateEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string,\n  updates: Partial<EntityRegistryEntryUpdateParams>\n): Promise<EntityRegistryEntry> =>\n  hass.callWS<EntityRegistryEntry>({\n    type: \"config/entity_registry/update\",\n    entity_id: entityId,\n    ...updates,\n  });\n\nexport const removeEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"config/entity_registry/remove\",\n    entity_id: entityId,\n  });\n\nconst fetchEntityRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/entity_registry/list\",\n  });\n\nconst subscribeEntityRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchEntityRegistry(conn).then((entities) =>\n          store.setState(entities, true)\n        ),\n      500,\n      true\n    ),\n    \"entity_registry_updated\"\n  );\n\nexport const subscribeEntityRegistry = (\n  conn: Connection,\n  onChange: (entities: EntityRegistryEntry[]) => void\n) =>\n  createCollection<EntityRegistryEntry[]>(\n    \"_entityRegistry\",\n    fetchEntityRegistry,\n    subscribeEntityRegistryUpdates,\n    conn,\n    onChange\n  );\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityRegistryEntry } from \"../../../data/entity_registry\";\n\nexport interface EntityRegistryDetailDialogParams {\n  entry: EntityRegistryEntry;\n}\n\nexport const loadEntityRegistryDetailDialog = () =>\n  import(/* webpackChunkName: \"entity-registry-detail-dialog\" */ \"./dialog-entity-registry-detail\");\n\nexport const showEntityRegistryDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: EntityRegistryDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-entity-registry-detail\",\n    dialogImport: loadEntityRegistryDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  EntityRegistryEntry,\n  computeEntityRegistryName,\n  subscribeEntityRegistry,\n} from \"../../../data/entity_registry\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-switch\";\nimport { domainIcon } from \"../../../common/entity/domain_icon\";\nimport { stateIcon } from \"../../../common/entity/state_icon\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport {\n  showEntityRegistryDetailDialog,\n  loadEntityRegistryDetailDialog,\n} from \"./show-dialog-entity-registry-detail\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\n// tslint:disable-next-line\nimport { HaSwitch } from \"../../../components/ha-switch\";\nimport memoize from \"memoize-one\";\n// tslint:disable-next-line\nimport {\n  DataTableColumnContainer,\n  RowClickedEvent,\n} from \"../../../components/data-table/ha-data-table\";\n\nclass HaConfigEntityRegistry extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() private _entities?: EntityRegistryEntry[];\n  @property() private _showDisabled = false;\n  private _unsubEntities?: UnsubscribeFunc;\n\n  private _columns = memoize(\n    (_language): DataTableColumnContainer => {\n      return {\n        icon: {\n          title: \"\",\n          type: \"icon\",\n          template: (icon) => html`\n            <ha-icon slot=\"item-icon\" .icon=${icon}></ha-icon>\n          `,\n        },\n        name: {\n          title: this.hass.localize(\n            \"ui.panel.config.entity_registry.picker.headers.name\"\n          ),\n          sortable: true,\n          filterable: true,\n          direction: \"asc\",\n        },\n        entity_id: {\n          title: this.hass.localize(\n            \"ui.panel.config.entity_registry.picker.headers.entity_id\"\n          ),\n          sortable: true,\n          filterable: true,\n        },\n        platform: {\n          title: this.hass.localize(\n            \"ui.panel.config.entity_registry.picker.headers.integration\"\n          ),\n          sortable: true,\n          filterable: true,\n          template: (platform) =>\n            html`\n              ${this.hass.localize(`component.${platform}.config.title`) ||\n                platform}\n            `,\n        },\n        disabled_by: {\n          title: this.hass.localize(\n            \"ui.panel.config.entity_registry.picker.headers.enabled\"\n          ),\n          type: \"icon\",\n          template: (disabledBy) => html`\n            <ha-icon\n              slot=\"item-icon\"\n              .icon=${disabledBy ? \"hass:cancel\" : \"hass:check-circle\"}\n            ></ha-icon>\n          `,\n        },\n      };\n    }\n  );\n\n  private _filteredEntities = memoize(\n    (entities: EntityRegistryEntry[], showDisabled: boolean) =>\n      (showDisabled\n        ? entities\n        : entities.filter((entity) => !Boolean(entity.disabled_by))\n      ).map((entry) => {\n        const state = this.hass!.states[entry.entity_id];\n        return {\n          ...entry,\n          icon: state\n            ? stateIcon(state)\n            : domainIcon(computeDomain(entry.entity_id)),\n          name:\n            computeEntityRegistryName(this.hass!, entry) ||\n            this.hass!.localize(\"state.default.unavailable\"),\n        };\n      })\n  );\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEntities) {\n      this._unsubEntities();\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || this._entities === undefined) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    return html`\n      <hass-subpage\n        header=\"${this.hass.localize(\n          \"ui.panel.config.entity_registry.caption\"\n        )}\"\n      >\n      <div class=\"content\">\n        <div class=\"intro\">\n          <h2>\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.picker.header\"\n            )}\n          </h2>\n          <p>\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.picker.introduction\"\n            )}\n            <p>\n              ${this.hass.localize(\n                \"ui.panel.config.entity_registry.picker.introduction2\"\n              )}\n            </p>\n            <a href=\"/config/integrations\">\n              ${this.hass.localize(\n                \"ui.panel.config.entity_registry.picker.integrations_page\"\n              )}\n            </a>\n            <ha-switch\n              ?checked=${this._showDisabled}\n              @change=${this._showDisabledChanged}\n              >${this.hass.localize(\n                \"ui.panel.config.entity_registry.picker.show_disabled\"\n              )}\n            </ha-switch>\n          </div>\n        </p>\n        <ha-data-table\n          .columns=${this._columns(this.hass.language)}\n          .data=${this._filteredEntities(this._entities, this._showDisabled)}\n          @row-click=${this._openEditEntry}\n          id=\"entity_id\"\n        >\n        </ha-data-table>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n    loadEntityRegistryDetailDialog();\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    if (!this._unsubEntities) {\n      this._unsubEntities = subscribeEntityRegistry(\n        this.hass.connection,\n        (entities) => {\n          this._entities = entities;\n        }\n      );\n    }\n  }\n\n  private _showDisabledChanged(ev: Event) {\n    this._showDisabled = (ev.target as HaSwitch).checked;\n  }\n\n  private _openEditEntry(ev: CustomEvent): void {\n    const entryId = (ev.detail as RowClickedEvent).id;\n    const entry = this._entities!.find(\n      (entity) => entity.entity_id === entryId\n    );\n    if (!entry) {\n      return;\n    }\n    showEntityRegistryDetailDialog(this, {\n      entry,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      h2 {\n        margin-top: 0;\n        font-family: var(--paper-font-display1_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-display1_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-display1_-_font-size);\n        font-weight: var(--paper-font-display1_-_font-weight);\n        letter-spacing: var(--paper-font-display1_-_letter-spacing);\n        line-height: var(--paper-font-display1_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n      p {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-subhead_-_font-size);\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n      .intro {\n        padding: 24px 16px 0;\n      }\n      .content {\n        padding: 4px;\n      }\n      ha-data-table {\n        margin-bottom: 24px;\n        margin-top: 0px;\n      }\n      ha-switch {\n        margin-top: 16px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-entity-registry\", HaConfigEntityRegistry);\n"],"sourceRoot":""}