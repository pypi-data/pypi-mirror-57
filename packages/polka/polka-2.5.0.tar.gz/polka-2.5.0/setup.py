# -*- coding: utf-8 -*-
from distutils.core import setup

modules = \
['polka']
setup_kwargs = {
    'name': 'polka',
    'version': '2.5.0',
    'description': 'A module provides access to the public Polka API. (https://polka.academy/).',
    'long_description': '# ПОЛКА\n\nPython модуль для доступа к API образовательного проекта [«Полка»](https://polka.academy).\n\n## Установка\n\nДля работы модуля требуется Python 3.6+. Никаких зависимостей, кроме стандартной библиотеки нет.\n\n```python\npip install polka\n```\n\n## Использование\n\nДля получения данных в сыром виде «как есть», существуют функции `rawbooks`, `rawbook`, `rawsearch`, `rawlists`, `rawlist` и другие начинающиеся на `raw`.\n\n\n```python\n>>> import polka\n\n>>> [func for func in dir(polka) if func.startswith("raw")]\n[\'rawbook\', \'rawbooks\', \'rawlist\', \'rawlists\', \'rawpunditfavs\', \'rawpunditposts\', \'rawpundits\', \'rawsearch\']\n```\n\nНо удобнее использовать функции `books`, `lists`, `pundits`, `search` и объекты `Book`, `Compilation` и `Pundit`.\n\nФункция `books` возвращает список книг, каждая из которых является объектом `Book`.\n\n```python\n>>> for book in polka.books()[:3]:\n...     assert isinstance(book, polka.Book)\n...     print(f"{book.title:<25} {book.year.start}")\nГерой нашего времени      1840\nАнна Каренина             1877\nМёртвые души              1842\n```\n\n`Book` содержит всю доступную информацию о книге, включая вопросы и ответы (если имеются).\n\n```python\n>>> book\nBook(title=\'Мёртвые души\', authors=[\'Николай Гоголь\'])\n\n>>> book.description\n\'Великая поэма, праздник нелепости и гротеска, от которой парадоксальным образом отсчитывают историю русского реализма. Задумав трёхчастное произведение по образцу «Божественной комедии», Гоголь успел завершить только первый том — в котором ввёл в литературу нового героя, дельца и плута, и создал бессмертный образ России как птицы-тройки, несущейся в неизвестном направлении.\'\n\n>>> book.pundit\nPundit(name=\'Варвара Бабицкая\')\n\n>>> item = book.questions[0] # first question\n>>> item.question\n\'О чём эта книга?\'\n\n>>> item.answer # or item.answer_with_notes\n\'В губернский город N. приезжает отставной чиновник Павел Иванович Чичиков, человек, лишённый отличительных черт и всем приходящийся по нраву. Очаровав губернатора, городских чиновников и окрестных помещиков, Чичиков начинает объезжать последних с загадочной целью: он скупает мёртвые души, то есть умерших недавно крепостных, которые ещё не внесены в ревизскую сказку и потому формально считаются живыми. Навестив последовательно карикатурных, каждый в своём роде, Собакевича, Манилова, Плюшкина, Коробочку и Ноздрёва, Чичиков оформляет купчие и готовится довести до конца свой таинственный план, но к концу первого (и единственного завершённого) тома поэмы в городе N. сгущаются какие-то хтонические силы, разражается скандал, и Чичиков, по формулировке Набокова, «покидает город на крыльях одного из тех восхитительных лирических отступлений... которые писатель всякий раз размещает между деловыми встречами персонажа». Так заканчивается первый том поэмы, задуманной Гоголем в трёх частях; третий том так и не был написан, а второй Гоголь сжёг — сегодня нам доступны только его реконструкции по сохранившимся отрывкам, причём в разных редакциях, поэтому, говоря о «Мёртвых душах», мы подразумеваем в общем случае только первый их том, завершённый и опубликованный автором.\'\n```\n\nФункция `pundits` возвращает список представленных на сайте экспертов.\n\n```python\n>>> for expert in polka.pundits()[:3]:\n...     assert isinstance(expert, polka.Pundit)\n...     print(expert)\nPundit(name=\'Евгения Абелюк\')\nPundit(name=\'Михаил Айзенберг\')\nPundit(name=\'Александр Архангельский\')\n```\n\nКаждый эксперт представлен объектом `Pundit`.\n\n```python\n>>> expert\nPundit(name=\'Варвара Бабицкая\')\n\n>>> expert.credit\n\'Литературный критик, редактор проекта «Полка»\'\n\n>>> expert.description\n\'Редактор, литературный критик, переводчик. Редактор проекта «Полка». Делала литературные и культурные разделы и печаталась на портале OpenSpace.ru, а затем Colta.ru, в проекте «Сноб», на радио «Свободная Европа»/«Радио Свобода», в журнале The New Times, писала для сайта «Афиша–Воздух», сайта «Горький» и других. Как редактор и переводчик сделала несколько книг для издательств «НЛО», Corpus, «Стрелка».\'\n\n>>> for book in expert.wrote_about:\n...     print(book)\nBook(title=\'Горе от ума\', authors=[\'Александр Грибоедов\'])\nBook(title=\'Житие протопопа Аввакума\', authors=[\'Аввакум Петров\'])\nBook(title=\'Картины прошедшего\', authors=[\'Александр Сухово-Кобылин\'])\nBook(title=\'Колымские рассказы\', authors=[\'Варлам Шаламов\'])\nBook(title=\'Леди Макбет Мценского уезда\', authors=[\'Николай Лесков\'])\nBook(title=\'Мёртвые души\', authors=[\'Николай Гоголь\'])\n\n>>> expert.favorites\n[]\n```\n\nФункция `lists` возвращает компиляции книг по темам и направлениям.\n\n```python\n>>> for compilation in polka.lists()[:3]:\n...     print(compilation)\nCompilation(title=\'Древняя Русь\')\nCompilation(title=\'Русский классицизм\')\nCompilation(title=\'Открытие истории\')\n```\n\nКаждый список представлен объектом `Compilation`.\n\n```python\n>>> compilation\nCompilation(title=\'Антиутопия\')\n\n>>> compilation.short_description\n\'От строительства «Интеграла» до Дня открытых убийств\'\n\n>>> compilation.description\n\'Первопроходцем жанра антиутопии в XX веке оказывается Евгений Замятин, однако затем эстафету подхватывают Америка и Европа: в Советском Союзе антиутопия перестаёт быть фактом литературы и реализуется на практике. Создатели советских антиутопий, появившихся после долгого перерыва, уже учитывали опыт Хаксли и Оруэлла, имея, однако, перед ними то жутковатое преимущество, что советские антиутопии пишутся во многом с натуры. Тоталитарное государство посягает на основные права и потребности человека, распоряжается его жизнью и свободой, залезает к нему в постель, в кастрюлю и в голову, а литература пытается понять те социальные и психические механизмы, которые сделали это возможным: сперва противясь наступлению тоталитаризма, человек со временем приспосабливается и даже пытается использовать с итуацию к своей выгоде.\'\n\n>>> for book in compilation.books:\n...     print(book)\nBook(title=\'Мы\', authors=[\'Евгений Замятин\'])\nBook(title=\'Говорит Москва\', authors=[\'Юлий Даниэль\'])\nBook(title=\'Улитка на склоне\', authors=[\'Аркадий Стругацкий\', \'Борис Стругацкий\'])\nBook(title=\'Невозвращенец\', authors=[\'Александр Кабаков\'])\n```\n\nФункция `search` ищет указанную подстроку среди статей, списков и экспертов.\n\n```python\n>>> for title, entry, obj in polka.search("двойник")[:3]:\n...     assert isinstance(obj, (polka.Book, polka.Pundit, polka.Compilation))\n...     print(f"{title.upper()}: ...{entry}...")\nФЁДОР ДОСТОЕВСКИЙ «БЕДНЫЕ ЛЮДИ»: ...людей», Достоевский сразу же принялся за повесть «Двойник» о...\nАЛЕКСАНДР ПУШКИН «ЦЫГАНЫ»: ...выполняет важную функцию в сюжете поэмы — своеобразного двойника...\nМИХАИЛ ЛЕРМОНТОВ «ГЕРОЙ НАШЕГО ВРЕМЕНИ»: ...Как и пародийный Грушницкий, этот двойник должен быть...\n```\n\n[🔝](#ПОЛКА)',
    'author': 'Dima Koskin',
    'author_email': 'dmksknn@gmail.com',
    'url': 'https://github.com/dmkskn/polka/',
    'py_modules': modules,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
